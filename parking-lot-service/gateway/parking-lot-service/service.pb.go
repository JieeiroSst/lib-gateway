// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: parking-lot-service/service.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParkingSpot_SpotType int32

const (
	ParkingSpot_UNKNOWN    ParkingSpot_SpotType = 0
	ParkingSpot_CAR        ParkingSpot_SpotType = 1
	ParkingSpot_MOTORCYCLE ParkingSpot_SpotType = 2
	ParkingSpot_TRUCK      ParkingSpot_SpotType = 3
)

// Enum value maps for ParkingSpot_SpotType.
var (
	ParkingSpot_SpotType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CAR",
		2: "MOTORCYCLE",
		3: "TRUCK",
	}
	ParkingSpot_SpotType_value = map[string]int32{
		"UNKNOWN":    0,
		"CAR":        1,
		"MOTORCYCLE": 2,
		"TRUCK":      3,
	}
)

func (x ParkingSpot_SpotType) Enum() *ParkingSpot_SpotType {
	p := new(ParkingSpot_SpotType)
	*p = x
	return p
}

func (x ParkingSpot_SpotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParkingSpot_SpotType) Descriptor() protoreflect.EnumDescriptor {
	return file_parking_lot_service_service_proto_enumTypes[0].Descriptor()
}

func (ParkingSpot_SpotType) Type() protoreflect.EnumType {
	return &file_parking_lot_service_service_proto_enumTypes[0]
}

func (x ParkingSpot_SpotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParkingSpot_SpotType.Descriptor instead.
func (ParkingSpot_SpotType) EnumDescriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{0, 0}
}

type Vehicle_VehicleType int32

const (
	Vehicle_UNKNOWN    Vehicle_VehicleType = 0
	Vehicle_CAR        Vehicle_VehicleType = 1
	Vehicle_MOTORCYCLE Vehicle_VehicleType = 2
	Vehicle_TRUCK      Vehicle_VehicleType = 3
)

// Enum value maps for Vehicle_VehicleType.
var (
	Vehicle_VehicleType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CAR",
		2: "MOTORCYCLE",
		3: "TRUCK",
	}
	Vehicle_VehicleType_value = map[string]int32{
		"UNKNOWN":    0,
		"CAR":        1,
		"MOTORCYCLE": 2,
		"TRUCK":      3,
	}
)

func (x Vehicle_VehicleType) Enum() *Vehicle_VehicleType {
	p := new(Vehicle_VehicleType)
	*p = x
	return p
}

func (x Vehicle_VehicleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vehicle_VehicleType) Descriptor() protoreflect.EnumDescriptor {
	return file_parking_lot_service_service_proto_enumTypes[1].Descriptor()
}

func (Vehicle_VehicleType) Type() protoreflect.EnumType {
	return &file_parking_lot_service_service_proto_enumTypes[1]
}

func (x Vehicle_VehicleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vehicle_VehicleType.Descriptor instead.
func (Vehicle_VehicleType) EnumDescriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{1, 0}
}

type ListSpotsRequest_SpotType int32

const (
	ListSpotsRequest_ALL        ListSpotsRequest_SpotType = 0
	ListSpotsRequest_CAR        ListSpotsRequest_SpotType = 1
	ListSpotsRequest_MOTORCYCLE ListSpotsRequest_SpotType = 2
	ListSpotsRequest_TRUCK      ListSpotsRequest_SpotType = 3
)

// Enum value maps for ListSpotsRequest_SpotType.
var (
	ListSpotsRequest_SpotType_name = map[int32]string{
		0: "ALL",
		1: "CAR",
		2: "MOTORCYCLE",
		3: "TRUCK",
	}
	ListSpotsRequest_SpotType_value = map[string]int32{
		"ALL":        0,
		"CAR":        1,
		"MOTORCYCLE": 2,
		"TRUCK":      3,
	}
)

func (x ListSpotsRequest_SpotType) Enum() *ListSpotsRequest_SpotType {
	p := new(ListSpotsRequest_SpotType)
	*p = x
	return p
}

func (x ListSpotsRequest_SpotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListSpotsRequest_SpotType) Descriptor() protoreflect.EnumDescriptor {
	return file_parking_lot_service_service_proto_enumTypes[2].Descriptor()
}

func (ListSpotsRequest_SpotType) Type() protoreflect.EnumType {
	return &file_parking_lot_service_service_proto_enumTypes[2]
}

func (x ListSpotsRequest_SpotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListSpotsRequest_SpotType.Descriptor instead.
func (ListSpotsRequest_SpotType) EnumDescriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{4, 0}
}

type ListVehiclesRequest_VehicleType int32

const (
	ListVehiclesRequest_ALL        ListVehiclesRequest_VehicleType = 0
	ListVehiclesRequest_CAR        ListVehiclesRequest_VehicleType = 1
	ListVehiclesRequest_MOTORCYCLE ListVehiclesRequest_VehicleType = 2
	ListVehiclesRequest_TRUCK      ListVehiclesRequest_VehicleType = 3
)

// Enum value maps for ListVehiclesRequest_VehicleType.
var (
	ListVehiclesRequest_VehicleType_name = map[int32]string{
		0: "ALL",
		1: "CAR",
		2: "MOTORCYCLE",
		3: "TRUCK",
	}
	ListVehiclesRequest_VehicleType_value = map[string]int32{
		"ALL":        0,
		"CAR":        1,
		"MOTORCYCLE": 2,
		"TRUCK":      3,
	}
)

func (x ListVehiclesRequest_VehicleType) Enum() *ListVehiclesRequest_VehicleType {
	p := new(ListVehiclesRequest_VehicleType)
	*p = x
	return p
}

func (x ListVehiclesRequest_VehicleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListVehiclesRequest_VehicleType) Descriptor() protoreflect.EnumDescriptor {
	return file_parking_lot_service_service_proto_enumTypes[3].Descriptor()
}

func (ListVehiclesRequest_VehicleType) Type() protoreflect.EnumType {
	return &file_parking_lot_service_service_proto_enumTypes[3]
}

func (x ListVehiclesRequest_VehicleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListVehiclesRequest_VehicleType.Descriptor instead.
func (ListVehiclesRequest_VehicleType) EnumDescriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{10, 0}
}

type ParkingSpot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotId      int32                `protobuf:"varint,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	Type        ParkingSpot_SpotType `protobuf:"varint,2,opt,name=type,proto3,enum=parking.ParkingSpot_SpotType" json:"type,omitempty"`
	IsAvailable bool                 `protobuf:"varint,3,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
}

func (x *ParkingSpot) Reset() {
	*x = ParkingSpot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkingSpot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkingSpot) ProtoMessage() {}

func (x *ParkingSpot) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkingSpot.ProtoReflect.Descriptor instead.
func (*ParkingSpot) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *ParkingSpot) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *ParkingSpot) GetType() ParkingSpot_SpotType {
	if x != nil {
		return x.Type
	}
	return ParkingSpot_UNKNOWN
}

func (x *ParkingSpot) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string              `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	Type         Vehicle_VehicleType `protobuf:"varint,2,opt,name=type,proto3,enum=parking.Vehicle_VehicleType" json:"type,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *Vehicle) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *Vehicle) GetType() Vehicle_VehicleType {
	if x != nil {
		return x.Type
	}
	return Vehicle_UNKNOWN
}

type ParkingHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryId    int32                  `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	VehiclePlate string                 `protobuf:"bytes,2,opt,name=vehicle_plate,json=vehiclePlate,proto3" json:"vehicle_plate,omitempty"`
	SpotId       int32                  `protobuf:"varint,3,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	ParkedTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=parked_time,json=parkedTime,proto3" json:"parked_time,omitempty"`
	LeaveTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=leave_time,json=leaveTime,proto3" json:"leave_time,omitempty"`
}

func (x *ParkingHistory) Reset() {
	*x = ParkingHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkingHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkingHistory) ProtoMessage() {}

func (x *ParkingHistory) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkingHistory.ProtoReflect.Descriptor instead.
func (*ParkingHistory) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *ParkingHistory) GetHistoryId() int32 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

func (x *ParkingHistory) GetVehiclePlate() string {
	if x != nil {
		return x.VehiclePlate
	}
	return ""
}

func (x *ParkingHistory) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *ParkingHistory) GetParkedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ParkedTime
	}
	return nil
}

func (x *ParkingHistory) GetLeaveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LeaveTime
	}
	return nil
}

type GetSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotId int32 `protobuf:"varint,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
}

func (x *GetSpotRequest) Reset() {
	*x = GetSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpotRequest) ProtoMessage() {}

func (x *GetSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpotRequest.ProtoReflect.Descriptor instead.
func (*GetSpotRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpotRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

type ListSpotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFilter    ListSpotsRequest_SpotType `protobuf:"varint,1,opt,name=type_filter,json=typeFilter,proto3,enum=parking.ListSpotsRequest_SpotType" json:"type_filter,omitempty"`
	AvailableOnly bool                      `protobuf:"varint,2,opt,name=available_only,json=availableOnly,proto3" json:"available_only,omitempty"`
	PageSize      int32                     `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                    `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSpotsRequest) Reset() {
	*x = ListSpotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpotsRequest) ProtoMessage() {}

func (x *ListSpotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpotsRequest.ProtoReflect.Descriptor instead.
func (*ListSpotsRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListSpotsRequest) GetTypeFilter() ListSpotsRequest_SpotType {
	if x != nil {
		return x.TypeFilter
	}
	return ListSpotsRequest_ALL
}

func (x *ListSpotsRequest) GetAvailableOnly() bool {
	if x != nil {
		return x.AvailableOnly
	}
	return false
}

func (x *ListSpotsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSpotsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSpotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spots         []*ParkingSpot `protobuf:"bytes,1,rep,name=spots,proto3" json:"spots,omitempty"`
	NextPageToken string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSpotsResponse) Reset() {
	*x = ListSpotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpotsResponse) ProtoMessage() {}

func (x *ListSpotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpotsResponse.ProtoReflect.Descriptor instead.
func (*ListSpotsResponse) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSpotsResponse) GetSpots() []*ParkingSpot {
	if x != nil {
		return x.Spots
	}
	return nil
}

func (x *ListSpotsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotId      int32                `protobuf:"varint,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	Type        ParkingSpot_SpotType `protobuf:"varint,2,opt,name=type,proto3,enum=parking.ParkingSpot_SpotType" json:"type,omitempty"`
	IsAvailable bool                 `protobuf:"varint,3,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
}

func (x *CreateSpotRequest) Reset() {
	*x = CreateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpotRequest) ProtoMessage() {}

func (x *CreateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpotRequest.ProtoReflect.Descriptor instead.
func (*CreateSpotRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSpotRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *CreateSpotRequest) GetType() ParkingSpot_SpotType {
	if x != nil {
		return x.Type
	}
	return ParkingSpot_UNKNOWN
}

func (x *CreateSpotRequest) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

type UpdateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotId int32        `protobuf:"varint,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	Spot   *ParkingSpot `protobuf:"bytes,2,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *UpdateSpotRequest) Reset() {
	*x = UpdateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpotRequest) ProtoMessage() {}

func (x *UpdateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpotRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpotRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSpotRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *UpdateSpotRequest) GetSpot() *ParkingSpot {
	if x != nil {
		return x.Spot
	}
	return nil
}

type DeleteSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotId int32 `protobuf:"varint,1,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
}

func (x *DeleteSpotRequest) Reset() {
	*x = DeleteSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpotRequest) ProtoMessage() {}

func (x *DeleteSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpotRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpotRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSpotRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

type GetVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
}

func (x *GetVehicleRequest) Reset() {
	*x = GetVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVehicleRequest) ProtoMessage() {}

func (x *GetVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVehicleRequest.ProtoReflect.Descriptor instead.
func (*GetVehicleRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetVehicleRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

type ListVehiclesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFilter ListVehiclesRequest_VehicleType `protobuf:"varint,1,opt,name=type_filter,json=typeFilter,proto3,enum=parking.ListVehiclesRequest_VehicleType" json:"type_filter,omitempty"`
	PageSize   int32                           `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken  string                          `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListVehiclesRequest) Reset() {
	*x = ListVehiclesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVehiclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVehiclesRequest) ProtoMessage() {}

func (x *ListVehiclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVehiclesRequest.ProtoReflect.Descriptor instead.
func (*ListVehiclesRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListVehiclesRequest) GetTypeFilter() ListVehiclesRequest_VehicleType {
	if x != nil {
		return x.TypeFilter
	}
	return ListVehiclesRequest_ALL
}

func (x *ListVehiclesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVehiclesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVehiclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vehicles      []*Vehicle `protobuf:"bytes,1,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
	NextPageToken string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListVehiclesResponse) Reset() {
	*x = ListVehiclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVehiclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVehiclesResponse) ProtoMessage() {}

func (x *ListVehiclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVehiclesResponse.ProtoReflect.Descriptor instead.
func (*ListVehiclesResponse) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListVehiclesResponse) GetVehicles() []*Vehicle {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

func (x *ListVehiclesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string              `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	Type         Vehicle_VehicleType `protobuf:"varint,2,opt,name=type,proto3,enum=parking.Vehicle_VehicleType" json:"type,omitempty"`
}

func (x *CreateVehicleRequest) Reset() {
	*x = CreateVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVehicleRequest) ProtoMessage() {}

func (x *CreateVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVehicleRequest.ProtoReflect.Descriptor instead.
func (*CreateVehicleRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateVehicleRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CreateVehicleRequest) GetType() Vehicle_VehicleType {
	if x != nil {
		return x.Type
	}
	return Vehicle_UNKNOWN
}

type UpdateVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string   `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	Vehicle      *Vehicle `protobuf:"bytes,2,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
}

func (x *UpdateVehicleRequest) Reset() {
	*x = UpdateVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVehicleRequest) ProtoMessage() {}

func (x *UpdateVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVehicleRequest.ProtoReflect.Descriptor instead.
func (*UpdateVehicleRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateVehicleRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *UpdateVehicleRequest) GetVehicle() *Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

type DeleteVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
}

func (x *DeleteVehicleRequest) Reset() {
	*x = DeleteVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVehicleRequest) ProtoMessage() {}

func (x *DeleteVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVehicleRequest.ProtoReflect.Descriptor instead.
func (*DeleteVehicleRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteVehicleRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

type ParkVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicensePlate string                 `protobuf:"bytes,1,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	SpotId       int32                  `protobuf:"varint,2,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	ParkedTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=parked_time,json=parkedTime,proto3" json:"parked_time,omitempty"`
}

func (x *ParkVehicleRequest) Reset() {
	*x = ParkVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkVehicleRequest) ProtoMessage() {}

func (x *ParkVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkVehicleRequest.ProtoReflect.Descriptor instead.
func (*ParkVehicleRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{15}
}

func (x *ParkVehicleRequest) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *ParkVehicleRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *ParkVehicleRequest) GetParkedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ParkedTime
	}
	return nil
}

type LeaveParkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryId int32                  `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	LeaveTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=leave_time,json=leaveTime,proto3" json:"leave_time,omitempty"`
}

func (x *LeaveParkingRequest) Reset() {
	*x = LeaveParkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveParkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveParkingRequest) ProtoMessage() {}

func (x *LeaveParkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveParkingRequest.ProtoReflect.Descriptor instead.
func (*LeaveParkingRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{16}
}

func (x *LeaveParkingRequest) GetHistoryId() int32 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

func (x *LeaveParkingRequest) GetLeaveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LeaveTime
	}
	return nil
}

type GetParkingHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryId int32 `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
}

func (x *GetParkingHistoryRequest) Reset() {
	*x = GetParkingHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParkingHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParkingHistoryRequest) ProtoMessage() {}

func (x *GetParkingHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParkingHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetParkingHistoryRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetParkingHistoryRequest) GetHistoryId() int32 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

type SearchParkingHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehiclePlate string                 `protobuf:"bytes,1,opt,name=vehicle_plate,json=vehiclePlate,proto3" json:"vehicle_plate,omitempty"`
	SpotId       int32                  `protobuf:"varint,2,opt,name=spot_id,json=spotId,proto3" json:"spot_id,omitempty"`
	StartTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ActiveOnly   bool                   `protobuf:"varint,5,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	PageSize     int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string                 `protobuf:"bytes,7,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *SearchParkingHistoryRequest) Reset() {
	*x = SearchParkingHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParkingHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParkingHistoryRequest) ProtoMessage() {}

func (x *SearchParkingHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParkingHistoryRequest.ProtoReflect.Descriptor instead.
func (*SearchParkingHistoryRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{18}
}

func (x *SearchParkingHistoryRequest) GetVehiclePlate() string {
	if x != nil {
		return x.VehiclePlate
	}
	return ""
}

func (x *SearchParkingHistoryRequest) GetSpotId() int32 {
	if x != nil {
		return x.SpotId
	}
	return 0
}

func (x *SearchParkingHistoryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SearchParkingHistoryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SearchParkingHistoryRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *SearchParkingHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchParkingHistoryRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type SearchParkingHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryRecords []*ParkingHistory `protobuf:"bytes,1,rep,name=history_records,json=historyRecords,proto3" json:"history_records,omitempty"`
	NextPageToken  string            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *SearchParkingHistoryResponse) Reset() {
	*x = SearchParkingHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParkingHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParkingHistoryResponse) ProtoMessage() {}

func (x *SearchParkingHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParkingHistoryResponse.ProtoReflect.Descriptor instead.
func (*SearchParkingHistoryResponse) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{19}
}

func (x *SearchParkingHistoryResponse) GetHistoryRecords() []*ParkingHistory {
	if x != nil {
		return x.HistoryRecords
	}
	return nil
}

func (x *SearchParkingHistoryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetOccupancyReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	GroupByType bool                   `protobuf:"varint,3,opt,name=group_by_type,json=groupByType,proto3" json:"group_by_type,omitempty"`
}

func (x *GetOccupancyReportRequest) Reset() {
	*x = GetOccupancyReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOccupancyReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOccupancyReportRequest) ProtoMessage() {}

func (x *GetOccupancyReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOccupancyReportRequest.ProtoReflect.Descriptor instead.
func (*GetOccupancyReportRequest) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetOccupancyReportRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetOccupancyReportRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetOccupancyReportRequest) GetGroupByType() bool {
	if x != nil {
		return x.GroupByType
	}
	return false
}

type OccupancyReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverallAverageOccupancyRate float64                          `protobuf:"fixed64,1,opt,name=overall_average_occupancy_rate,json=overallAverageOccupancyRate,proto3" json:"overall_average_occupancy_rate,omitempty"`
	OverallPeakOccupiedSpots    int32                            `protobuf:"varint,2,opt,name=overall_peak_occupied_spots,json=overallPeakOccupiedSpots,proto3" json:"overall_peak_occupied_spots,omitempty"`
	OverallPeakTime             *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=overall_peak_time,json=overallPeakTime,proto3" json:"overall_peak_time,omitempty"`
	TypeOccupancy               []*OccupancyReport_TypeOccupancy `protobuf:"bytes,4,rep,name=type_occupancy,json=typeOccupancy,proto3" json:"type_occupancy,omitempty"`
}

func (x *OccupancyReport) Reset() {
	*x = OccupancyReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupancyReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupancyReport) ProtoMessage() {}

func (x *OccupancyReport) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupancyReport.ProtoReflect.Descriptor instead.
func (*OccupancyReport) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{21}
}

func (x *OccupancyReport) GetOverallAverageOccupancyRate() float64 {
	if x != nil {
		return x.OverallAverageOccupancyRate
	}
	return 0
}

func (x *OccupancyReport) GetOverallPeakOccupiedSpots() int32 {
	if x != nil {
		return x.OverallPeakOccupiedSpots
	}
	return 0
}

func (x *OccupancyReport) GetOverallPeakTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OverallPeakTime
	}
	return nil
}

func (x *OccupancyReport) GetTypeOccupancy() []*OccupancyReport_TypeOccupancy {
	if x != nil {
		return x.TypeOccupancy
	}
	return nil
}

type OccupancyReport_TypeOccupancy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AverageOccupancyRate float64                `protobuf:"fixed64,2,opt,name=average_occupancy_rate,json=averageOccupancyRate,proto3" json:"average_occupancy_rate,omitempty"`
	PeakOccupiedSpots    int32                  `protobuf:"varint,3,opt,name=peak_occupied_spots,json=peakOccupiedSpots,proto3" json:"peak_occupied_spots,omitempty"`
	PeakTime             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=peak_time,json=peakTime,proto3" json:"peak_time,omitempty"`
}

func (x *OccupancyReport_TypeOccupancy) Reset() {
	*x = OccupancyReport_TypeOccupancy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_lot_service_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupancyReport_TypeOccupancy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupancyReport_TypeOccupancy) ProtoMessage() {}

func (x *OccupancyReport_TypeOccupancy) ProtoReflect() protoreflect.Message {
	mi := &file_parking_lot_service_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupancyReport_TypeOccupancy.ProtoReflect.Descriptor instead.
func (*OccupancyReport_TypeOccupancy) Descriptor() ([]byte, []int) {
	return file_parking_lot_service_service_proto_rawDescGZIP(), []int{21, 0}
}

func (x *OccupancyReport_TypeOccupancy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OccupancyReport_TypeOccupancy) GetAverageOccupancyRate() float64 {
	if x != nil {
		return x.AverageOccupancyRate
	}
	return 0
}

func (x *OccupancyReport_TypeOccupancy) GetPeakOccupiedSpots() int32 {
	if x != nil {
		return x.PeakOccupiedSpots
	}
	return 0
}

func (x *OccupancyReport_TypeOccupancy) GetPeakTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PeakTime
	}
	return nil
}

var File_parking_lot_service_service_proto protoreflect.FileDescriptor

var file_parking_lot_service_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x6c, 0x6f, 0x74, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x70, 0x6f, 0x74, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x08, 0x53, 0x70, 0x6f, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x54,
	0x4f, 0x52, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x55,
	0x43, 0x4b, 0x10, 0x03, 0x22, 0xa0, 0x01, 0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x03, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x70, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x08, 0x53, 0x70, 0x6f, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x43, 0x59,
	0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x03,
	0x22, 0x67, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74, 0x2e, 0x53, 0x70, 0x6f,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x56,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04,
	0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74,
	0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70,
	0x6f, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xd8,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x0a,
	0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x03, 0x22, 0x6c, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22,
	0x3b, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x8f, 0x01, 0x0a,
	0x12, 0x50, 0x61, 0x72, 0x6b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6f,
	0x0a, 0x13, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x39, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x1b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf1, 0x03, 0x0a, 0x0f, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x1e, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x3d, 0x0a, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x5f,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x61,
	0x6b, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x46,
	0x0a, 0x11, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x50, 0x65,
	0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f,
	0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x63, 0x63, 0x75,
	0x70, 0x61, 0x6e, 0x63, 0x79, 0x1a, 0xc2, 0x01, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x69,
	0x65, 0x64, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x70, 0x65, 0x61, 0x6b, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x53, 0x70, 0x6f, 0x74,
	0x73, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x70, 0x65, 0x61, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xec, 0x0b, 0x0a, 0x0e, 0x50,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x55, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74,
	0x73, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b,
	0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f, 0x74, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x12, 0x61, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12,
	0x1a, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x6f,
	0x74, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x1a,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70,
	0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x60, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x7d, 0x12, 0x61, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x07, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x7d, 0x12, 0x6c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x2f, 0x7b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x7d, 0x12, 0x58, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x6b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x1b, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a,
	0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x6b, 0x12, 0x5b, 0x0a, 0x0c,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x70,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21,
	0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2f,
	0x7b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x14,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x70,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parking_lot_service_service_proto_rawDescOnce sync.Once
	file_parking_lot_service_service_proto_rawDescData = file_parking_lot_service_service_proto_rawDesc
)

func file_parking_lot_service_service_proto_rawDescGZIP() []byte {
	file_parking_lot_service_service_proto_rawDescOnce.Do(func() {
		file_parking_lot_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_parking_lot_service_service_proto_rawDescData)
	})
	return file_parking_lot_service_service_proto_rawDescData
}

var file_parking_lot_service_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_parking_lot_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_parking_lot_service_service_proto_goTypes = []any{
	(ParkingSpot_SpotType)(0),             // 0: parking.ParkingSpot.SpotType
	(Vehicle_VehicleType)(0),              // 1: parking.Vehicle.VehicleType
	(ListSpotsRequest_SpotType)(0),        // 2: parking.ListSpotsRequest.SpotType
	(ListVehiclesRequest_VehicleType)(0),  // 3: parking.ListVehiclesRequest.VehicleType
	(*ParkingSpot)(nil),                   // 4: parking.ParkingSpot
	(*Vehicle)(nil),                       // 5: parking.Vehicle
	(*ParkingHistory)(nil),                // 6: parking.ParkingHistory
	(*GetSpotRequest)(nil),                // 7: parking.GetSpotRequest
	(*ListSpotsRequest)(nil),              // 8: parking.ListSpotsRequest
	(*ListSpotsResponse)(nil),             // 9: parking.ListSpotsResponse
	(*CreateSpotRequest)(nil),             // 10: parking.CreateSpotRequest
	(*UpdateSpotRequest)(nil),             // 11: parking.UpdateSpotRequest
	(*DeleteSpotRequest)(nil),             // 12: parking.DeleteSpotRequest
	(*GetVehicleRequest)(nil),             // 13: parking.GetVehicleRequest
	(*ListVehiclesRequest)(nil),           // 14: parking.ListVehiclesRequest
	(*ListVehiclesResponse)(nil),          // 15: parking.ListVehiclesResponse
	(*CreateVehicleRequest)(nil),          // 16: parking.CreateVehicleRequest
	(*UpdateVehicleRequest)(nil),          // 17: parking.UpdateVehicleRequest
	(*DeleteVehicleRequest)(nil),          // 18: parking.DeleteVehicleRequest
	(*ParkVehicleRequest)(nil),            // 19: parking.ParkVehicleRequest
	(*LeaveParkingRequest)(nil),           // 20: parking.LeaveParkingRequest
	(*GetParkingHistoryRequest)(nil),      // 21: parking.GetParkingHistoryRequest
	(*SearchParkingHistoryRequest)(nil),   // 22: parking.SearchParkingHistoryRequest
	(*SearchParkingHistoryResponse)(nil),  // 23: parking.SearchParkingHistoryResponse
	(*GetOccupancyReportRequest)(nil),     // 24: parking.GetOccupancyReportRequest
	(*OccupancyReport)(nil),               // 25: parking.OccupancyReport
	(*OccupancyReport_TypeOccupancy)(nil), // 26: parking.OccupancyReport.TypeOccupancy
	(*timestamppb.Timestamp)(nil),         // 27: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 28: google.protobuf.Empty
}
var file_parking_lot_service_service_proto_depIdxs = []int32{
	0,  // 0: parking.ParkingSpot.type:type_name -> parking.ParkingSpot.SpotType
	1,  // 1: parking.Vehicle.type:type_name -> parking.Vehicle.VehicleType
	27, // 2: parking.ParkingHistory.parked_time:type_name -> google.protobuf.Timestamp
	27, // 3: parking.ParkingHistory.leave_time:type_name -> google.protobuf.Timestamp
	2,  // 4: parking.ListSpotsRequest.type_filter:type_name -> parking.ListSpotsRequest.SpotType
	4,  // 5: parking.ListSpotsResponse.spots:type_name -> parking.ParkingSpot
	0,  // 6: parking.CreateSpotRequest.type:type_name -> parking.ParkingSpot.SpotType
	4,  // 7: parking.UpdateSpotRequest.spot:type_name -> parking.ParkingSpot
	3,  // 8: parking.ListVehiclesRequest.type_filter:type_name -> parking.ListVehiclesRequest.VehicleType
	5,  // 9: parking.ListVehiclesResponse.vehicles:type_name -> parking.Vehicle
	1,  // 10: parking.CreateVehicleRequest.type:type_name -> parking.Vehicle.VehicleType
	5,  // 11: parking.UpdateVehicleRequest.vehicle:type_name -> parking.Vehicle
	27, // 12: parking.ParkVehicleRequest.parked_time:type_name -> google.protobuf.Timestamp
	27, // 13: parking.LeaveParkingRequest.leave_time:type_name -> google.protobuf.Timestamp
	27, // 14: parking.SearchParkingHistoryRequest.start_time:type_name -> google.protobuf.Timestamp
	27, // 15: parking.SearchParkingHistoryRequest.end_time:type_name -> google.protobuf.Timestamp
	6,  // 16: parking.SearchParkingHistoryResponse.history_records:type_name -> parking.ParkingHistory
	27, // 17: parking.GetOccupancyReportRequest.start_time:type_name -> google.protobuf.Timestamp
	27, // 18: parking.GetOccupancyReportRequest.end_time:type_name -> google.protobuf.Timestamp
	27, // 19: parking.OccupancyReport.overall_peak_time:type_name -> google.protobuf.Timestamp
	26, // 20: parking.OccupancyReport.type_occupancy:type_name -> parking.OccupancyReport.TypeOccupancy
	27, // 21: parking.OccupancyReport.TypeOccupancy.peak_time:type_name -> google.protobuf.Timestamp
	7,  // 22: parking.ParkingService.GetSpot:input_type -> parking.GetSpotRequest
	8,  // 23: parking.ParkingService.ListSpots:input_type -> parking.ListSpotsRequest
	10, // 24: parking.ParkingService.CreateSpot:input_type -> parking.CreateSpotRequest
	11, // 25: parking.ParkingService.UpdateSpot:input_type -> parking.UpdateSpotRequest
	12, // 26: parking.ParkingService.DeleteSpot:input_type -> parking.DeleteSpotRequest
	13, // 27: parking.ParkingService.GetVehicle:input_type -> parking.GetVehicleRequest
	14, // 28: parking.ParkingService.ListVehicles:input_type -> parking.ListVehiclesRequest
	16, // 29: parking.ParkingService.CreateVehicle:input_type -> parking.CreateVehicleRequest
	17, // 30: parking.ParkingService.UpdateVehicle:input_type -> parking.UpdateVehicleRequest
	18, // 31: parking.ParkingService.DeleteVehicle:input_type -> parking.DeleteVehicleRequest
	19, // 32: parking.ParkingService.ParkVehicle:input_type -> parking.ParkVehicleRequest
	20, // 33: parking.ParkingService.LeaveParking:input_type -> parking.LeaveParkingRequest
	21, // 34: parking.ParkingService.GetParkingHistory:input_type -> parking.GetParkingHistoryRequest
	22, // 35: parking.ParkingService.SearchParkingHistory:input_type -> parking.SearchParkingHistoryRequest
	24, // 36: parking.ParkingService.GetOccupancyReport:input_type -> parking.GetOccupancyReportRequest
	4,  // 37: parking.ParkingService.GetSpot:output_type -> parking.ParkingSpot
	9,  // 38: parking.ParkingService.ListSpots:output_type -> parking.ListSpotsResponse
	4,  // 39: parking.ParkingService.CreateSpot:output_type -> parking.ParkingSpot
	4,  // 40: parking.ParkingService.UpdateSpot:output_type -> parking.ParkingSpot
	28, // 41: parking.ParkingService.DeleteSpot:output_type -> google.protobuf.Empty
	5,  // 42: parking.ParkingService.GetVehicle:output_type -> parking.Vehicle
	15, // 43: parking.ParkingService.ListVehicles:output_type -> parking.ListVehiclesResponse
	5,  // 44: parking.ParkingService.CreateVehicle:output_type -> parking.Vehicle
	5,  // 45: parking.ParkingService.UpdateVehicle:output_type -> parking.Vehicle
	28, // 46: parking.ParkingService.DeleteVehicle:output_type -> google.protobuf.Empty
	6,  // 47: parking.ParkingService.ParkVehicle:output_type -> parking.ParkingHistory
	6,  // 48: parking.ParkingService.LeaveParking:output_type -> parking.ParkingHistory
	6,  // 49: parking.ParkingService.GetParkingHistory:output_type -> parking.ParkingHistory
	23, // 50: parking.ParkingService.SearchParkingHistory:output_type -> parking.SearchParkingHistoryResponse
	25, // 51: parking.ParkingService.GetOccupancyReport:output_type -> parking.OccupancyReport
	37, // [37:52] is the sub-list for method output_type
	22, // [22:37] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_parking_lot_service_service_proto_init() }
func file_parking_lot_service_service_proto_init() {
	if File_parking_lot_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parking_lot_service_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ParkingSpot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ParkingHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListSpotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListSpotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListVehiclesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListVehiclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CreateVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ParkVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveParkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetParkingHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SearchParkingHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SearchParkingHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetOccupancyReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*OccupancyReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_lot_service_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*OccupancyReport_TypeOccupancy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parking_lot_service_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parking_lot_service_service_proto_goTypes,
		DependencyIndexes: file_parking_lot_service_service_proto_depIdxs,
		EnumInfos:         file_parking_lot_service_service_proto_enumTypes,
		MessageInfos:      file_parking_lot_service_service_proto_msgTypes,
	}.Build()
	File_parking_lot_service_service_proto = out.File
	file_parking_lot_service_service_proto_rawDesc = nil
	file_parking_lot_service_service_proto_goTypes = nil
	file_parking_lot_service_service_proto_depIdxs = nil
}
