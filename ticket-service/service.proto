syntax = "proto3";

package ticketmanagement;

option go_package = "./pd";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message Customer {
  int32 customer_id = 1;
  string customer_name = 2;
  string phone = 3;
  string email = 4;
  string address = 5;
}

message Ticket {
  int32 ticket_id = 1;
  string ticket_name = 2;
  google.protobuf.Timestamp start_date = 3;
  string address_room = 4;
  double amount = 5;
  int32 quantity = 6;
  string status = 7;
}

message Invoice {
  int32 invoices_id = 1;
  int32 customer_id = 2;
  google.protobuf.Timestamp buy_date = 3;
  double total_amount = 4;
  string note = 5;
  Customer customer = 6;
}

message InvoiceDetail {
  int32 invoice_detail_id = 1;
  int32 invoices_id = 2;
  int32 ticket_id = 3;
  int32 quantity = 4;
  int32 status = 5;
  Invoice invoice = 6;
  Ticket ticket = 7;
}

message CreateTicketRequest {
  string ticket_name = 1;
  google.protobuf.Timestamp start_date = 2;
  string address_room = 3;
  double amount = 4;
  int32 quantity = 5;
}

message CreateTicketResponse {
  Ticket ticket = 1;
}

message GetTicketRequest {
  int32 ticket_id = 1;
}

message GetTicketsResponse {
  repeated Ticket tickets = 1;
}

message UpdateTicketRequest {
  int32 ticket_id = 1;
  string ticket_name = 2;
  google.protobuf.Timestamp start_date = 3;
  string address_room = 4;
  double amount = 5;
  int32 quantity = 6;
  string status = 7;
}

message DeleteTicketRequest {
  int32 ticket_id = 1;
}

message CreateCustomerRequest {
  string customer_name = 1;
  string phone = 2;
  string email = 3;
  string address = 4;
}

message CreateCustomerResponse {
  Customer customer = 1;
}

message GetCustomerRequest {
  int32 customer_id = 1;
}

message GetCustomersResponse {
  repeated Customer customers = 1;
}

message UpdateCustomerRequest {
  int32 customer_id = 1;
  string customer_name = 2;
  string phone = 3;
  string email = 4;
  string address = 5;
}

message DeleteCustomerRequest {
  int32 customer_id = 1;
}

message BuyTicketRequest {
  int32 customer_id = 1;
  int32 ticket_id = 2;
  int32 quantity = 3;
}

message BuyTicketResponse {
  Invoice invoice = 1;
  repeated InvoiceDetail invoice_details = 2;
}

message GetInvoiceRequest {
  int32 invoices_id = 1;
}

message GetInvoicesResponse {
  repeated Invoice invoices = 1;
}

message GetInvoiceDetailsRequest {
  int32 invoices_id = 1;
}

message GetInvoiceDetailsResponse {
  repeated InvoiceDetail invoice_details = 1;
}

service TicketManagementService {
  rpc CreateTicket(CreateTicketRequest) returns (CreateTicketResponse) {
    option (google.api.http) = {
      post: "/v1/tickets"
      body: "*"
    };
  }

  rpc GetTicket(GetTicketRequest) returns (Ticket) {
    option (google.api.http) = {
      get: "/v1/tickets/{ticket_id}"
    };
  }

  rpc GetTickets(google.protobuf.Empty) returns (GetTicketsResponse) {
    option (google.api.http) = {
      get: "/v1/tickets"
    };
  }

  rpc UpdateTicket(UpdateTicketRequest) returns (Ticket) {
    option (google.api.http) = {
      put: "/v1/tickets/{ticket_id}"
      body: "*"
    };
  }

  rpc DeleteTicket(DeleteTicketRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/tickets/{ticket_id}"
    };
  }

  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse) {
    option (google.api.http) = {
      post: "/v1/customers"
      body: "*"
    };
  }

  rpc GetCustomer(GetCustomerRequest) returns (Customer) {
    option (google.api.http) = {
      get: "/v1/customers/{customer_id}"
    };
  }

  rpc GetCustomers(google.protobuf.Empty) returns (GetCustomersResponse) {
    option (google.api.http) = {
      get: "/v1/customers"
    };
  }

  rpc UpdateCustomer(UpdateCustomerRequest) returns (Customer) {
    option (google.api.http) = {
      put: "/v1/customers/{customer_id}"
      body: "*"
    };
  }

  rpc DeleteCustomer(DeleteCustomerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/customers/{customer_id}"
    };
  }

  rpc BuyTicket(BuyTicketRequest) returns (BuyTicketResponse) {
    option (google.api.http) = {
      post: "/v1/transactions/buy"
      body: "*"
    };
  }

  rpc GetInvoice(GetInvoiceRequest) returns (Invoice) {
    option (google.api.http) = {
      get: "/v1/invoices/{invoices_id}"
    };
  }

  rpc GetInvoices(google.protobuf.Empty) returns (GetInvoicesResponse) {
    option (google.api.http) = {
      get: "/v1/invoices"
    };
  }

  rpc GetInvoiceDetails(GetInvoiceDetailsRequest) returns (GetInvoiceDetailsResponse) {
    option (google.api.http) = {
      get: "/v1/invoices/{invoices_id}/details"
    };
  }
}