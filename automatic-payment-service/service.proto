syntax = "proto3";

package subscription;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "./pb";

service SubscriptionService {
  rpc CreateUser(CreateUserRequest) returns (UserResponse) {
    option (google.api.http) = {
      post: "/api/v1/users"
      body: "*"
    };
  }
  
  rpc GetUser(GetUserRequest) returns (UserResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }
  
  rpc UpdateUser(UpdateUserRequest) returns (UserResponse) {
    option (google.api.http) = {
      put: "/api/v1/users/{user_id}"
      body: "*"
    };
  }
  
  // Subscription Plans
  rpc ListSubscriptionPlans(ListSubscriptionPlansRequest) returns (ListSubscriptionPlansResponse) {
    option (google.api.http) = {
      get: "/api/v1/subscription-plans"
    };
  }
  
  rpc GetSubscriptionPlan(GetSubscriptionPlanRequest) returns (SubscriptionPlanResponse) {
    option (google.api.http) = {
      get: "/api/v1/subscription-plans/{plan_id}"
    };
  }
  
  // Subscriptions
  rpc CreateSubscription(CreateSubscriptionRequest) returns (SubscriptionResponse) {
    option (google.api.http) = {
      post: "/api/v1/subscriptions"
      body: "*"
    };
  }
  
  rpc GetSubscription(GetSubscriptionRequest) returns (SubscriptionResponse) {
    option (google.api.http) = {
      get: "/api/v1/subscriptions/{subscription_id}"
    };
  }
  
  rpc CancelSubscription(CancelSubscriptionRequest) returns (SubscriptionResponse) {
    option (google.api.http) = {
      post: "/api/v1/subscriptions/{subscription_id}/cancel"
      body: "*"
    };
  }
  
  rpc RenewSubscription(RenewSubscriptionRequest) returns (SubscriptionResponse) {
    option (google.api.http) = {
      post: "/api/v1/subscriptions/{subscription_id}/renew"
      body: "*"
    };
  }
  
  // Payment Methods
  rpc AddPaymentMethod(AddPaymentMethodRequest) returns (PaymentMethodResponse) {
    option (google.api.http) = {
      post: "/api/v1/payment-methods"
      body: "*"
    };
  }
  
  rpc ListPaymentMethods(ListPaymentMethodsRequest) returns (ListPaymentMethodsResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/payment-methods"
    };
  }
  
  rpc SetDefaultPaymentMethod(SetDefaultPaymentMethodRequest) returns (PaymentMethodResponse) {
    option (google.api.http) = {
      post: "/api/v1/payment-methods/{payment_method_id}/set-default"
      body: "*"
    };
  }
  
  // Transactions
  rpc GetTransaction(GetTransactionRequest) returns (TransactionResponse) {
    option (google.api.http) = {
      get: "/api/v1/transactions/{transaction_id}"
    };
  }
  
  rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/transactions"
    };
  }
  
  // Invoices
  rpc GetInvoice(GetInvoiceRequest) returns (InvoiceResponse) {
    option (google.api.http) = {
      get: "/api/v1/invoices/{invoice_id}"
    };
  }
  
  rpc ListInvoices(ListInvoicesRequest) returns (ListInvoicesResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/invoices"
    };
  }
}

// User related messages
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
}

message GetUserRequest {
  string user_id = 1;
}

message UpdateUserRequest {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
}

message UserResponse {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone = 5;
  string status = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// Subscription Plan related messages
message ListSubscriptionPlansRequest {
  int32 page_size = 1;
  string page_token = 2;
  bool include_inactive = 3;
}

message GetSubscriptionPlanRequest {
  string plan_id = 1;
}

message SubscriptionPlanResponse {
  string plan_id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  string billing_cycle = 5;
  map<string, string> features = 6;
  bool is_active = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message ListSubscriptionPlansResponse {
  repeated SubscriptionPlanResponse plans = 1;
  string next_page_token = 2;
}

// Subscription related messages
message CreateSubscriptionRequest {
  string user_id = 1;
  string plan_id = 2;
  string payment_method_id = 3;
  bool auto_renewal = 4;
}

message GetSubscriptionRequest {
  string subscription_id = 1;
}

message CancelSubscriptionRequest {
  string subscription_id = 1;
  string cancellation_reason = 2;
  bool cancel_immediately = 3;
}

message RenewSubscriptionRequest {
  string subscription_id = 1;
  string payment_method_id = 2;
}

message SubscriptionResponse {
  string subscription_id = 1;
  string user_id = 2;
  string plan_id = 3;
  string status = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
  bool auto_renewal = 7;
  google.protobuf.Timestamp trial_end_date = 8;
  google.protobuf.Timestamp next_billing_date = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  SubscriptionPlanResponse plan = 12;
}

// Payment Method related messages
message AddPaymentMethodRequest {
  string user_id = 1;
  string provider = 2;
  string token_id = 3;
  bool set_as_default = 4;
}

message ListPaymentMethodsRequest {
  string user_id = 1;
}

message SetDefaultPaymentMethodRequest {
  string payment_method_id = 1;
  string user_id = 2;
}

message PaymentMethodResponse {
  string payment_method_id = 1;
  string user_id = 2;
  string provider = 3;
  string last_four_digits = 4;
  string expiry_date = 5;
  bool is_default = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message ListPaymentMethodsResponse {
  repeated PaymentMethodResponse payment_methods = 1;
}

// Transaction related messages
message GetTransactionRequest {
  string transaction_id = 1;
}

message ListTransactionsRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message TransactionResponse {
  string transaction_id = 1;
  string subscription_id = 2;
  string payment_method_id = 3;
  double amount = 4;
  string currency = 5;
  string status = 6;
  string gateway_transaction_id = 7;
  string error_message = 8;
  google.protobuf.Timestamp created_at = 9;
}

message ListTransactionsResponse {
  repeated TransactionResponse transactions = 1;
  string next_page_token = 2;
}

// Invoice related messages
message GetInvoiceRequest {
  string invoice_id = 1;
}

message ListInvoicesRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message InvoiceResponse {
  string invoice_id = 1;
  string transaction_id = 2;
  string subscription_id = 3;
  string user_id = 4;
  double amount = 5;
  double tax_amount = 6;
  double total_amount = 7;
  string status = 8;
  google.protobuf.Timestamp due_date = 9;
  google.protobuf.Timestamp paid_date = 10;
  string invoice_number = 11;
  google.protobuf.Timestamp created_at = 12;
}

message ListInvoicesResponse {
  repeated InvoiceResponse invoices = 1;
  string next_page_token = 2;
}