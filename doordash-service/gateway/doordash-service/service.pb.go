// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: doordash-service/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterUserRequest_UserType int32

const (
	RegisterUserRequest_CUSTOMER         RegisterUserRequest_UserType = 0
	RegisterUserRequest_DRIVER           RegisterUserRequest_UserType = 1
	RegisterUserRequest_RESTAURANT_STAFF RegisterUserRequest_UserType = 2
	RegisterUserRequest_ADMIN            RegisterUserRequest_UserType = 3
)

// Enum value maps for RegisterUserRequest_UserType.
var (
	RegisterUserRequest_UserType_name = map[int32]string{
		0: "CUSTOMER",
		1: "DRIVER",
		2: "RESTAURANT_STAFF",
		3: "ADMIN",
	}
	RegisterUserRequest_UserType_value = map[string]int32{
		"CUSTOMER":         0,
		"DRIVER":           1,
		"RESTAURANT_STAFF": 2,
		"ADMIN":            3,
	}
)

func (x RegisterUserRequest_UserType) Enum() *RegisterUserRequest_UserType {
	p := new(RegisterUserRequest_UserType)
	*p = x
	return p
}

func (x RegisterUserRequest_UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterUserRequest_UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[0].Descriptor()
}

func (RegisterUserRequest_UserType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[0]
}

func (x RegisterUserRequest_UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterUserRequest_UserType.Descriptor instead.
func (RegisterUserRequest_UserType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{6, 0}
}

type AuthResponse_UserType int32

const (
	AuthResponse_CUSTOMER         AuthResponse_UserType = 0
	AuthResponse_DRIVER           AuthResponse_UserType = 1
	AuthResponse_RESTAURANT_STAFF AuthResponse_UserType = 2
	AuthResponse_ADMIN            AuthResponse_UserType = 3
)

// Enum value maps for AuthResponse_UserType.
var (
	AuthResponse_UserType_name = map[int32]string{
		0: "CUSTOMER",
		1: "DRIVER",
		2: "RESTAURANT_STAFF",
		3: "ADMIN",
	}
	AuthResponse_UserType_value = map[string]int32{
		"CUSTOMER":         0,
		"DRIVER":           1,
		"RESTAURANT_STAFF": 2,
		"ADMIN":            3,
	}
)

func (x AuthResponse_UserType) Enum() *AuthResponse_UserType {
	p := new(AuthResponse_UserType)
	*p = x
	return p
}

func (x AuthResponse_UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthResponse_UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[1].Descriptor()
}

func (AuthResponse_UserType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[1]
}

func (x AuthResponse_UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthResponse_UserType.Descriptor instead.
func (AuthResponse_UserType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{10, 0}
}

type UserResponse_UserType int32

const (
	UserResponse_CUSTOMER         UserResponse_UserType = 0
	UserResponse_DRIVER           UserResponse_UserType = 1
	UserResponse_RESTAURANT_STAFF UserResponse_UserType = 2
	UserResponse_ADMIN            UserResponse_UserType = 3
)

// Enum value maps for UserResponse_UserType.
var (
	UserResponse_UserType_name = map[int32]string{
		0: "CUSTOMER",
		1: "DRIVER",
		2: "RESTAURANT_STAFF",
		3: "ADMIN",
	}
	UserResponse_UserType_value = map[string]int32{
		"CUSTOMER":         0,
		"DRIVER":           1,
		"RESTAURANT_STAFF": 2,
		"ADMIN":            3,
	}
)

func (x UserResponse_UserType) Enum() *UserResponse_UserType {
	p := new(UserResponse_UserType)
	*p = x
	return p
}

func (x UserResponse_UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserResponse_UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[2].Descriptor()
}

func (UserResponse_UserType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[2]
}

func (x UserResponse_UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserResponse_UserType.Descriptor instead.
func (UserResponse_UserType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{11, 0}
}

type SearchRestaurantsRequest_SortOption int32

const (
	SearchRestaurantsRequest_RELEVANCE                 SearchRestaurantsRequest_SortOption = 0
	SearchRestaurantsRequest_RATING_HIGH_TO_LOW        SearchRestaurantsRequest_SortOption = 1
	SearchRestaurantsRequest_DELIVERY_TIME_LOW_TO_HIGH SearchRestaurantsRequest_SortOption = 2
	SearchRestaurantsRequest_DISTANCE_LOW_TO_HIGH      SearchRestaurantsRequest_SortOption = 3
)

// Enum value maps for SearchRestaurantsRequest_SortOption.
var (
	SearchRestaurantsRequest_SortOption_name = map[int32]string{
		0: "RELEVANCE",
		1: "RATING_HIGH_TO_LOW",
		2: "DELIVERY_TIME_LOW_TO_HIGH",
		3: "DISTANCE_LOW_TO_HIGH",
	}
	SearchRestaurantsRequest_SortOption_value = map[string]int32{
		"RELEVANCE":                 0,
		"RATING_HIGH_TO_LOW":        1,
		"DELIVERY_TIME_LOW_TO_HIGH": 2,
		"DISTANCE_LOW_TO_HIGH":      3,
	}
)

func (x SearchRestaurantsRequest_SortOption) Enum() *SearchRestaurantsRequest_SortOption {
	p := new(SearchRestaurantsRequest_SortOption)
	*p = x
	return p
}

func (x SearchRestaurantsRequest_SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchRestaurantsRequest_SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[3].Descriptor()
}

func (SearchRestaurantsRequest_SortOption) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[3]
}

func (x SearchRestaurantsRequest_SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchRestaurantsRequest_SortOption.Descriptor instead.
func (SearchRestaurantsRequest_SortOption) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{19, 0}
}

type OrderResponse_OrderStatus int32

const (
	OrderResponse_CREATED          OrderResponse_OrderStatus = 0
	OrderResponse_CONFIRMED        OrderResponse_OrderStatus = 1
	OrderResponse_PREPARING        OrderResponse_OrderStatus = 2
	OrderResponse_READY_FOR_PICKUP OrderResponse_OrderStatus = 3
	OrderResponse_PICKED_UP        OrderResponse_OrderStatus = 4
	OrderResponse_DELIVERED        OrderResponse_OrderStatus = 5
	OrderResponse_CANCELLED        OrderResponse_OrderStatus = 6
)

// Enum value maps for OrderResponse_OrderStatus.
var (
	OrderResponse_OrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "CONFIRMED",
		2: "PREPARING",
		3: "READY_FOR_PICKUP",
		4: "PICKED_UP",
		5: "DELIVERED",
		6: "CANCELLED",
	}
	OrderResponse_OrderStatus_value = map[string]int32{
		"CREATED":          0,
		"CONFIRMED":        1,
		"PREPARING":        2,
		"READY_FOR_PICKUP": 3,
		"PICKED_UP":        4,
		"DELIVERED":        5,
		"CANCELLED":        6,
	}
)

func (x OrderResponse_OrderStatus) Enum() *OrderResponse_OrderStatus {
	p := new(OrderResponse_OrderStatus)
	*p = x
	return p
}

func (x OrderResponse_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderResponse_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[4].Descriptor()
}

func (OrderResponse_OrderStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[4]
}

func (x OrderResponse_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderResponse_OrderStatus.Descriptor instead.
func (OrderResponse_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{33, 0}
}

type OrderStatusResponse_OrderStatus int32

const (
	OrderStatusResponse_CREATED          OrderStatusResponse_OrderStatus = 0
	OrderStatusResponse_CONFIRMED        OrderStatusResponse_OrderStatus = 1
	OrderStatusResponse_PREPARING        OrderStatusResponse_OrderStatus = 2
	OrderStatusResponse_READY_FOR_PICKUP OrderStatusResponse_OrderStatus = 3
	OrderStatusResponse_PICKED_UP        OrderStatusResponse_OrderStatus = 4
	OrderStatusResponse_DELIVERED        OrderStatusResponse_OrderStatus = 5
	OrderStatusResponse_CANCELLED        OrderStatusResponse_OrderStatus = 6
)

// Enum value maps for OrderStatusResponse_OrderStatus.
var (
	OrderStatusResponse_OrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "CONFIRMED",
		2: "PREPARING",
		3: "READY_FOR_PICKUP",
		4: "PICKED_UP",
		5: "DELIVERED",
		6: "CANCELLED",
	}
	OrderStatusResponse_OrderStatus_value = map[string]int32{
		"CREATED":          0,
		"CONFIRMED":        1,
		"PREPARING":        2,
		"READY_FOR_PICKUP": 3,
		"PICKED_UP":        4,
		"DELIVERED":        5,
		"CANCELLED":        6,
	}
)

func (x OrderStatusResponse_OrderStatus) Enum() *OrderStatusResponse_OrderStatus {
	p := new(OrderStatusResponse_OrderStatus)
	*p = x
	return p
}

func (x OrderStatusResponse_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatusResponse_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[5].Descriptor()
}

func (OrderStatusResponse_OrderStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[5]
}

func (x OrderStatusResponse_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatusResponse_OrderStatus.Descriptor instead.
func (OrderStatusResponse_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{38, 0}
}

type UpdateOrderStatusRequest_OrderStatus int32

const (
	UpdateOrderStatusRequest_CREATED          UpdateOrderStatusRequest_OrderStatus = 0
	UpdateOrderStatusRequest_CONFIRMED        UpdateOrderStatusRequest_OrderStatus = 1
	UpdateOrderStatusRequest_PREPARING        UpdateOrderStatusRequest_OrderStatus = 2
	UpdateOrderStatusRequest_READY_FOR_PICKUP UpdateOrderStatusRequest_OrderStatus = 3
	UpdateOrderStatusRequest_PICKED_UP        UpdateOrderStatusRequest_OrderStatus = 4
	UpdateOrderStatusRequest_DELIVERED        UpdateOrderStatusRequest_OrderStatus = 5
	UpdateOrderStatusRequest_CANCELLED        UpdateOrderStatusRequest_OrderStatus = 6
)

// Enum value maps for UpdateOrderStatusRequest_OrderStatus.
var (
	UpdateOrderStatusRequest_OrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "CONFIRMED",
		2: "PREPARING",
		3: "READY_FOR_PICKUP",
		4: "PICKED_UP",
		5: "DELIVERED",
		6: "CANCELLED",
	}
	UpdateOrderStatusRequest_OrderStatus_value = map[string]int32{
		"CREATED":          0,
		"CONFIRMED":        1,
		"PREPARING":        2,
		"READY_FOR_PICKUP": 3,
		"PICKED_UP":        4,
		"DELIVERED":        5,
		"CANCELLED":        6,
	}
)

func (x UpdateOrderStatusRequest_OrderStatus) Enum() *UpdateOrderStatusRequest_OrderStatus {
	p := new(UpdateOrderStatusRequest_OrderStatus)
	*p = x
	return p
}

func (x UpdateOrderStatusRequest_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateOrderStatusRequest_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[6].Descriptor()
}

func (UpdateOrderStatusRequest_OrderStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[6]
}

func (x UpdateOrderStatusRequest_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateOrderStatusRequest_OrderStatus.Descriptor instead.
func (UpdateOrderStatusRequest_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{39, 0}
}

type OrderHistoryRequest_UserType int32

const (
	OrderHistoryRequest_CUSTOMER   OrderHistoryRequest_UserType = 0
	OrderHistoryRequest_DRIVER     OrderHistoryRequest_UserType = 1
	OrderHistoryRequest_RESTAURANT OrderHistoryRequest_UserType = 2
)

// Enum value maps for OrderHistoryRequest_UserType.
var (
	OrderHistoryRequest_UserType_name = map[int32]string{
		0: "CUSTOMER",
		1: "DRIVER",
		2: "RESTAURANT",
	}
	OrderHistoryRequest_UserType_value = map[string]int32{
		"CUSTOMER":   0,
		"DRIVER":     1,
		"RESTAURANT": 2,
	}
)

func (x OrderHistoryRequest_UserType) Enum() *OrderHistoryRequest_UserType {
	p := new(OrderHistoryRequest_UserType)
	*p = x
	return p
}

func (x OrderHistoryRequest_UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderHistoryRequest_UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[7].Descriptor()
}

func (OrderHistoryRequest_UserType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[7]
}

func (x OrderHistoryRequest_UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderHistoryRequest_UserType.Descriptor instead.
func (OrderHistoryRequest_UserType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{40, 0}
}

type OrderSummary_OrderStatus int32

const (
	OrderSummary_CREATED          OrderSummary_OrderStatus = 0
	OrderSummary_CONFIRMED        OrderSummary_OrderStatus = 1
	OrderSummary_PREPARING        OrderSummary_OrderStatus = 2
	OrderSummary_READY_FOR_PICKUP OrderSummary_OrderStatus = 3
	OrderSummary_PICKED_UP        OrderSummary_OrderStatus = 4
	OrderSummary_DELIVERED        OrderSummary_OrderStatus = 5
	OrderSummary_CANCELLED        OrderSummary_OrderStatus = 6
)

// Enum value maps for OrderSummary_OrderStatus.
var (
	OrderSummary_OrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "CONFIRMED",
		2: "PREPARING",
		3: "READY_FOR_PICKUP",
		4: "PICKED_UP",
		5: "DELIVERED",
		6: "CANCELLED",
	}
	OrderSummary_OrderStatus_value = map[string]int32{
		"CREATED":          0,
		"CONFIRMED":        1,
		"PREPARING":        2,
		"READY_FOR_PICKUP": 3,
		"PICKED_UP":        4,
		"DELIVERED":        5,
		"CANCELLED":        6,
	}
)

func (x OrderSummary_OrderStatus) Enum() *OrderSummary_OrderStatus {
	p := new(OrderSummary_OrderStatus)
	*p = x
	return p
}

func (x OrderSummary_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSummary_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[8].Descriptor()
}

func (OrderSummary_OrderStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[8]
}

func (x OrderSummary_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSummary_OrderStatus.Descriptor instead.
func (OrderSummary_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{42, 0}
}

type ProcessPaymentRequest_PaymentType int32

const (
	ProcessPaymentRequest_PAYMENT       ProcessPaymentRequest_PaymentType = 0
	ProcessPaymentRequest_AUTHORIZATION ProcessPaymentRequest_PaymentType = 1
	ProcessPaymentRequest_CAPTURE       ProcessPaymentRequest_PaymentType = 2
)

// Enum value maps for ProcessPaymentRequest_PaymentType.
var (
	ProcessPaymentRequest_PaymentType_name = map[int32]string{
		0: "PAYMENT",
		1: "AUTHORIZATION",
		2: "CAPTURE",
	}
	ProcessPaymentRequest_PaymentType_value = map[string]int32{
		"PAYMENT":       0,
		"AUTHORIZATION": 1,
		"CAPTURE":       2,
	}
)

func (x ProcessPaymentRequest_PaymentType) Enum() *ProcessPaymentRequest_PaymentType {
	p := new(ProcessPaymentRequest_PaymentType)
	*p = x
	return p
}

func (x ProcessPaymentRequest_PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessPaymentRequest_PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[9].Descriptor()
}

func (ProcessPaymentRequest_PaymentType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[9]
}

func (x ProcessPaymentRequest_PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessPaymentRequest_PaymentType.Descriptor instead.
func (ProcessPaymentRequest_PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{48, 0}
}

type PaymentResponse_PaymentStatus int32

const (
	PaymentResponse_PENDING    PaymentResponse_PaymentStatus = 0
	PaymentResponse_AUTHORIZED PaymentResponse_PaymentStatus = 1
	PaymentResponse_CAPTURED   PaymentResponse_PaymentStatus = 2
	PaymentResponse_REFUNDED   PaymentResponse_PaymentStatus = 3
	PaymentResponse_FAILED     PaymentResponse_PaymentStatus = 4
)

// Enum value maps for PaymentResponse_PaymentStatus.
var (
	PaymentResponse_PaymentStatus_name = map[int32]string{
		0: "PENDING",
		1: "AUTHORIZED",
		2: "CAPTURED",
		3: "REFUNDED",
		4: "FAILED",
	}
	PaymentResponse_PaymentStatus_value = map[string]int32{
		"PENDING":    0,
		"AUTHORIZED": 1,
		"CAPTURED":   2,
		"REFUNDED":   3,
		"FAILED":     4,
	}
)

func (x PaymentResponse_PaymentStatus) Enum() *PaymentResponse_PaymentStatus {
	p := new(PaymentResponse_PaymentStatus)
	*p = x
	return p
}

func (x PaymentResponse_PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentResponse_PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[10].Descriptor()
}

func (PaymentResponse_PaymentStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[10]
}

func (x PaymentResponse_PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentResponse_PaymentStatus.Descriptor instead.
func (PaymentResponse_PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{49, 0}
}

type PromotionResponse_DiscountType int32

const (
	PromotionResponse_PERCENTAGE   PromotionResponse_DiscountType = 0
	PromotionResponse_FIXED_AMOUNT PromotionResponse_DiscountType = 1
)

// Enum value maps for PromotionResponse_DiscountType.
var (
	PromotionResponse_DiscountType_name = map[int32]string{
		0: "PERCENTAGE",
		1: "FIXED_AMOUNT",
	}
	PromotionResponse_DiscountType_value = map[string]int32{
		"PERCENTAGE":   0,
		"FIXED_AMOUNT": 1,
	}
)

func (x PromotionResponse_DiscountType) Enum() *PromotionResponse_DiscountType {
	p := new(PromotionResponse_DiscountType)
	*p = x
	return p
}

func (x PromotionResponse_DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionResponse_DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[11].Descriptor()
}

func (PromotionResponse_DiscountType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[11]
}

func (x PromotionResponse_DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromotionResponse_DiscountType.Descriptor instead.
func (PromotionResponse_DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{52, 0}
}

type PromotionInfo_DiscountType int32

const (
	PromotionInfo_PERCENTAGE   PromotionInfo_DiscountType = 0
	PromotionInfo_FIXED_AMOUNT PromotionInfo_DiscountType = 1
)

// Enum value maps for PromotionInfo_DiscountType.
var (
	PromotionInfo_DiscountType_name = map[int32]string{
		0: "PERCENTAGE",
		1: "FIXED_AMOUNT",
	}
	PromotionInfo_DiscountType_value = map[string]int32{
		"PERCENTAGE":   0,
		"FIXED_AMOUNT": 1,
	}
)

func (x PromotionInfo_DiscountType) Enum() *PromotionInfo_DiscountType {
	p := new(PromotionInfo_DiscountType)
	*p = x
	return p
}

func (x PromotionInfo_DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionInfo_DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[12].Descriptor()
}

func (PromotionInfo_DiscountType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[12]
}

func (x PromotionInfo_DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromotionInfo_DiscountType.Descriptor instead.
func (PromotionInfo_DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{54, 0}
}

type CreateTicketRequest_Priority int32

const (
	CreateTicketRequest_LOW    CreateTicketRequest_Priority = 0
	CreateTicketRequest_MEDIUM CreateTicketRequest_Priority = 1
	CreateTicketRequest_HIGH   CreateTicketRequest_Priority = 2
	CreateTicketRequest_URGENT CreateTicketRequest_Priority = 3
)

// Enum value maps for CreateTicketRequest_Priority.
var (
	CreateTicketRequest_Priority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
		3: "URGENT",
	}
	CreateTicketRequest_Priority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
		"URGENT": 3,
	}
)

func (x CreateTicketRequest_Priority) Enum() *CreateTicketRequest_Priority {
	p := new(CreateTicketRequest_Priority)
	*p = x
	return p
}

func (x CreateTicketRequest_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTicketRequest_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[13].Descriptor()
}

func (CreateTicketRequest_Priority) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[13]
}

func (x CreateTicketRequest_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTicketRequest_Priority.Descriptor instead.
func (CreateTicketRequest_Priority) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{55, 0}
}

type TicketResponse_TicketStatus int32

const (
	TicketResponse_OPEN        TicketResponse_TicketStatus = 0
	TicketResponse_IN_PROGRESS TicketResponse_TicketStatus = 1
	TicketResponse_RESOLVED    TicketResponse_TicketStatus = 2
	TicketResponse_CLOSED      TicketResponse_TicketStatus = 3
)

// Enum value maps for TicketResponse_TicketStatus.
var (
	TicketResponse_TicketStatus_name = map[int32]string{
		0: "OPEN",
		1: "IN_PROGRESS",
		2: "RESOLVED",
		3: "CLOSED",
	}
	TicketResponse_TicketStatus_value = map[string]int32{
		"OPEN":        0,
		"IN_PROGRESS": 1,
		"RESOLVED":    2,
		"CLOSED":      3,
	}
)

func (x TicketResponse_TicketStatus) Enum() *TicketResponse_TicketStatus {
	p := new(TicketResponse_TicketStatus)
	*p = x
	return p
}

func (x TicketResponse_TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketResponse_TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[14].Descriptor()
}

func (TicketResponse_TicketStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[14]
}

func (x TicketResponse_TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketResponse_TicketStatus.Descriptor instead.
func (TicketResponse_TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{56, 0}
}

type TicketResponse_Priority int32

const (
	TicketResponse_LOW    TicketResponse_Priority = 0
	TicketResponse_MEDIUM TicketResponse_Priority = 1
	TicketResponse_HIGH   TicketResponse_Priority = 2
	TicketResponse_URGENT TicketResponse_Priority = 3
)

// Enum value maps for TicketResponse_Priority.
var (
	TicketResponse_Priority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
		3: "URGENT",
	}
	TicketResponse_Priority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
		"URGENT": 3,
	}
)

func (x TicketResponse_Priority) Enum() *TicketResponse_Priority {
	p := new(TicketResponse_Priority)
	*p = x
	return p
}

func (x TicketResponse_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketResponse_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[15].Descriptor()
}

func (TicketResponse_Priority) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[15]
}

func (x TicketResponse_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketResponse_Priority.Descriptor instead.
func (TicketResponse_Priority) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{56, 1}
}

type NotificationInfo_NotificationType int32

const (
	NotificationInfo_ORDER_UPDATE NotificationInfo_NotificationType = 0
	NotificationInfo_PROMOTION    NotificationInfo_NotificationType = 1
	NotificationInfo_SYSTEM       NotificationInfo_NotificationType = 2
	NotificationInfo_PAYMENT      NotificationInfo_NotificationType = 3
	NotificationInfo_SUPPORT      NotificationInfo_NotificationType = 4
)

// Enum value maps for NotificationInfo_NotificationType.
var (
	NotificationInfo_NotificationType_name = map[int32]string{
		0: "ORDER_UPDATE",
		1: "PROMOTION",
		2: "SYSTEM",
		3: "PAYMENT",
		4: "SUPPORT",
	}
	NotificationInfo_NotificationType_value = map[string]int32{
		"ORDER_UPDATE": 0,
		"PROMOTION":    1,
		"SYSTEM":       2,
		"PAYMENT":      3,
		"SUPPORT":      4,
	}
)

func (x NotificationInfo_NotificationType) Enum() *NotificationInfo_NotificationType {
	p := new(NotificationInfo_NotificationType)
	*p = x
	return p
}

func (x NotificationInfo_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationInfo_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[16].Descriptor()
}

func (NotificationInfo_NotificationType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[16]
}

func (x NotificationInfo_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationInfo_NotificationType.Descriptor instead.
func (NotificationInfo_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{61, 0}
}

type UpdatePreparationStatusRequest_PreparationStatus int32

const (
	UpdatePreparationStatusRequest_CONFIRMED        UpdatePreparationStatusRequest_PreparationStatus = 0
	UpdatePreparationStatusRequest_PREPARING        UpdatePreparationStatusRequest_PreparationStatus = 1
	UpdatePreparationStatusRequest_READY_FOR_PICKUP UpdatePreparationStatusRequest_PreparationStatus = 2
)

// Enum value maps for UpdatePreparationStatusRequest_PreparationStatus.
var (
	UpdatePreparationStatusRequest_PreparationStatus_name = map[int32]string{
		0: "CONFIRMED",
		1: "PREPARING",
		2: "READY_FOR_PICKUP",
	}
	UpdatePreparationStatusRequest_PreparationStatus_value = map[string]int32{
		"CONFIRMED":        0,
		"PREPARING":        1,
		"READY_FOR_PICKUP": 2,
	}
)

func (x UpdatePreparationStatusRequest_PreparationStatus) Enum() *UpdatePreparationStatusRequest_PreparationStatus {
	p := new(UpdatePreparationStatusRequest_PreparationStatus)
	*p = x
	return p
}

func (x UpdatePreparationStatusRequest_PreparationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePreparationStatusRequest_PreparationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[17].Descriptor()
}

func (UpdatePreparationStatusRequest_PreparationStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[17]
}

func (x UpdatePreparationStatusRequest_PreparationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePreparationStatusRequest_PreparationStatus.Descriptor instead.
func (UpdatePreparationStatusRequest_PreparationStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{69, 0}
}

type RestaurantAnalyticsRequest_AnalyticsType int32

const (
	RestaurantAnalyticsRequest_SALES     RestaurantAnalyticsRequest_AnalyticsType = 0
	RestaurantAnalyticsRequest_ORDERS    RestaurantAnalyticsRequest_AnalyticsType = 1
	RestaurantAnalyticsRequest_ITEMS     RestaurantAnalyticsRequest_AnalyticsType = 2
	RestaurantAnalyticsRequest_CUSTOMERS RestaurantAnalyticsRequest_AnalyticsType = 3
	RestaurantAnalyticsRequest_ALL       RestaurantAnalyticsRequest_AnalyticsType = 4
)

// Enum value maps for RestaurantAnalyticsRequest_AnalyticsType.
var (
	RestaurantAnalyticsRequest_AnalyticsType_name = map[int32]string{
		0: "SALES",
		1: "ORDERS",
		2: "ITEMS",
		3: "CUSTOMERS",
		4: "ALL",
	}
	RestaurantAnalyticsRequest_AnalyticsType_value = map[string]int32{
		"SALES":     0,
		"ORDERS":    1,
		"ITEMS":     2,
		"CUSTOMERS": 3,
		"ALL":       4,
	}
)

func (x RestaurantAnalyticsRequest_AnalyticsType) Enum() *RestaurantAnalyticsRequest_AnalyticsType {
	p := new(RestaurantAnalyticsRequest_AnalyticsType)
	*p = x
	return p
}

func (x RestaurantAnalyticsRequest_AnalyticsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestaurantAnalyticsRequest_AnalyticsType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[18].Descriptor()
}

func (RestaurantAnalyticsRequest_AnalyticsType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[18]
}

func (x RestaurantAnalyticsRequest_AnalyticsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RestaurantAnalyticsRequest_AnalyticsType.Descriptor instead.
func (RestaurantAnalyticsRequest_AnalyticsType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{70, 0}
}

type CreatePromotionRequest_DiscountType int32

const (
	CreatePromotionRequest_PERCENTAGE   CreatePromotionRequest_DiscountType = 0
	CreatePromotionRequest_FIXED_AMOUNT CreatePromotionRequest_DiscountType = 1
)

// Enum value maps for CreatePromotionRequest_DiscountType.
var (
	CreatePromotionRequest_DiscountType_name = map[int32]string{
		0: "PERCENTAGE",
		1: "FIXED_AMOUNT",
	}
	CreatePromotionRequest_DiscountType_value = map[string]int32{
		"PERCENTAGE":   0,
		"FIXED_AMOUNT": 1,
	}
)

func (x CreatePromotionRequest_DiscountType) Enum() *CreatePromotionRequest_DiscountType {
	p := new(CreatePromotionRequest_DiscountType)
	*p = x
	return p
}

func (x CreatePromotionRequest_DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreatePromotionRequest_DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[19].Descriptor()
}

func (CreatePromotionRequest_DiscountType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[19]
}

func (x CreatePromotionRequest_DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreatePromotionRequest_DiscountType.Descriptor instead.
func (CreatePromotionRequest_DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{87, 0}
}

type ManageUserRequest_Action int32

const (
	ManageUserRequest_ACTIVATE       ManageUserRequest_Action = 0
	ManageUserRequest_DEACTIVATE     ManageUserRequest_Action = 1
	ManageUserRequest_RESET_PASSWORD ManageUserRequest_Action = 2
	ManageUserRequest_VERIFY         ManageUserRequest_Action = 3
)

// Enum value maps for ManageUserRequest_Action.
var (
	ManageUserRequest_Action_name = map[int32]string{
		0: "ACTIVATE",
		1: "DEACTIVATE",
		2: "RESET_PASSWORD",
		3: "VERIFY",
	}
	ManageUserRequest_Action_value = map[string]int32{
		"ACTIVATE":       0,
		"DEACTIVATE":     1,
		"RESET_PASSWORD": 2,
		"VERIFY":         3,
	}
)

func (x ManageUserRequest_Action) Enum() *ManageUserRequest_Action {
	p := new(ManageUserRequest_Action)
	*p = x
	return p
}

func (x ManageUserRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManageUserRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[20].Descriptor()
}

func (ManageUserRequest_Action) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[20]
}

func (x ManageUserRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManageUserRequest_Action.Descriptor instead.
func (ManageUserRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{89, 0}
}

type SupportTicketsRequest_TicketStatus int32

const (
	SupportTicketsRequest_OPEN        SupportTicketsRequest_TicketStatus = 0
	SupportTicketsRequest_IN_PROGRESS SupportTicketsRequest_TicketStatus = 1
	SupportTicketsRequest_RESOLVED    SupportTicketsRequest_TicketStatus = 2
	SupportTicketsRequest_CLOSED      SupportTicketsRequest_TicketStatus = 3
	SupportTicketsRequest_ALL         SupportTicketsRequest_TicketStatus = 4
)

// Enum value maps for SupportTicketsRequest_TicketStatus.
var (
	SupportTicketsRequest_TicketStatus_name = map[int32]string{
		0: "OPEN",
		1: "IN_PROGRESS",
		2: "RESOLVED",
		3: "CLOSED",
		4: "ALL",
	}
	SupportTicketsRequest_TicketStatus_value = map[string]int32{
		"OPEN":        0,
		"IN_PROGRESS": 1,
		"RESOLVED":    2,
		"CLOSED":      3,
		"ALL":         4,
	}
)

func (x SupportTicketsRequest_TicketStatus) Enum() *SupportTicketsRequest_TicketStatus {
	p := new(SupportTicketsRequest_TicketStatus)
	*p = x
	return p
}

func (x SupportTicketsRequest_TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportTicketsRequest_TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[21].Descriptor()
}

func (SupportTicketsRequest_TicketStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[21]
}

func (x SupportTicketsRequest_TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportTicketsRequest_TicketStatus.Descriptor instead.
func (SupportTicketsRequest_TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{90, 0}
}

type SupportTicketsRequest_Priority int32

const (
	SupportTicketsRequest_LOW    SupportTicketsRequest_Priority = 0
	SupportTicketsRequest_MEDIUM SupportTicketsRequest_Priority = 1
	SupportTicketsRequest_HIGH   SupportTicketsRequest_Priority = 2
	SupportTicketsRequest_URGENT SupportTicketsRequest_Priority = 3
	SupportTicketsRequest_TOP    SupportTicketsRequest_Priority = 4
)

// Enum value maps for SupportTicketsRequest_Priority.
var (
	SupportTicketsRequest_Priority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
		3: "URGENT",
		4: "TOP",
	}
	SupportTicketsRequest_Priority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
		"URGENT": 3,
		"TOP":    4,
	}
)

func (x SupportTicketsRequest_Priority) Enum() *SupportTicketsRequest_Priority {
	p := new(SupportTicketsRequest_Priority)
	*p = x
	return p
}

func (x SupportTicketsRequest_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportTicketsRequest_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[22].Descriptor()
}

func (SupportTicketsRequest_Priority) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[22]
}

func (x SupportTicketsRequest_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportTicketsRequest_Priority.Descriptor instead.
func (SupportTicketsRequest_Priority) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{90, 1}
}

type AssignTicketRequest_TicketStatus int32

const (
	AssignTicketRequest_OPEN        AssignTicketRequest_TicketStatus = 0
	AssignTicketRequest_IN_PROGRESS AssignTicketRequest_TicketStatus = 1
	AssignTicketRequest_RESOLVED    AssignTicketRequest_TicketStatus = 2
	AssignTicketRequest_CLOSED      AssignTicketRequest_TicketStatus = 3
)

// Enum value maps for AssignTicketRequest_TicketStatus.
var (
	AssignTicketRequest_TicketStatus_name = map[int32]string{
		0: "OPEN",
		1: "IN_PROGRESS",
		2: "RESOLVED",
		3: "CLOSED",
	}
	AssignTicketRequest_TicketStatus_value = map[string]int32{
		"OPEN":        0,
		"IN_PROGRESS": 1,
		"RESOLVED":    2,
		"CLOSED":      3,
	}
)

func (x AssignTicketRequest_TicketStatus) Enum() *AssignTicketRequest_TicketStatus {
	p := new(AssignTicketRequest_TicketStatus)
	*p = x
	return p
}

func (x AssignTicketRequest_TicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignTicketRequest_TicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[23].Descriptor()
}

func (AssignTicketRequest_TicketStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[23]
}

func (x AssignTicketRequest_TicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignTicketRequest_TicketStatus.Descriptor instead.
func (AssignTicketRequest_TicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{92, 0}
}

type AssignTicketRequest_Priority int32

const (
	AssignTicketRequest_LOW    AssignTicketRequest_Priority = 0
	AssignTicketRequest_MEDIUM AssignTicketRequest_Priority = 1
	AssignTicketRequest_HIGH   AssignTicketRequest_Priority = 2
	AssignTicketRequest_URGENT AssignTicketRequest_Priority = 3
)

// Enum value maps for AssignTicketRequest_Priority.
var (
	AssignTicketRequest_Priority_name = map[int32]string{
		0: "LOW",
		1: "MEDIUM",
		2: "HIGH",
		3: "URGENT",
	}
	AssignTicketRequest_Priority_value = map[string]int32{
		"LOW":    0,
		"MEDIUM": 1,
		"HIGH":   2,
		"URGENT": 3,
	}
)

func (x AssignTicketRequest_Priority) Enum() *AssignTicketRequest_Priority {
	p := new(AssignTicketRequest_Priority)
	*p = x
	return p
}

func (x AssignTicketRequest_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignTicketRequest_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[24].Descriptor()
}

func (AssignTicketRequest_Priority) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[24]
}

func (x AssignTicketRequest_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignTicketRequest_Priority.Descriptor instead.
func (AssignTicketRequest_Priority) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{92, 1}
}

type OrderStatusUpdate_OrderStatus int32

const (
	OrderStatusUpdate_CREATED          OrderStatusUpdate_OrderStatus = 0
	OrderStatusUpdate_CONFIRMED        OrderStatusUpdate_OrderStatus = 1
	OrderStatusUpdate_PREPARING        OrderStatusUpdate_OrderStatus = 2
	OrderStatusUpdate_READY_FOR_PICKUP OrderStatusUpdate_OrderStatus = 3
	OrderStatusUpdate_PICKED_UP        OrderStatusUpdate_OrderStatus = 4
	OrderStatusUpdate_DELIVERED        OrderStatusUpdate_OrderStatus = 5
	OrderStatusUpdate_CANCELLED        OrderStatusUpdate_OrderStatus = 6
)

// Enum value maps for OrderStatusUpdate_OrderStatus.
var (
	OrderStatusUpdate_OrderStatus_name = map[int32]string{
		0: "CREATED",
		1: "CONFIRMED",
		2: "PREPARING",
		3: "READY_FOR_PICKUP",
		4: "PICKED_UP",
		5: "DELIVERED",
		6: "CANCELLED",
	}
	OrderStatusUpdate_OrderStatus_value = map[string]int32{
		"CREATED":          0,
		"CONFIRMED":        1,
		"PREPARING":        2,
		"READY_FOR_PICKUP": 3,
		"PICKED_UP":        4,
		"DELIVERED":        5,
		"CANCELLED":        6,
	}
)

func (x OrderStatusUpdate_OrderStatus) Enum() *OrderStatusUpdate_OrderStatus {
	p := new(OrderStatusUpdate_OrderStatus)
	*p = x
	return p
}

func (x OrderStatusUpdate_OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatusUpdate_OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[25].Descriptor()
}

func (OrderStatusUpdate_OrderStatus) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[25]
}

func (x OrderStatusUpdate_OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatusUpdate_OrderStatus.Descriptor instead.
func (OrderStatusUpdate_OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{94, 0}
}

type NotificationSubscriptionRequest_NotificationType int32

const (
	NotificationSubscriptionRequest_ORDER_UPDATE NotificationSubscriptionRequest_NotificationType = 0
	NotificationSubscriptionRequest_PROMOTION    NotificationSubscriptionRequest_NotificationType = 1
	NotificationSubscriptionRequest_SYSTEM       NotificationSubscriptionRequest_NotificationType = 2
	NotificationSubscriptionRequest_PAYMENT      NotificationSubscriptionRequest_NotificationType = 3
	NotificationSubscriptionRequest_SUPPORT      NotificationSubscriptionRequest_NotificationType = 4
	NotificationSubscriptionRequest_ALL          NotificationSubscriptionRequest_NotificationType = 5
)

// Enum value maps for NotificationSubscriptionRequest_NotificationType.
var (
	NotificationSubscriptionRequest_NotificationType_name = map[int32]string{
		0: "ORDER_UPDATE",
		1: "PROMOTION",
		2: "SYSTEM",
		3: "PAYMENT",
		4: "SUPPORT",
		5: "ALL",
	}
	NotificationSubscriptionRequest_NotificationType_value = map[string]int32{
		"ORDER_UPDATE": 0,
		"PROMOTION":    1,
		"SYSTEM":       2,
		"PAYMENT":      3,
		"SUPPORT":      4,
		"ALL":          5,
	}
)

func (x NotificationSubscriptionRequest_NotificationType) Enum() *NotificationSubscriptionRequest_NotificationType {
	p := new(NotificationSubscriptionRequest_NotificationType)
	*p = x
	return p
}

func (x NotificationSubscriptionRequest_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationSubscriptionRequest_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[26].Descriptor()
}

func (NotificationSubscriptionRequest_NotificationType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[26]
}

func (x NotificationSubscriptionRequest_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationSubscriptionRequest_NotificationType.Descriptor instead.
func (NotificationSubscriptionRequest_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{97, 0}
}

type NotificationEvent_NotificationType int32

const (
	NotificationEvent_ORDER_UPDATE NotificationEvent_NotificationType = 0
	NotificationEvent_PROMOTION    NotificationEvent_NotificationType = 1
	NotificationEvent_SYSTEM       NotificationEvent_NotificationType = 2
	NotificationEvent_PAYMENT      NotificationEvent_NotificationType = 3
	NotificationEvent_SUPPORT      NotificationEvent_NotificationType = 4
)

// Enum value maps for NotificationEvent_NotificationType.
var (
	NotificationEvent_NotificationType_name = map[int32]string{
		0: "ORDER_UPDATE",
		1: "PROMOTION",
		2: "SYSTEM",
		3: "PAYMENT",
		4: "SUPPORT",
	}
	NotificationEvent_NotificationType_value = map[string]int32{
		"ORDER_UPDATE": 0,
		"PROMOTION":    1,
		"SYSTEM":       2,
		"PAYMENT":      3,
		"SUPPORT":      4,
	}
)

func (x NotificationEvent_NotificationType) Enum() *NotificationEvent_NotificationType {
	p := new(NotificationEvent_NotificationType)
	*p = x
	return p
}

func (x NotificationEvent_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEvent_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_doordash_service_service_proto_enumTypes[27].Descriptor()
}

func (NotificationEvent_NotificationType) Type() protoreflect.EnumType {
	return &file_doordash_service_service_proto_enumTypes[27]
}

func (x NotificationEvent_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEvent_NotificationType.Descriptor instead.
func (NotificationEvent_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{98, 0}
}

// Common messages
type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
}

func (x *RestaurantRequest) Reset() {
	*x = RestaurantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantRequest) ProtoMessage() {}

func (x *RestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantRequest.ProtoReflect.Descriptor instead.
func (*RestaurantRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *RestaurantRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *OrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type DriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *DriverRequest) Reset() {
	*x = DriverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRequest) ProtoMessage() {}

func (x *DriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRequest.ProtoReflect.Descriptor instead.
func (*DriverRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{3}
}

func (x *DriverRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type TicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *TicketRequest) Reset() {
	*x = TicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest) ProtoMessage() {}

func (x *TicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest.ProtoReflect.Descriptor instead.
func (*TicketRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{4}
}

func (x *TicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type NotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *NotificationRequest) Reset() {
	*x = NotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationRequest) ProtoMessage() {}

func (x *NotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationRequest.ProtoReflect.Descriptor instead.
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// User service messages
type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string                       `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password    string                       `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	PhoneNumber string                       `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FirstName   string                       `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string                       `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	UserType    RegisterUserRequest_UserType `protobuf:"varint,6,opt,name=user_type,json=userType,proto3,enum=fooddelivery.RegisterUserRequest_UserType" json:"user_type,omitempty"`
	// Optional fields based on user type
	DriverDetails          *DriverDetails          `protobuf:"bytes,7,opt,name=driver_details,json=driverDetails,proto3" json:"driver_details,omitempty"`
	RestaurantStaffDetails *RestaurantStaffDetails `protobuf:"bytes,8,opt,name=restaurant_staff_details,json=restaurantStaffDetails,proto3" json:"restaurant_staff_details,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterUserRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *RegisterUserRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RegisterUserRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *RegisterUserRequest) GetUserType() RegisterUserRequest_UserType {
	if x != nil {
		return x.UserType
	}
	return RegisterUserRequest_CUSTOMER
}

func (x *RegisterUserRequest) GetDriverDetails() *DriverDetails {
	if x != nil {
		return x.DriverDetails
	}
	return nil
}

func (x *RegisterUserRequest) GetRestaurantStaffDetails() *RestaurantStaffDetails {
	if x != nil {
		return x.RestaurantStaffDetails
	}
	return nil
}

type DriverDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleType   string `protobuf:"bytes,1,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	LicenseNumber string `protobuf:"bytes,2,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	VehicleColor  string `protobuf:"bytes,3,opt,name=vehicle_color,json=vehicleColor,proto3" json:"vehicle_color,omitempty"`
	VehicleMake   string `protobuf:"bytes,4,opt,name=vehicle_make,json=vehicleMake,proto3" json:"vehicle_make,omitempty"`
	VehicleModel  string `protobuf:"bytes,5,opt,name=vehicle_model,json=vehicleModel,proto3" json:"vehicle_model,omitempty"`
	VehicleYear   string `protobuf:"bytes,6,opt,name=vehicle_year,json=vehicleYear,proto3" json:"vehicle_year,omitempty"`
}

func (x *DriverDetails) Reset() {
	*x = DriverDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverDetails) ProtoMessage() {}

func (x *DriverDetails) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverDetails.ProtoReflect.Descriptor instead.
func (*DriverDetails) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{7}
}

func (x *DriverDetails) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *DriverDetails) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *DriverDetails) GetVehicleColor() string {
	if x != nil {
		return x.VehicleColor
	}
	return ""
}

func (x *DriverDetails) GetVehicleMake() string {
	if x != nil {
		return x.VehicleMake
	}
	return ""
}

func (x *DriverDetails) GetVehicleModel() string {
	if x != nil {
		return x.VehicleModel
	}
	return ""
}

func (x *DriverDetails) GetVehicleYear() string {
	if x != nil {
		return x.VehicleYear
	}
	return ""
}

type RestaurantStaffDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Role         string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RestaurantStaffDetails) Reset() {
	*x = RestaurantStaffDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantStaffDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantStaffDetails) ProtoMessage() {}

func (x *RestaurantStaffDetails) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantStaffDetails.ProtoReflect.Descriptor instead.
func (*RestaurantStaffDetails) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{8}
}

func (x *RestaurantStaffDetails) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantStaffDetails) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{9}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessToken  string                `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string                `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	UserType     AuthResponse_UserType `protobuf:"varint,4,opt,name=user_type,json=userType,proto3,enum=fooddelivery.AuthResponse_UserType" json:"user_type,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{10}
}

func (x *AuthResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthResponse) GetUserType() AuthResponse_UserType {
	if x != nil {
		return x.UserType
	}
	return AuthResponse_CUSTOMER
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email       string                `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string                `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FirstName   string                `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string                `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	UserType    UserResponse_UserType `protobuf:"varint,6,opt,name=user_type,json=userType,proto3,enum=fooddelivery.UserResponse_UserType" json:"user_type,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{11}
}

func (x *UserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserResponse) GetUserType() UserResponse_UserType {
	if x != nil {
		return x.UserType
	}
	return UserResponse_CUSTOMER
}

type UserProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *UserResponse        `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Addresses      []*AddressInfo       `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	PaymentMethods *PaymentMethodsInfo  `protobuf:"bytes,3,opt,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	Preferences    *CustomerPreferences `protobuf:"bytes,4,opt,name=preferences,proto3" json:"preferences,omitempty"`                          // For customers
	DriverProfile  *DriverProfileInfo   `protobuf:"bytes,5,opt,name=driver_profile,json=driverProfile,proto3" json:"driver_profile,omitempty"` // For drivers
}

func (x *UserProfileResponse) Reset() {
	*x = UserProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileResponse) ProtoMessage() {}

func (x *UserProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileResponse.ProtoReflect.Descriptor instead.
func (*UserProfileResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{12}
}

func (x *UserProfileResponse) GetUser() *UserResponse {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserProfileResponse) GetAddresses() []*AddressInfo {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *UserProfileResponse) GetPaymentMethods() *PaymentMethodsInfo {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *UserProfileResponse) GetPreferences() *CustomerPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *UserProfileResponse) GetDriverProfile() *DriverProfileInfo {
	if x != nil {
		return x.DriverProfile
	}
	return nil
}

type AddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId            string  `protobuf:"bytes,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	AddressLine1         string  `protobuf:"bytes,2,opt,name=address_line1,json=addressLine1,proto3" json:"address_line1,omitempty"`
	AddressLine2         string  `protobuf:"bytes,3,opt,name=address_line2,json=addressLine2,proto3" json:"address_line2,omitempty"`
	City                 string  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	State                string  `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	PostalCode           string  `protobuf:"bytes,6,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country              string  `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Latitude             float64 `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64 `protobuf:"fixed64,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	IsDefault            bool    `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Label                string  `protobuf:"bytes,11,opt,name=label,proto3" json:"label,omitempty"`
	DeliveryInstructions string  `protobuf:"bytes,12,opt,name=delivery_instructions,json=deliveryInstructions,proto3" json:"delivery_instructions,omitempty"`
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{13}
}

func (x *AddressInfo) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

func (x *AddressInfo) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *AddressInfo) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

func (x *AddressInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddressInfo) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *AddressInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddressInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *AddressInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *AddressInfo) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *AddressInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AddressInfo) GetDeliveryInstructions() string {
	if x != nil {
		return x.DeliveryInstructions
	}
	return ""
}

type PaymentMethodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods []*PaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
}

func (x *PaymentMethodsInfo) Reset() {
	*x = PaymentMethodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodsInfo) ProtoMessage() {}

func (x *PaymentMethodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodsInfo.ProtoReflect.Descriptor instead.
func (*PaymentMethodsInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentMethodsInfo) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Type            string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                         // "credit_card", "paypal", etc.
	LastFour        string `protobuf:"bytes,3,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"` // Last four digits for cards
	IsDefault       bool   `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	CardType        string `protobuf:"bytes,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`       // "visa", "mastercard", etc.
	ExpiryDate      string `protobuf:"bytes,6,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"` // For cards
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{15}
}

func (x *PaymentMethod) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *PaymentMethod) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentMethod) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

func (x *PaymentMethod) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *PaymentMethod) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *PaymentMethod) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

type CustomerPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteCuisines     []string `protobuf:"bytes,1,rep,name=favorite_cuisines,json=favoriteCuisines,proto3" json:"favorite_cuisines,omitempty"`
	DietaryRestrictions  []string `protobuf:"bytes,2,rep,name=dietary_restrictions,json=dietaryRestrictions,proto3" json:"dietary_restrictions,omitempty"`
	ContactlessDelivery  bool     `protobuf:"varint,3,opt,name=contactless_delivery,json=contactlessDelivery,proto3" json:"contactless_delivery,omitempty"`
	DefaultTipPercentage int32    `protobuf:"varint,4,opt,name=default_tip_percentage,json=defaultTipPercentage,proto3" json:"default_tip_percentage,omitempty"`
}

func (x *CustomerPreferences) Reset() {
	*x = CustomerPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerPreferences) ProtoMessage() {}

func (x *CustomerPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerPreferences.ProtoReflect.Descriptor instead.
func (*CustomerPreferences) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{16}
}

func (x *CustomerPreferences) GetFavoriteCuisines() []string {
	if x != nil {
		return x.FavoriteCuisines
	}
	return nil
}

func (x *CustomerPreferences) GetDietaryRestrictions() []string {
	if x != nil {
		return x.DietaryRestrictions
	}
	return nil
}

func (x *CustomerPreferences) GetContactlessDelivery() bool {
	if x != nil {
		return x.ContactlessDelivery
	}
	return false
}

func (x *CustomerPreferences) GetDefaultTipPercentage() int32 {
	if x != nil {
		return x.DefaultTipPercentage
	}
	return 0
}

type DriverProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleType     string    `protobuf:"bytes,1,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	LicenseNumber   string    `protobuf:"bytes,2,opt,name=license_number,json=licenseNumber,proto3" json:"license_number,omitempty"`
	IsActive        bool      `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CurrentLocation *Location `protobuf:"bytes,4,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
	Rating          float32   `protobuf:"fixed32,5,opt,name=rating,proto3" json:"rating,omitempty"`
	VehicleDetails  string    `protobuf:"bytes,6,opt,name=vehicle_details,json=vehicleDetails,proto3" json:"vehicle_details,omitempty"`
}

func (x *DriverProfileInfo) Reset() {
	*x = DriverProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverProfileInfo) ProtoMessage() {}

func (x *DriverProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverProfileInfo.ProtoReflect.Descriptor instead.
func (*DriverProfileInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{17}
}

func (x *DriverProfileInfo) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *DriverProfileInfo) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *DriverProfileInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *DriverProfileInfo) GetCurrentLocation() *Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

func (x *DriverProfileInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *DriverProfileInfo) GetVehicleDetails() string {
	if x != nil {
		return x.VehicleDetails
	}
	return ""
}

type UpdateUserProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumber   string               `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FirstName     string               `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string               `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Addresses     []*AddressInfo       `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Preferences   *CustomerPreferences `protobuf:"bytes,6,opt,name=preferences,proto3" json:"preferences,omitempty"`
	DriverProfile *DriverProfileInfo   `protobuf:"bytes,7,opt,name=driver_profile,json=driverProfile,proto3" json:"driver_profile,omitempty"`
}

func (x *UpdateUserProfileRequest) Reset() {
	*x = UpdateUserProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProfileRequest) ProtoMessage() {}

func (x *UpdateUserProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateUserProfileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserProfileRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateUserProfileRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateUserProfileRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateUserProfileRequest) GetAddresses() []*AddressInfo {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *UpdateUserProfileRequest) GetPreferences() *CustomerPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *UpdateUserProfileRequest) GetDriverProfile() *DriverProfileInfo {
	if x != nil {
		return x.DriverProfile
	}
	return nil
}

// Restaurant service messages
type SearchRestaurantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLocation *Location                           `protobuf:"bytes,1,opt,name=user_location,json=userLocation,proto3" json:"user_location,omitempty"`
	RadiusKm     float64                             `protobuf:"fixed64,2,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`
	CuisineType  string                              `protobuf:"bytes,3,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	SearchQuery  string                              `protobuf:"bytes,4,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	OpenNow      bool                                `protobuf:"varint,5,opt,name=open_now,json=openNow,proto3" json:"open_now,omitempty"`
	SortBy       SearchRestaurantsRequest_SortOption `protobuf:"varint,6,opt,name=sort_by,json=sortBy,proto3,enum=fooddelivery.SearchRestaurantsRequest_SortOption" json:"sort_by,omitempty"`
	Page         int32                               `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32                               `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchRestaurantsRequest) Reset() {
	*x = SearchRestaurantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRestaurantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRestaurantsRequest) ProtoMessage() {}

func (x *SearchRestaurantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRestaurantsRequest.ProtoReflect.Descriptor instead.
func (*SearchRestaurantsRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{19}
}

func (x *SearchRestaurantsRequest) GetUserLocation() *Location {
	if x != nil {
		return x.UserLocation
	}
	return nil
}

func (x *SearchRestaurantsRequest) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

func (x *SearchRestaurantsRequest) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *SearchRestaurantsRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *SearchRestaurantsRequest) GetOpenNow() bool {
	if x != nil {
		return x.OpenNow
	}
	return false
}

func (x *SearchRestaurantsRequest) GetSortBy() SearchRestaurantsRequest_SortOption {
	if x != nil {
		return x.SortBy
	}
	return SearchRestaurantsRequest_RELEVANCE
}

func (x *SearchRestaurantsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRestaurantsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{20}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type RestaurantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurants []*RestaurantSummary `protobuf:"bytes,1,rep,name=restaurants,proto3" json:"restaurants,omitempty"`
	TotalCount  int32                `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page        int32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int32                `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *RestaurantsResponse) Reset() {
	*x = RestaurantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantsResponse) ProtoMessage() {}

func (x *RestaurantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantsResponse.ProtoReflect.Descriptor instead.
func (*RestaurantsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{21}
}

func (x *RestaurantsResponse) GetRestaurants() []*RestaurantSummary {
	if x != nil {
		return x.Restaurants
	}
	return nil
}

func (x *RestaurantsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *RestaurantsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RestaurantsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RestaurantSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId          string  `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Name                  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CuisineType           string  `protobuf:"bytes,3,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	Rating                float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	RatingCount           int32   `protobuf:"varint,5,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	ThumbnailUrl          string  `protobuf:"bytes,6,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	EstimatedDeliveryTime int32   `protobuf:"varint,7,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"` // in minutes
	DeliveryFee           float64 `protobuf:"fixed64,8,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	IsPromoted            bool    `protobuf:"varint,9,opt,name=is_promoted,json=isPromoted,proto3" json:"is_promoted,omitempty"`
	DistanceKm            float64 `protobuf:"fixed64,10,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
}

func (x *RestaurantSummary) Reset() {
	*x = RestaurantSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantSummary) ProtoMessage() {}

func (x *RestaurantSummary) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantSummary.ProtoReflect.Descriptor instead.
func (*RestaurantSummary) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{22}
}

func (x *RestaurantSummary) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestaurantSummary) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *RestaurantSummary) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RestaurantSummary) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *RestaurantSummary) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *RestaurantSummary) GetEstimatedDeliveryTime() int32 {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return 0
}

func (x *RestaurantSummary) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *RestaurantSummary) GetIsPromoted() bool {
	if x != nil {
		return x.IsPromoted
	}
	return false
}

func (x *RestaurantSummary) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

type RestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId             string            `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Name                     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CuisineType              string            `protobuf:"bytes,4,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	Address                  *AddressInfo      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	ContactPhone             string            `protobuf:"bytes,6,opt,name=contact_phone,json=contactPhone,proto3" json:"contact_phone,omitempty"`
	ContactEmail             string            `protobuf:"bytes,7,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	OperatingHours           []*OperatingHours `protobuf:"bytes,8,rep,name=operating_hours,json=operatingHours,proto3" json:"operating_hours,omitempty"`
	IsCurrentlyOpen          bool              `protobuf:"varint,9,opt,name=is_currently_open,json=isCurrentlyOpen,proto3" json:"is_currently_open,omitempty"`
	Rating                   float32           `protobuf:"fixed32,10,opt,name=rating,proto3" json:"rating,omitempty"`
	RatingCount              int32             `protobuf:"varint,11,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	ImageUrls                []string          `protobuf:"bytes,12,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	DeliveryFee              float64           `protobuf:"fixed64,13,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	EstimatedPreparationTime int32             `protobuf:"varint,14,opt,name=estimated_preparation_time,json=estimatedPreparationTime,proto3" json:"estimated_preparation_time,omitempty"` // in minutes
	AcceptsOnlinePayments    bool              `protobuf:"varint,15,opt,name=accepts_online_payments,json=acceptsOnlinePayments,proto3" json:"accepts_online_payments,omitempty"`
}

func (x *RestaurantResponse) Reset() {
	*x = RestaurantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantResponse) ProtoMessage() {}

func (x *RestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantResponse.ProtoReflect.Descriptor instead.
func (*RestaurantResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{23}
}

func (x *RestaurantResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestaurantResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RestaurantResponse) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *RestaurantResponse) GetAddress() *AddressInfo {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RestaurantResponse) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *RestaurantResponse) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *RestaurantResponse) GetOperatingHours() []*OperatingHours {
	if x != nil {
		return x.OperatingHours
	}
	return nil
}

func (x *RestaurantResponse) GetIsCurrentlyOpen() bool {
	if x != nil {
		return x.IsCurrentlyOpen
	}
	return false
}

func (x *RestaurantResponse) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RestaurantResponse) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *RestaurantResponse) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *RestaurantResponse) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *RestaurantResponse) GetEstimatedPreparationTime() int32 {
	if x != nil {
		return x.EstimatedPreparationTime
	}
	return 0
}

func (x *RestaurantResponse) GetAcceptsOnlinePayments() bool {
	if x != nil {
		return x.AcceptsOnlinePayments
	}
	return false
}

type OperatingHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day         string `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	OpeningTime string `protobuf:"bytes,2,opt,name=opening_time,json=openingTime,proto3" json:"opening_time,omitempty"`
	ClosingTime string `protobuf:"bytes,3,opt,name=closing_time,json=closingTime,proto3" json:"closing_time,omitempty"`
}

func (x *OperatingHours) Reset() {
	*x = OperatingHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatingHours) ProtoMessage() {}

func (x *OperatingHours) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatingHours.ProtoReflect.Descriptor instead.
func (*OperatingHours) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{24}
}

func (x *OperatingHours) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *OperatingHours) GetOpeningTime() string {
	if x != nil {
		return x.OpeningTime
	}
	return ""
}

func (x *OperatingHours) GetClosingTime() string {
	if x != nil {
		return x.ClosingTime
	}
	return ""
}

type MenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId   string          `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	RestaurantName string          `protobuf:"bytes,2,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
	Categories     []*MenuCategory `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *MenuResponse) Reset() {
	*x = MenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuResponse) ProtoMessage() {}

func (x *MenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuResponse.ProtoReflect.Descriptor instead.
func (*MenuResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{25}
}

func (x *MenuResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *MenuResponse) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *MenuResponse) GetCategories() []*MenuCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type MenuCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId   string      `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name         string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DisplayOrder int32       `protobuf:"varint,4,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	Items        []*MenuItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MenuCategory) Reset() {
	*x = MenuCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuCategory) ProtoMessage() {}

func (x *MenuCategory) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuCategory.ProtoReflect.Descriptor instead.
func (*MenuCategory) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{26}
}

func (x *MenuCategory) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MenuCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MenuCategory) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *MenuCategory) GetItems() []*MenuItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type MenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId               string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrl             string                 `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PreparationTime      int32                  `protobuf:"varint,6,opt,name=preparation_time,json=preparationTime,proto3" json:"preparation_time,omitempty"` // in minutes
	IsVegetarian         bool                   `protobuf:"varint,7,opt,name=is_vegetarian,json=isVegetarian,proto3" json:"is_vegetarian,omitempty"`
	IsVegan              bool                   `protobuf:"varint,8,opt,name=is_vegan,json=isVegan,proto3" json:"is_vegan,omitempty"`
	IsGlutenFree         bool                   `protobuf:"varint,9,opt,name=is_gluten_free,json=isGlutenFree,proto3" json:"is_gluten_free,omitempty"`
	SpiceLevel           int32                  `protobuf:"varint,10,opt,name=spice_level,json=spiceLevel,proto3" json:"spice_level,omitempty"` // 0-5
	CustomizationOptions []*CustomizationOption `protobuf:"bytes,11,rep,name=customization_options,json=customizationOptions,proto3" json:"customization_options,omitempty"`
	IsPopular            bool                   `protobuf:"varint,12,opt,name=is_popular,json=isPopular,proto3" json:"is_popular,omitempty"`
}

func (x *MenuItem) Reset() {
	*x = MenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItem) ProtoMessage() {}

func (x *MenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItem.ProtoReflect.Descriptor instead.
func (*MenuItem) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{27}
}

func (x *MenuItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MenuItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MenuItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *MenuItem) GetPreparationTime() int32 {
	if x != nil {
		return x.PreparationTime
	}
	return 0
}

func (x *MenuItem) GetIsVegetarian() bool {
	if x != nil {
		return x.IsVegetarian
	}
	return false
}

func (x *MenuItem) GetIsVegan() bool {
	if x != nil {
		return x.IsVegan
	}
	return false
}

func (x *MenuItem) GetIsGlutenFree() bool {
	if x != nil {
		return x.IsGlutenFree
	}
	return false
}

func (x *MenuItem) GetSpiceLevel() int32 {
	if x != nil {
		return x.SpiceLevel
	}
	return 0
}

func (x *MenuItem) GetCustomizationOptions() []*CustomizationOption {
	if x != nil {
		return x.CustomizationOptions
	}
	return nil
}

func (x *MenuItem) GetIsPopular() bool {
	if x != nil {
		return x.IsPopular
	}
	return false
}

type CustomizationOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionId      string                 `protobuf:"bytes,1,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsRequired    bool                   `protobuf:"varint,3,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	MinSelections int32                  `protobuf:"varint,4,opt,name=min_selections,json=minSelections,proto3" json:"min_selections,omitempty"`
	MaxSelections int32                  `protobuf:"varint,5,opt,name=max_selections,json=maxSelections,proto3" json:"max_selections,omitempty"`
	Choices       []*CustomizationChoice `protobuf:"bytes,6,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *CustomizationOption) Reset() {
	*x = CustomizationOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizationOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizationOption) ProtoMessage() {}

func (x *CustomizationOption) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizationOption.ProtoReflect.Descriptor instead.
func (*CustomizationOption) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{28}
}

func (x *CustomizationOption) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *CustomizationOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizationOption) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *CustomizationOption) GetMinSelections() int32 {
	if x != nil {
		return x.MinSelections
	}
	return 0
}

func (x *CustomizationOption) GetMaxSelections() int32 {
	if x != nil {
		return x.MaxSelections
	}
	return 0
}

func (x *CustomizationOption) GetChoices() []*CustomizationChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type CustomizationChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChoiceId        string  `protobuf:"bytes,1,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PriceAdjustment float64 `protobuf:"fixed64,3,opt,name=price_adjustment,json=priceAdjustment,proto3" json:"price_adjustment,omitempty"`
}

func (x *CustomizationChoice) Reset() {
	*x = CustomizationChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizationChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizationChoice) ProtoMessage() {}

func (x *CustomizationChoice) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizationChoice.ProtoReflect.Descriptor instead.
func (*CustomizationChoice) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{29}
}

func (x *CustomizationChoice) GetChoiceId() string {
	if x != nil {
		return x.ChoiceId
	}
	return ""
}

func (x *CustomizationChoice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomizationChoice) GetPriceAdjustment() float64 {
	if x != nil {
		return x.PriceAdjustment
	}
	return 0
}

// Order service messages
type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId          string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	RestaurantId        string                 `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	DeliveryAddressId   string                 `protobuf:"bytes,3,opt,name=delivery_address_id,json=deliveryAddressId,proto3" json:"delivery_address_id,omitempty"`
	Items               []*OrderItem           `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	PaymentMethodId     string                 `protobuf:"bytes,5,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	PromotionCode       string                 `protobuf:"bytes,6,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	TipAmount           float64                `protobuf:"fixed64,7,opt,name=tip_amount,json=tipAmount,proto3" json:"tip_amount,omitempty"`
	SpecialInstructions string                 `protobuf:"bytes,8,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
	ScheduledOrder      bool                   `protobuf:"varint,9,opt,name=scheduled_order,json=scheduledOrder,proto3" json:"scheduled_order,omitempty"`
	ScheduledTime       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{30}
}

func (x *CreateOrderRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CreateOrderRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *CreateOrderRequest) GetDeliveryAddressId() string {
	if x != nil {
		return x.DeliveryAddressId
	}
	return ""
}

func (x *CreateOrderRequest) GetItems() []*OrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreateOrderRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreateOrderRequest) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *CreateOrderRequest) GetTipAmount() float64 {
	if x != nil {
		return x.TipAmount
	}
	return 0
}

func (x *CreateOrderRequest) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

func (x *CreateOrderRequest) GetScheduledOrder() bool {
	if x != nil {
		return x.ScheduledOrder
	}
	return false
}

func (x *CreateOrderRequest) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuItemId          string                    `protobuf:"bytes,1,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`
	Quantity            int32                     `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Customizations      []*CustomizationSelection `protobuf:"bytes,3,rep,name=customizations,proto3" json:"customizations,omitempty"`
	SpecialInstructions string                    `protobuf:"bytes,4,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{31}
}

func (x *OrderItem) GetMenuItemId() string {
	if x != nil {
		return x.MenuItemId
	}
	return ""
}

func (x *OrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetCustomizations() []*CustomizationSelection {
	if x != nil {
		return x.Customizations
	}
	return nil
}

func (x *OrderItem) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

type CustomizationSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionId          string   `protobuf:"bytes,1,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	SelectedChoiceIds []string `protobuf:"bytes,2,rep,name=selected_choice_ids,json=selectedChoiceIds,proto3" json:"selected_choice_ids,omitempty"`
}

func (x *CustomizationSelection) Reset() {
	*x = CustomizationSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizationSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizationSelection) ProtoMessage() {}

func (x *CustomizationSelection) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizationSelection.ProtoReflect.Descriptor instead.
func (*CustomizationSelection) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{32}
}

func (x *CustomizationSelection) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *CustomizationSelection) GetSelectedChoiceIds() []string {
	if x != nil {
		return x.SelectedChoiceIds
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               string                    `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CustomerId            string                    `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	RestaurantId          string                    `protobuf:"bytes,3,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	RestaurantName        string                    `protobuf:"bytes,4,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
	Status                OrderResponse_OrderStatus `protobuf:"varint,5,opt,name=status,proto3,enum=fooddelivery.OrderResponse_OrderStatus" json:"status,omitempty"`
	DeliveryAddress       *AddressInfo              `protobuf:"bytes,6,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	PlacedAt              *timestamppb.Timestamp    `protobuf:"bytes,7,opt,name=placed_at,json=placedAt,proto3" json:"placed_at,omitempty"`
	EstimatedDeliveryTime *timestamppb.Timestamp    `protobuf:"bytes,8,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"`
	ActualDeliveryTime    *timestamppb.Timestamp    `protobuf:"bytes,9,opt,name=actual_delivery_time,json=actualDeliveryTime,proto3" json:"actual_delivery_time,omitempty"`
	Items                 []*OrderItemDetails       `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	Pricing               *OrderPricing             `protobuf:"bytes,11,opt,name=pricing,proto3" json:"pricing,omitempty"`
	SpecialInstructions   string                    `protobuf:"bytes,12,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
	Driver                *DriverInfo               `protobuf:"bytes,13,opt,name=driver,proto3" json:"driver,omitempty"`
	TrackingUrl           string                    `protobuf:"bytes,14,opt,name=tracking_url,json=trackingUrl,proto3" json:"tracking_url,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{33}
}

func (x *OrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *OrderResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *OrderResponse) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *OrderResponse) GetStatus() OrderResponse_OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderResponse_CREATED
}

func (x *OrderResponse) GetDeliveryAddress() *AddressInfo {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *OrderResponse) GetPlacedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PlacedAt
	}
	return nil
}

func (x *OrderResponse) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *OrderResponse) GetActualDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryTime
	}
	return nil
}

func (x *OrderResponse) GetItems() []*OrderItemDetails {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderResponse) GetPricing() *OrderPricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *OrderResponse) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

func (x *OrderResponse) GetDriver() *DriverInfo {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *OrderResponse) GetTrackingUrl() string {
	if x != nil {
		return x.TrackingUrl
	}
	return ""
}

type OrderItemDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId              string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity            int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice           float64                `protobuf:"fixed64,4,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TotalPrice          float64                `protobuf:"fixed64,5,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Customizations      []*CustomizationDetail `protobuf:"bytes,6,rep,name=customizations,proto3" json:"customizations,omitempty"`
	SpecialInstructions string                 `protobuf:"bytes,7,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
}

func (x *OrderItemDetails) Reset() {
	*x = OrderItemDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemDetails) ProtoMessage() {}

func (x *OrderItemDetails) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemDetails.ProtoReflect.Descriptor instead.
func (*OrderItemDetails) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{34}
}

func (x *OrderItemDetails) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *OrderItemDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderItemDetails) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItemDetails) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *OrderItemDetails) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *OrderItemDetails) GetCustomizations() []*CustomizationDetail {
	if x != nil {
		return x.Customizations
	}
	return nil
}

func (x *OrderItemDetails) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

type CustomizationDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptionName      string   `protobuf:"bytes,1,opt,name=option_name,json=optionName,proto3" json:"option_name,omitempty"`
	SelectedChoices []string `protobuf:"bytes,2,rep,name=selected_choices,json=selectedChoices,proto3" json:"selected_choices,omitempty"`
	PriceAdjustment float64  `protobuf:"fixed64,3,opt,name=price_adjustment,json=priceAdjustment,proto3" json:"price_adjustment,omitempty"`
}

func (x *CustomizationDetail) Reset() {
	*x = CustomizationDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomizationDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomizationDetail) ProtoMessage() {}

func (x *CustomizationDetail) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomizationDetail.ProtoReflect.Descriptor instead.
func (*CustomizationDetail) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{35}
}

func (x *CustomizationDetail) GetOptionName() string {
	if x != nil {
		return x.OptionName
	}
	return ""
}

func (x *CustomizationDetail) GetSelectedChoices() []string {
	if x != nil {
		return x.SelectedChoices
	}
	return nil
}

func (x *CustomizationDetail) GetPriceAdjustment() float64 {
	if x != nil {
		return x.PriceAdjustment
	}
	return 0
}

type OrderPricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtotal      float64 `protobuf:"fixed64,1,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	DeliveryFee   float64 `protobuf:"fixed64,2,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	ServiceFee    float64 `protobuf:"fixed64,3,opt,name=service_fee,json=serviceFee,proto3" json:"service_fee,omitempty"`
	Tax           float64 `protobuf:"fixed64,4,opt,name=tax,proto3" json:"tax,omitempty"`
	Tip           float64 `protobuf:"fixed64,5,opt,name=tip,proto3" json:"tip,omitempty"`
	Discount      float64 `protobuf:"fixed64,6,opt,name=discount,proto3" json:"discount,omitempty"`
	PromotionCode string  `protobuf:"bytes,7,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	TotalAmount   float64 `protobuf:"fixed64,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
}

func (x *OrderPricing) Reset() {
	*x = OrderPricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPricing) ProtoMessage() {}

func (x *OrderPricing) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPricing.ProtoReflect.Descriptor instead.
func (*OrderPricing) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{36}
}

func (x *OrderPricing) GetSubtotal() float64 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *OrderPricing) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *OrderPricing) GetServiceFee() float64 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

func (x *OrderPricing) GetTax() float64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *OrderPricing) GetTip() float64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *OrderPricing) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *OrderPricing) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *OrderPricing) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type DriverInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId        string    `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	FirstName       string    `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName        string    `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber     string    `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	VehicleType     string    `protobuf:"bytes,5,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	VehicleDetails  string    `protobuf:"bytes,6,opt,name=vehicle_details,json=vehicleDetails,proto3" json:"vehicle_details,omitempty"`
	Rating          float32   `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	CurrentLocation *Location `protobuf:"bytes,8,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
}

func (x *DriverInfo) Reset() {
	*x = DriverInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverInfo) ProtoMessage() {}

func (x *DriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverInfo.ProtoReflect.Descriptor instead.
func (*DriverInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{37}
}

func (x *DriverInfo) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DriverInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DriverInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *DriverInfo) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *DriverInfo) GetVehicleDetails() string {
	if x != nil {
		return x.VehicleDetails
	}
	return ""
}

func (x *DriverInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *DriverInfo) GetCurrentLocation() *Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

type OrderStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               string                          `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status                OrderStatusResponse_OrderStatus `protobuf:"varint,2,opt,name=status,proto3,enum=fooddelivery.OrderStatusResponse_OrderStatus" json:"status,omitempty"`
	EstimatedDeliveryTime *timestamppb.Timestamp          `protobuf:"bytes,3,opt,name=estimated_delivery_time,json=estimatedDeliveryTime,proto3" json:"estimated_delivery_time,omitempty"`
	StatusUpdatedAt       *timestamppb.Timestamp          `protobuf:"bytes,4,opt,name=status_updated_at,json=statusUpdatedAt,proto3" json:"status_updated_at,omitempty"`
	StatusMessage         string                          `protobuf:"bytes,5,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	Driver                *DriverInfo                     `protobuf:"bytes,6,opt,name=driver,proto3" json:"driver,omitempty"`
	CurrentLocation       *Location                       `protobuf:"bytes,7,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
}

func (x *OrderStatusResponse) Reset() {
	*x = OrderStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStatusResponse) ProtoMessage() {}

func (x *OrderStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStatusResponse.ProtoReflect.Descriptor instead.
func (*OrderStatusResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{38}
}

func (x *OrderStatusResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderStatusResponse) GetStatus() OrderStatusResponse_OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatusResponse_CREATED
}

func (x *OrderStatusResponse) GetEstimatedDeliveryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryTime
	}
	return nil
}

func (x *OrderStatusResponse) GetStatusUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusUpdatedAt
	}
	return nil
}

func (x *OrderStatusResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *OrderStatusResponse) GetDriver() *DriverInfo {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *OrderStatusResponse) GetCurrentLocation() *Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

type UpdateOrderStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     string                               `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	NewStatus   UpdateOrderStatusRequest_OrderStatus `protobuf:"varint,2,opt,name=new_status,json=newStatus,proto3,enum=fooddelivery.UpdateOrderStatusRequest_OrderStatus" json:"new_status,omitempty"`
	UpdatedById string                               `protobuf:"bytes,3,opt,name=updated_by_id,json=updatedById,proto3" json:"updated_by_id,omitempty"` // User ID of who updated the status
	StatusNotes string                               `protobuf:"bytes,4,opt,name=status_notes,json=statusNotes,proto3" json:"status_notes,omitempty"`
}

func (x *UpdateOrderStatusRequest) Reset() {
	*x = UpdateOrderStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusRequest) ProtoMessage() {}

func (x *UpdateOrderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateOrderStatusRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateOrderStatusRequest) GetNewStatus() UpdateOrderStatusRequest_OrderStatus {
	if x != nil {
		return x.NewStatus
	}
	return UpdateOrderStatusRequest_CREATED
}

func (x *UpdateOrderStatusRequest) GetUpdatedById() string {
	if x != nil {
		return x.UpdatedById
	}
	return ""
}

func (x *UpdateOrderStatusRequest) GetStatusNotes() string {
	if x != nil {
		return x.StatusNotes
	}
	return ""
}

type OrderHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserType       OrderHistoryRequest_UserType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=fooddelivery.OrderHistoryRequest_UserType" json:"user_type,omitempty"` // Customer, Driver, or Restaurant
	Page           int32                        `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int32                        `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	FilterByStatus string                       `protobuf:"bytes,5,opt,name=filter_by_status,json=filterByStatus,proto3" json:"filter_by_status,omitempty"` // Optional filter
}

func (x *OrderHistoryRequest) Reset() {
	*x = OrderHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHistoryRequest) ProtoMessage() {}

func (x *OrderHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHistoryRequest.ProtoReflect.Descriptor instead.
func (*OrderHistoryRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{40}
}

func (x *OrderHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OrderHistoryRequest) GetUserType() OrderHistoryRequest_UserType {
	if x != nil {
		return x.UserType
	}
	return OrderHistoryRequest_CUSTOMER
}

func (x *OrderHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OrderHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderHistoryRequest) GetFilterByStatus() string {
	if x != nil {
		return x.FilterByStatus
	}
	return ""
}

type OrderHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders     []*OrderSummary `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	TotalCount int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page       int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32           `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *OrderHistoryResponse) Reset() {
	*x = OrderHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHistoryResponse) ProtoMessage() {}

func (x *OrderHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHistoryResponse.ProtoReflect.Descriptor instead.
func (*OrderHistoryResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{41}
}

func (x *OrderHistoryResponse) GetOrders() []*OrderSummary {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *OrderHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *OrderHistoryResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OrderHistoryResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        string                   `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RestaurantName string                   `protobuf:"bytes,2,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
	Status         OrderSummary_OrderStatus `protobuf:"varint,3,opt,name=status,proto3,enum=fooddelivery.OrderSummary_OrderStatus" json:"status,omitempty"`
	PlacedAt       *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=placed_at,json=placedAt,proto3" json:"placed_at,omitempty"`
	TotalAmount    float64                  `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	ItemCount      int32                    `protobuf:"varint,6,opt,name=item_count,json=itemCount,proto3" json:"item_count,omitempty"`
}

func (x *OrderSummary) Reset() {
	*x = OrderSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSummary) ProtoMessage() {}

func (x *OrderSummary) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSummary.ProtoReflect.Descriptor instead.
func (*OrderSummary) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{42}
}

func (x *OrderSummary) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderSummary) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *OrderSummary) GetStatus() OrderSummary_OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderSummary_CREATED
}

func (x *OrderSummary) GetPlacedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PlacedAt
	}
	return nil
}

func (x *OrderSummary) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderSummary) GetItemCount() int32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

// Driver service messages
type UpdateDriverLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string    `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	IsActive bool      `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateDriverLocationRequest) Reset() {
	*x = UpdateDriverLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverLocationRequest) ProtoMessage() {}

func (x *UpdateDriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateDriverLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateDriverLocationRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateDriverLocationRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type AvailableOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*AvailableOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *AvailableOrdersResponse) Reset() {
	*x = AvailableOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableOrdersResponse) ProtoMessage() {}

func (x *AvailableOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableOrdersResponse.ProtoReflect.Descriptor instead.
func (*AvailableOrdersResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{44}
}

func (x *AvailableOrdersResponse) GetOrders() []*AvailableOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type AvailableOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId           string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RestaurantName    string                 `protobuf:"bytes,2,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
	PickupAddress     *AddressInfo           `protobuf:"bytes,3,opt,name=pickup_address,json=pickupAddress,proto3" json:"pickup_address,omitempty"`
	DeliveryAddress   *AddressInfo           `protobuf:"bytes,4,opt,name=delivery_address,json=deliveryAddress,proto3" json:"delivery_address,omitempty"`
	DistanceKm        float64                `protobuf:"fixed64,5,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	EstimatedEarnings float64                `protobuf:"fixed64,6,opt,name=estimated_earnings,json=estimatedEarnings,proto3" json:"estimated_earnings,omitempty"`
	ItemsCount        int32                  `protobuf:"varint,7,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
	PickupReadyTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=pickup_ready_time,json=pickupReadyTime,proto3" json:"pickup_ready_time,omitempty"`
}

func (x *AvailableOrder) Reset() {
	*x = AvailableOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableOrder) ProtoMessage() {}

func (x *AvailableOrder) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableOrder.ProtoReflect.Descriptor instead.
func (*AvailableOrder) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{45}
}

func (x *AvailableOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AvailableOrder) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *AvailableOrder) GetPickupAddress() *AddressInfo {
	if x != nil {
		return x.PickupAddress
	}
	return nil
}

func (x *AvailableOrder) GetDeliveryAddress() *AddressInfo {
	if x != nil {
		return x.DeliveryAddress
	}
	return nil
}

func (x *AvailableOrder) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *AvailableOrder) GetEstimatedEarnings() float64 {
	if x != nil {
		return x.EstimatedEarnings
	}
	return 0
}

func (x *AvailableOrder) GetItemsCount() int32 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

func (x *AvailableOrder) GetPickupReadyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PickupReadyTime
	}
	return nil
}

type AcceptOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	OrderId  string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *AcceptOrderRequest) Reset() {
	*x = AcceptOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderRequest) ProtoMessage() {}

func (x *AcceptOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderRequest.ProtoReflect.Descriptor instead.
func (*AcceptOrderRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{46}
}

func (x *AcceptOrderRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *AcceptOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CompleteDeliveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId          string    `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	DriverId         string    `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	DeliveryLocation *Location `protobuf:"bytes,3,opt,name=delivery_location,json=deliveryLocation,proto3" json:"delivery_location,omitempty"`
	DeliveryPhotoUrl string    `protobuf:"bytes,4,opt,name=delivery_photo_url,json=deliveryPhotoUrl,proto3" json:"delivery_photo_url,omitempty"` // Optional photo confirmation
	DeliveryNotes    string    `protobuf:"bytes,5,opt,name=delivery_notes,json=deliveryNotes,proto3" json:"delivery_notes,omitempty"`
}

func (x *CompleteDeliveryRequest) Reset() {
	*x = CompleteDeliveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteDeliveryRequest) ProtoMessage() {}

func (x *CompleteDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteDeliveryRequest.ProtoReflect.Descriptor instead.
func (*CompleteDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{47}
}

func (x *CompleteDeliveryRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CompleteDeliveryRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CompleteDeliveryRequest) GetDeliveryLocation() *Location {
	if x != nil {
		return x.DeliveryLocation
	}
	return nil
}

func (x *CompleteDeliveryRequest) GetDeliveryPhotoUrl() string {
	if x != nil {
		return x.DeliveryPhotoUrl
	}
	return ""
}

func (x *CompleteDeliveryRequest) GetDeliveryNotes() string {
	if x != nil {
		return x.DeliveryNotes
	}
	return ""
}

// Payment service messages
type ProcessPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId         string                            `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PaymentMethodId string                            `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Amount          float64                           `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency        string                            `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"` // e.g., "USD"
	PaymentType     ProcessPaymentRequest_PaymentType `protobuf:"varint,5,opt,name=payment_type,json=paymentType,proto3,enum=fooddelivery.ProcessPaymentRequest_PaymentType" json:"payment_type,omitempty"`
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{48}
}

func (x *ProcessPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessPaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentType() ProcessPaymentRequest_PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return ProcessPaymentRequest_PAYMENT
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId     string                        `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	OrderId       string                        `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Amount        float64                       `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        PaymentResponse_PaymentStatus `protobuf:"varint,4,opt,name=status,proto3,enum=fooddelivery.PaymentResponse_PaymentStatus" json:"status,omitempty"`
	TransactionId string                        `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ReceiptUrl    string                        `protobuf:"bytes,6,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url,omitempty"`
	ProcessedAt   *timestamppb.Timestamp        `protobuf:"bytes,7,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{49}
}

func (x *PaymentResponse) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PaymentResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PaymentResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentResponse) GetStatus() PaymentResponse_PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentResponse_PENDING
}

func (x *PaymentResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *PaymentResponse) GetReceiptUrl() string {
	if x != nil {
		return x.ReceiptUrl
	}
	return ""
}

func (x *PaymentResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

type RefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId string  `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	OrderId   string  `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Amount    float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"` // Can be partial refund
	Reason    string  `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RefundRequest) Reset() {
	*x = RefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRequest) ProtoMessage() {}

func (x *RefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRequest.ProtoReflect.Descriptor instead.
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{50}
}

func (x *RefundRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *RefundRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RefundRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RefundRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Promotion service messages
type ApplyPromotionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PromotionCode string  `protobuf:"bytes,2,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	RestaurantId  string  `protobuf:"bytes,3,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"` // Optional, for restaurant-specific promotions
	CartValue     float64 `protobuf:"fixed64,4,opt,name=cart_value,json=cartValue,proto3" json:"cart_value,omitempty"`
}

func (x *ApplyPromotionRequest) Reset() {
	*x = ApplyPromotionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPromotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPromotionRequest) ProtoMessage() {}

func (x *ApplyPromotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPromotionRequest.ProtoReflect.Descriptor instead.
func (*ApplyPromotionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{51}
}

func (x *ApplyPromotionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyPromotionRequest) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *ApplyPromotionRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *ApplyPromotionRequest) GetCartValue() float64 {
	if x != nil {
		return x.CartValue
	}
	return 0
}

type PromotionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid            bool                           `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	PromotionId        string                         `protobuf:"bytes,2,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	PromotionCode      string                         `protobuf:"bytes,3,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	Description        string                         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DiscountType       PromotionResponse_DiscountType `protobuf:"varint,5,opt,name=discount_type,json=discountType,proto3,enum=fooddelivery.PromotionResponse_DiscountType" json:"discount_type,omitempty"`
	DiscountValue      float64                        `protobuf:"fixed64,6,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	MinimumOrderValue  float64                        `protobuf:"fixed64,7,opt,name=minimum_order_value,json=minimumOrderValue,proto3" json:"minimum_order_value,omitempty"`
	MaxDiscountAmount  float64                        `protobuf:"fixed64,8,opt,name=max_discount_amount,json=maxDiscountAmount,proto3" json:"max_discount_amount,omitempty"`
	CalculatedDiscount float64                        `protobuf:"fixed64,9,opt,name=calculated_discount,json=calculatedDiscount,proto3" json:"calculated_discount,omitempty"`
	InvalidReason      string                         `protobuf:"bytes,10,opt,name=invalid_reason,json=invalidReason,proto3" json:"invalid_reason,omitempty"` // If is_valid is false
}

func (x *PromotionResponse) Reset() {
	*x = PromotionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionResponse) ProtoMessage() {}

func (x *PromotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionResponse.ProtoReflect.Descriptor instead.
func (*PromotionResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{52}
}

func (x *PromotionResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *PromotionResponse) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *PromotionResponse) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *PromotionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PromotionResponse) GetDiscountType() PromotionResponse_DiscountType {
	if x != nil {
		return x.DiscountType
	}
	return PromotionResponse_PERCENTAGE
}

func (x *PromotionResponse) GetDiscountValue() float64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *PromotionResponse) GetMinimumOrderValue() float64 {
	if x != nil {
		return x.MinimumOrderValue
	}
	return 0
}

func (x *PromotionResponse) GetMaxDiscountAmount() float64 {
	if x != nil {
		return x.MaxDiscountAmount
	}
	return 0
}

func (x *PromotionResponse) GetCalculatedDiscount() float64 {
	if x != nil {
		return x.CalculatedDiscount
	}
	return 0
}

func (x *PromotionResponse) GetInvalidReason() string {
	if x != nil {
		return x.InvalidReason
	}
	return ""
}

type PromotionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Promotions []*PromotionInfo `protobuf:"bytes,1,rep,name=promotions,proto3" json:"promotions,omitempty"`
}

func (x *PromotionsResponse) Reset() {
	*x = PromotionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionsResponse) ProtoMessage() {}

func (x *PromotionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionsResponse.ProtoReflect.Descriptor instead.
func (*PromotionsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{53}
}

func (x *PromotionsResponse) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId       string                     `protobuf:"bytes,1,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	Code              string                     `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Description       string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DiscountType      PromotionInfo_DiscountType `protobuf:"varint,4,opt,name=discount_type,json=discountType,proto3,enum=fooddelivery.PromotionInfo_DiscountType" json:"discount_type,omitempty"`
	DiscountValue     float64                    `protobuf:"fixed64,5,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	MinimumOrderValue float64                    `protobuf:"fixed64,6,opt,name=minimum_order_value,json=minimumOrderValue,proto3" json:"minimum_order_value,omitempty"`
	MaxDiscountAmount float64                    `protobuf:"fixed64,7,opt,name=max_discount_amount,json=maxDiscountAmount,proto3" json:"max_discount_amount,omitempty"`
	EndDate           *timestamppb.Timestamp     `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	RestaurantId      string                     `protobuf:"bytes,9,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"` // Null for platform-wide promotions
	RestaurantName    string                     `protobuf:"bytes,10,opt,name=restaurant_name,json=restaurantName,proto3" json:"restaurant_name,omitempty"`
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{54}
}

func (x *PromotionInfo) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *PromotionInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PromotionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PromotionInfo) GetDiscountType() PromotionInfo_DiscountType {
	if x != nil {
		return x.DiscountType
	}
	return PromotionInfo_PERCENTAGE
}

func (x *PromotionInfo) GetDiscountValue() float64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *PromotionInfo) GetMinimumOrderValue() float64 {
	if x != nil {
		return x.MinimumOrderValue
	}
	return 0
}

func (x *PromotionInfo) GetMaxDiscountAmount() float64 {
	if x != nil {
		return x.MaxDiscountAmount
	}
	return 0
}

func (x *PromotionInfo) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *PromotionInfo) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *PromotionInfo) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

// Support service messages (continued)
type CreateTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId     string                       `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // Optional
	Subject     string                       `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Description string                       `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Priority    CreateTicketRequest_Priority `protobuf:"varint,5,opt,name=priority,proto3,enum=fooddelivery.CreateTicketRequest_Priority" json:"priority,omitempty"`
}

func (x *CreateTicketRequest) Reset() {
	*x = CreateTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRequest) ProtoMessage() {}

func (x *CreateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{55}
}

func (x *CreateTicketRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTicketRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateTicketRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateTicketRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTicketRequest) GetPriority() CreateTicketRequest_Priority {
	if x != nil {
		return x.Priority
	}
	return CreateTicketRequest_LOW
}

type TicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId    string                      `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	UserId      string                      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderId     string                      `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Subject     string                      `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Description string                      `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Status      TicketResponse_TicketStatus `protobuf:"varint,6,opt,name=status,proto3,enum=fooddelivery.TicketResponse_TicketStatus" json:"status,omitempty"`
	Priority    TicketResponse_Priority     `protobuf:"varint,7,opt,name=priority,proto3,enum=fooddelivery.TicketResponse_Priority" json:"priority,omitempty"`
	AssignedTo  string                      `protobuf:"bytes,8,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"` // Support agent ID
	CreatedAt   *timestamppb.Timestamp      `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp      `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ResolvedAt  *timestamppb.Timestamp      `protobuf:"bytes,11,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	Messages    []*TicketMessageInfo        `protobuf:"bytes,12,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *TicketResponse) Reset() {
	*x = TicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketResponse) ProtoMessage() {}

func (x *TicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketResponse.ProtoReflect.Descriptor instead.
func (*TicketResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{56}
}

func (x *TicketResponse) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *TicketResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TicketResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TicketResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TicketResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TicketResponse) GetStatus() TicketResponse_TicketStatus {
	if x != nil {
		return x.Status
	}
	return TicketResponse_OPEN
}

func (x *TicketResponse) GetPriority() TicketResponse_Priority {
	if x != nil {
		return x.Priority
	}
	return TicketResponse_LOW
}

func (x *TicketResponse) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *TicketResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TicketResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TicketResponse) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

func (x *TicketResponse) GetMessages() []*TicketMessageInfo {
	if x != nil {
		return x.Messages
	}
	return nil
}

type TicketMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SenderId       string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName     string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	IsSupportAgent bool                   `protobuf:"varint,4,opt,name=is_support_agent,json=isSupportAgent,proto3" json:"is_support_agent,omitempty"`
	Message        string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AttachmentUrls []string               `protobuf:"bytes,7,rep,name=attachment_urls,json=attachmentUrls,proto3" json:"attachment_urls,omitempty"`
}

func (x *TicketMessageInfo) Reset() {
	*x = TicketMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMessageInfo) ProtoMessage() {}

func (x *TicketMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMessageInfo.ProtoReflect.Descriptor instead.
func (*TicketMessageInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{57}
}

func (x *TicketMessageInfo) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TicketMessageInfo) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *TicketMessageInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *TicketMessageInfo) GetIsSupportAgent() bool {
	if x != nil {
		return x.IsSupportAgent
	}
	return false
}

func (x *TicketMessageInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TicketMessageInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TicketMessageInfo) GetAttachmentUrls() []string {
	if x != nil {
		return x.AttachmentUrls
	}
	return nil
}

type AddTicketMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId       string   `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	SenderId       string   `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Message        string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	AttachmentUrls []string `protobuf:"bytes,4,rep,name=attachment_urls,json=attachmentUrls,proto3" json:"attachment_urls,omitempty"`
}

func (x *AddTicketMessageRequest) Reset() {
	*x = AddTicketMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTicketMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTicketMessageRequest) ProtoMessage() {}

func (x *AddTicketMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTicketMessageRequest.ProtoReflect.Descriptor instead.
func (*AddTicketMessageRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{58}
}

func (x *AddTicketMessageRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AddTicketMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *AddTicketMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddTicketMessageRequest) GetAttachmentUrls() []string {
	if x != nil {
		return x.AttachmentUrls
	}
	return nil
}

type TicketMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	TicketId       string                 `protobuf:"bytes,2,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	SenderId       string                 `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName     string                 `protobuf:"bytes,4,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	IsSupportAgent bool                   `protobuf:"varint,5,opt,name=is_support_agent,json=isSupportAgent,proto3" json:"is_support_agent,omitempty"`
	Message        string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AttachmentUrls []string               `protobuf:"bytes,8,rep,name=attachment_urls,json=attachmentUrls,proto3" json:"attachment_urls,omitempty"`
}

func (x *TicketMessageResponse) Reset() {
	*x = TicketMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMessageResponse) ProtoMessage() {}

func (x *TicketMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMessageResponse.ProtoReflect.Descriptor instead.
func (*TicketMessageResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{59}
}

func (x *TicketMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TicketMessageResponse) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *TicketMessageResponse) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *TicketMessageResponse) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *TicketMessageResponse) GetIsSupportAgent() bool {
	if x != nil {
		return x.IsSupportAgent
	}
	return false
}

func (x *TicketMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TicketMessageResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TicketMessageResponse) GetAttachmentUrls() []string {
	if x != nil {
		return x.AttachmentUrls
	}
	return nil
}

// Notification service messages
type NotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*NotificationInfo `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	UnreadCount   int32               `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
}

func (x *NotificationsResponse) Reset() {
	*x = NotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsResponse) ProtoMessage() {}

func (x *NotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{60}
}

func (x *NotificationsResponse) GetNotifications() []*NotificationInfo {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *NotificationsResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type NotificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string                            `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title          string                            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message        string                            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Type           NotificationInfo_NotificationType `protobuf:"varint,5,opt,name=type,proto3,enum=fooddelivery.NotificationInfo_NotificationType" json:"type,omitempty"`
	ReferenceId    string                            `protobuf:"bytes,6,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"` // Could be order_id, promotion_id, etc.
	IsRead         bool                              `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	CreatedAt      *timestamppb.Timestamp            `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *NotificationInfo) Reset() {
	*x = NotificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationInfo) ProtoMessage() {}

func (x *NotificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationInfo.ProtoReflect.Descriptor instead.
func (*NotificationInfo) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{61}
}

func (x *NotificationInfo) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotificationInfo) GetType() NotificationInfo_NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationInfo_ORDER_UPDATE
}

func (x *NotificationInfo) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *NotificationInfo) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CreateRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId                  string            `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Name                     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CuisineType              string            `protobuf:"bytes,4,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	Address                  *AddressInfo      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	ContactPhone             string            `protobuf:"bytes,6,opt,name=contact_phone,json=contactPhone,proto3" json:"contact_phone,omitempty"`
	ContactEmail             string            `protobuf:"bytes,7,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	OperatingHours           []*OperatingHours `protobuf:"bytes,8,rep,name=operating_hours,json=operatingHours,proto3" json:"operating_hours,omitempty"`
	ImageUrls                []string          `protobuf:"bytes,9,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	DeliveryFee              float64           `protobuf:"fixed64,10,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	EstimatedPreparationTime int32             `protobuf:"varint,11,opt,name=estimated_preparation_time,json=estimatedPreparationTime,proto3" json:"estimated_preparation_time,omitempty"`
	AcceptsOnlinePayments    bool              `protobuf:"varint,12,opt,name=accepts_online_payments,json=acceptsOnlinePayments,proto3" json:"accepts_online_payments,omitempty"`
}

func (x *CreateRestaurantRequest) Reset() {
	*x = CreateRestaurantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestaurantRequest) ProtoMessage() {}

func (x *CreateRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRestaurantRequest.ProtoReflect.Descriptor instead.
func (*CreateRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{62}
}

func (x *CreateRestaurantRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateRestaurantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRestaurantRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRestaurantRequest) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *CreateRestaurantRequest) GetAddress() *AddressInfo {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CreateRestaurantRequest) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *CreateRestaurantRequest) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *CreateRestaurantRequest) GetOperatingHours() []*OperatingHours {
	if x != nil {
		return x.OperatingHours
	}
	return nil
}

func (x *CreateRestaurantRequest) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *CreateRestaurantRequest) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *CreateRestaurantRequest) GetEstimatedPreparationTime() int32 {
	if x != nil {
		return x.EstimatedPreparationTime
	}
	return 0
}

func (x *CreateRestaurantRequest) GetAcceptsOnlinePayments() bool {
	if x != nil {
		return x.AcceptsOnlinePayments
	}
	return false
}

type UpdateRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId             string            `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Name                     string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CuisineType              string            `protobuf:"bytes,4,opt,name=cuisine_type,json=cuisineType,proto3" json:"cuisine_type,omitempty"`
	Address                  *AddressInfo      `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	ContactPhone             string            `protobuf:"bytes,6,opt,name=contact_phone,json=contactPhone,proto3" json:"contact_phone,omitempty"`
	ContactEmail             string            `protobuf:"bytes,7,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	OperatingHours           []*OperatingHours `protobuf:"bytes,8,rep,name=operating_hours,json=operatingHours,proto3" json:"operating_hours,omitempty"`
	ImageUrls                []string          `protobuf:"bytes,9,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	DeliveryFee              float64           `protobuf:"fixed64,10,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	EstimatedPreparationTime int32             `protobuf:"varint,11,opt,name=estimated_preparation_time,json=estimatedPreparationTime,proto3" json:"estimated_preparation_time,omitempty"`
	AcceptsOnlinePayments    bool              `protobuf:"varint,12,opt,name=accepts_online_payments,json=acceptsOnlinePayments,proto3" json:"accepts_online_payments,omitempty"`
	IsActive                 bool              `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateRestaurantRequest) Reset() {
	*x = UpdateRestaurantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRestaurantRequest) ProtoMessage() {}

func (x *UpdateRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRestaurantRequest.ProtoReflect.Descriptor instead.
func (*UpdateRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateRestaurantRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetCuisineType() string {
	if x != nil {
		return x.CuisineType
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetAddress() *AddressInfo {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateRestaurantRequest) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *UpdateRestaurantRequest) GetOperatingHours() []*OperatingHours {
	if x != nil {
		return x.OperatingHours
	}
	return nil
}

func (x *UpdateRestaurantRequest) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *UpdateRestaurantRequest) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *UpdateRestaurantRequest) GetEstimatedPreparationTime() int32 {
	if x != nil {
		return x.EstimatedPreparationTime
	}
	return 0
}

func (x *UpdateRestaurantRequest) GetAcceptsOnlinePayments() bool {
	if x != nil {
		return x.AcceptsOnlinePayments
	}
	return false
}

func (x *UpdateRestaurantRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CreateMenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId         string                 `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	CategoryId           string                 `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price                float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrl             string                 `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PreparationTime      int32                  `protobuf:"varint,7,opt,name=preparation_time,json=preparationTime,proto3" json:"preparation_time,omitempty"`
	IsVegetarian         bool                   `protobuf:"varint,8,opt,name=is_vegetarian,json=isVegetarian,proto3" json:"is_vegetarian,omitempty"`
	IsVegan              bool                   `protobuf:"varint,9,opt,name=is_vegan,json=isVegan,proto3" json:"is_vegan,omitempty"`
	IsGlutenFree         bool                   `protobuf:"varint,10,opt,name=is_gluten_free,json=isGlutenFree,proto3" json:"is_gluten_free,omitempty"`
	SpiceLevel           int32                  `protobuf:"varint,11,opt,name=spice_level,json=spiceLevel,proto3" json:"spice_level,omitempty"`
	CustomizationOptions []*CustomizationOption `protobuf:"bytes,12,rep,name=customization_options,json=customizationOptions,proto3" json:"customization_options,omitempty"`
}

func (x *CreateMenuItemRequest) Reset() {
	*x = CreateMenuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuItemRequest) ProtoMessage() {}

func (x *CreateMenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuItemRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuItemRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{64}
}

func (x *CreateMenuItemRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *CreateMenuItemRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CreateMenuItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMenuItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMenuItemRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateMenuItemRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreateMenuItemRequest) GetPreparationTime() int32 {
	if x != nil {
		return x.PreparationTime
	}
	return 0
}

func (x *CreateMenuItemRequest) GetIsVegetarian() bool {
	if x != nil {
		return x.IsVegetarian
	}
	return false
}

func (x *CreateMenuItemRequest) GetIsVegan() bool {
	if x != nil {
		return x.IsVegan
	}
	return false
}

func (x *CreateMenuItemRequest) GetIsGlutenFree() bool {
	if x != nil {
		return x.IsGlutenFree
	}
	return false
}

func (x *CreateMenuItemRequest) GetSpiceLevel() int32 {
	if x != nil {
		return x.SpiceLevel
	}
	return 0
}

func (x *CreateMenuItemRequest) GetCustomizationOptions() []*CustomizationOption {
	if x != nil {
		return x.CustomizationOptions
	}
	return nil
}

type UpdateMenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId               string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RestaurantId         string                 `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	CategoryId           string                 `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Price                float64                `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrl             string                 `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PreparationTime      int32                  `protobuf:"varint,8,opt,name=preparation_time,json=preparationTime,proto3" json:"preparation_time,omitempty"`
	IsVegetarian         bool                   `protobuf:"varint,9,opt,name=is_vegetarian,json=isVegetarian,proto3" json:"is_vegetarian,omitempty"`
	IsVegan              bool                   `protobuf:"varint,10,opt,name=is_vegan,json=isVegan,proto3" json:"is_vegan,omitempty"`
	IsGlutenFree         bool                   `protobuf:"varint,11,opt,name=is_gluten_free,json=isGlutenFree,proto3" json:"is_gluten_free,omitempty"`
	SpiceLevel           int32                  `protobuf:"varint,12,opt,name=spice_level,json=spiceLevel,proto3" json:"spice_level,omitempty"`
	CustomizationOptions []*CustomizationOption `protobuf:"bytes,13,rep,name=customization_options,json=customizationOptions,proto3" json:"customization_options,omitempty"`
	IsActive             bool                   `protobuf:"varint,14,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateMenuItemRequest) Reset() {
	*x = UpdateMenuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuItemRequest) ProtoMessage() {}

func (x *UpdateMenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuItemRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateMenuItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateMenuItemRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateMenuItemRequest) GetPreparationTime() int32 {
	if x != nil {
		return x.PreparationTime
	}
	return 0
}

func (x *UpdateMenuItemRequest) GetIsVegetarian() bool {
	if x != nil {
		return x.IsVegetarian
	}
	return false
}

func (x *UpdateMenuItemRequest) GetIsVegan() bool {
	if x != nil {
		return x.IsVegan
	}
	return false
}

func (x *UpdateMenuItemRequest) GetIsGlutenFree() bool {
	if x != nil {
		return x.IsGlutenFree
	}
	return false
}

func (x *UpdateMenuItemRequest) GetSpiceLevel() int32 {
	if x != nil {
		return x.SpiceLevel
	}
	return 0
}

func (x *UpdateMenuItemRequest) GetCustomizationOptions() []*CustomizationOption {
	if x != nil {
		return x.CustomizationOptions
	}
	return nil
}

func (x *UpdateMenuItemRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type MenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RestaurantId string `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
}

func (x *MenuItemRequest) Reset() {
	*x = MenuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItemRequest) ProtoMessage() {}

func (x *MenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItemRequest.ProtoReflect.Descriptor instead.
func (*MenuItemRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{66}
}

func (x *MenuItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MenuItemRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type MenuItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId               string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RestaurantId         string                 `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	CategoryId           string                 `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Price                float64                `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrl             string                 `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PreparationTime      int32                  `protobuf:"varint,8,opt,name=preparation_time,json=preparationTime,proto3" json:"preparation_time,omitempty"`
	IsVegetarian         bool                   `protobuf:"varint,9,opt,name=is_vegetarian,json=isVegetarian,proto3" json:"is_vegetarian,omitempty"`
	IsVegan              bool                   `protobuf:"varint,10,opt,name=is_vegan,json=isVegan,proto3" json:"is_vegan,omitempty"`
	IsGlutenFree         bool                   `protobuf:"varint,11,opt,name=is_gluten_free,json=isGlutenFree,proto3" json:"is_gluten_free,omitempty"`
	SpiceLevel           int32                  `protobuf:"varint,12,opt,name=spice_level,json=spiceLevel,proto3" json:"spice_level,omitempty"`
	CustomizationOptions []*CustomizationOption `protobuf:"bytes,13,rep,name=customization_options,json=customizationOptions,proto3" json:"customization_options,omitempty"`
	IsActive             bool                   `protobuf:"varint,14,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *MenuItemResponse) Reset() {
	*x = MenuItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItemResponse) ProtoMessage() {}

func (x *MenuItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItemResponse.ProtoReflect.Descriptor instead.
func (*MenuItemResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{67}
}

func (x *MenuItemResponse) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MenuItemResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *MenuItemResponse) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MenuItemResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuItemResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MenuItemResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MenuItemResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *MenuItemResponse) GetPreparationTime() int32 {
	if x != nil {
		return x.PreparationTime
	}
	return 0
}

func (x *MenuItemResponse) GetIsVegetarian() bool {
	if x != nil {
		return x.IsVegetarian
	}
	return false
}

func (x *MenuItemResponse) GetIsVegan() bool {
	if x != nil {
		return x.IsVegan
	}
	return false
}

func (x *MenuItemResponse) GetIsGlutenFree() bool {
	if x != nil {
		return x.IsGlutenFree
	}
	return false
}

func (x *MenuItemResponse) GetSpiceLevel() int32 {
	if x != nil {
		return x.SpiceLevel
	}
	return 0
}

func (x *MenuItemResponse) GetCustomizationOptions() []*CustomizationOption {
	if x != nil {
		return x.CustomizationOptions
	}
	return nil
}

func (x *MenuItemResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type RestaurantOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders     []*OrderResponse `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *RestaurantOrdersResponse) Reset() {
	*x = RestaurantOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantOrdersResponse) ProtoMessage() {}

func (x *RestaurantOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantOrdersResponse.ProtoReflect.Descriptor instead.
func (*RestaurantOrdersResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{68}
}

func (x *RestaurantOrdersResponse) GetOrders() []*OrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *RestaurantOrdersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdatePreparationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               string                                           `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RestaurantId          string                                           `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Status                UpdatePreparationStatusRequest_PreparationStatus `protobuf:"varint,3,opt,name=status,proto3,enum=fooddelivery.UpdatePreparationStatusRequest_PreparationStatus" json:"status,omitempty"`
	EstimatedReadyMinutes int32                                            `protobuf:"varint,4,opt,name=estimated_ready_minutes,json=estimatedReadyMinutes,proto3" json:"estimated_ready_minutes,omitempty"`
}

func (x *UpdatePreparationStatusRequest) Reset() {
	*x = UpdatePreparationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePreparationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePreparationStatusRequest) ProtoMessage() {}

func (x *UpdatePreparationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePreparationStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdatePreparationStatusRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{69}
}

func (x *UpdatePreparationStatusRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdatePreparationStatusRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *UpdatePreparationStatusRequest) GetStatus() UpdatePreparationStatusRequest_PreparationStatus {
	if x != nil {
		return x.Status
	}
	return UpdatePreparationStatusRequest_CONFIRMED
}

func (x *UpdatePreparationStatusRequest) GetEstimatedReadyMinutes() int32 {
	if x != nil {
		return x.EstimatedReadyMinutes
	}
	return 0
}

type RestaurantAnalyticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string                                   `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	StartDate    *timestamppb.Timestamp                   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp                   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Type         RestaurantAnalyticsRequest_AnalyticsType `protobuf:"varint,4,opt,name=type,proto3,enum=fooddelivery.RestaurantAnalyticsRequest_AnalyticsType" json:"type,omitempty"`
}

func (x *RestaurantAnalyticsRequest) Reset() {
	*x = RestaurantAnalyticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantAnalyticsRequest) ProtoMessage() {}

func (x *RestaurantAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*RestaurantAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{70}
}

func (x *RestaurantAnalyticsRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantAnalyticsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *RestaurantAnalyticsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *RestaurantAnalyticsRequest) GetType() RestaurantAnalyticsRequest_AnalyticsType {
	if x != nil {
		return x.Type
	}
	return RestaurantAnalyticsRequest_SALES
}

type RestaurantAnalyticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId  string         `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	SalesData     *SalesData     `protobuf:"bytes,2,opt,name=sales_data,json=salesData,proto3" json:"sales_data,omitempty"`
	OrdersData    *OrdersData    `protobuf:"bytes,3,opt,name=orders_data,json=ordersData,proto3" json:"orders_data,omitempty"`
	ItemsData     *ItemsData     `protobuf:"bytes,4,opt,name=items_data,json=itemsData,proto3" json:"items_data,omitempty"`
	CustomersData *CustomersData `protobuf:"bytes,5,opt,name=customers_data,json=customersData,proto3" json:"customers_data,omitempty"`
}

func (x *RestaurantAnalyticsResponse) Reset() {
	*x = RestaurantAnalyticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantAnalyticsResponse) ProtoMessage() {}

func (x *RestaurantAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*RestaurantAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{71}
}

func (x *RestaurantAnalyticsResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantAnalyticsResponse) GetSalesData() *SalesData {
	if x != nil {
		return x.SalesData
	}
	return nil
}

func (x *RestaurantAnalyticsResponse) GetOrdersData() *OrdersData {
	if x != nil {
		return x.OrdersData
	}
	return nil
}

func (x *RestaurantAnalyticsResponse) GetItemsData() *ItemsData {
	if x != nil {
		return x.ItemsData
	}
	return nil
}

func (x *RestaurantAnalyticsResponse) GetCustomersData() *CustomersData {
	if x != nil {
		return x.CustomersData
	}
	return nil
}

type SalesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSales        float64        `protobuf:"fixed64,1,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	DailySales        []*DailySales  `protobuf:"bytes,2,rep,name=daily_sales,json=dailySales,proto3" json:"daily_sales,omitempty"`
	AverageOrderValue float64        `protobuf:"fixed64,3,opt,name=average_order_value,json=averageOrderValue,proto3" json:"average_order_value,omitempty"`
	HourlyBreakdown   []*HourlySales `protobuf:"bytes,4,rep,name=hourly_breakdown,json=hourlyBreakdown,proto3" json:"hourly_breakdown,omitempty"`
}

func (x *SalesData) Reset() {
	*x = SalesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesData) ProtoMessage() {}

func (x *SalesData) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesData.ProtoReflect.Descriptor instead.
func (*SalesData) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{72}
}

func (x *SalesData) GetTotalSales() float64 {
	if x != nil {
		return x.TotalSales
	}
	return 0
}

func (x *SalesData) GetDailySales() []*DailySales {
	if x != nil {
		return x.DailySales
	}
	return nil
}

func (x *SalesData) GetAverageOrderValue() float64 {
	if x != nil {
		return x.AverageOrderValue
	}
	return 0
}

func (x *SalesData) GetHourlyBreakdown() []*HourlySales {
	if x != nil {
		return x.HourlyBreakdown
	}
	return nil
}

type DailySales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	SalesAmount float64 `protobuf:"fixed64,2,opt,name=sales_amount,json=salesAmount,proto3" json:"sales_amount,omitempty"`
	OrdersCount int32   `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *DailySales) Reset() {
	*x = DailySales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailySales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySales) ProtoMessage() {}

func (x *DailySales) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySales.ProtoReflect.Descriptor instead.
func (*DailySales) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{73}
}

func (x *DailySales) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailySales) GetSalesAmount() float64 {
	if x != nil {
		return x.SalesAmount
	}
	return 0
}

func (x *DailySales) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type HourlySales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hour        int32   `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	SalesAmount float64 `protobuf:"fixed64,2,opt,name=sales_amount,json=salesAmount,proto3" json:"sales_amount,omitempty"`
	OrdersCount int32   `protobuf:"varint,3,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
}

func (x *HourlySales) Reset() {
	*x = HourlySales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourlySales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourlySales) ProtoMessage() {}

func (x *HourlySales) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourlySales.ProtoReflect.Descriptor instead.
func (*HourlySales) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{74}
}

func (x *HourlySales) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *HourlySales) GetSalesAmount() float64 {
	if x != nil {
		return x.SalesAmount
	}
	return 0
}

func (x *HourlySales) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

type OrdersData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders            int32   `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	CompletedOrders        int32   `protobuf:"varint,2,opt,name=completed_orders,json=completedOrders,proto3" json:"completed_orders,omitempty"`
	CancelledOrders        int32   `protobuf:"varint,3,opt,name=cancelled_orders,json=cancelledOrders,proto3" json:"cancelled_orders,omitempty"`
	CancellationRate       float64 `protobuf:"fixed64,4,opt,name=cancellation_rate,json=cancellationRate,proto3" json:"cancellation_rate,omitempty"`
	AveragePreparationTime int32   `protobuf:"varint,5,opt,name=average_preparation_time,json=averagePreparationTime,proto3" json:"average_preparation_time,omitempty"`
	AverageDeliveryTime    int32   `protobuf:"varint,6,opt,name=average_delivery_time,json=averageDeliveryTime,proto3" json:"average_delivery_time,omitempty"`
}

func (x *OrdersData) Reset() {
	*x = OrdersData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdersData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdersData) ProtoMessage() {}

func (x *OrdersData) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdersData.ProtoReflect.Descriptor instead.
func (*OrdersData) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{75}
}

func (x *OrdersData) GetTotalOrders() int32 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *OrdersData) GetCompletedOrders() int32 {
	if x != nil {
		return x.CompletedOrders
	}
	return 0
}

func (x *OrdersData) GetCancelledOrders() int32 {
	if x != nil {
		return x.CancelledOrders
	}
	return 0
}

func (x *OrdersData) GetCancellationRate() float64 {
	if x != nil {
		return x.CancellationRate
	}
	return 0
}

func (x *OrdersData) GetAveragePreparationTime() int32 {
	if x != nil {
		return x.AveragePreparationTime
	}
	return 0
}

func (x *OrdersData) GetAverageDeliveryTime() int32 {
	if x != nil {
		return x.AverageDeliveryTime
	}
	return 0
}

type ItemsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopItems            []*TopMenuItem         `protobuf:"bytes,1,rep,name=top_items,json=topItems,proto3" json:"top_items,omitempty"`
	CategoryPerformance []*CategoryPerformance `protobuf:"bytes,2,rep,name=category_performance,json=categoryPerformance,proto3" json:"category_performance,omitempty"`
}

func (x *ItemsData) Reset() {
	*x = ItemsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemsData) ProtoMessage() {}

func (x *ItemsData) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemsData.ProtoReflect.Descriptor instead.
func (*ItemsData) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{76}
}

func (x *ItemsData) GetTopItems() []*TopMenuItem {
	if x != nil {
		return x.TopItems
	}
	return nil
}

func (x *ItemsData) GetCategoryPerformance() []*CategoryPerformance {
	if x != nil {
		return x.CategoryPerformance
	}
	return nil
}

type TopMenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId             string  `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name               string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	QuantitySold       int32   `protobuf:"varint,3,opt,name=quantity_sold,json=quantitySold,proto3" json:"quantity_sold,omitempty"`
	TotalSales         float64 `protobuf:"fixed64,4,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	PercentageOfOrders float64 `protobuf:"fixed64,5,opt,name=percentage_of_orders,json=percentageOfOrders,proto3" json:"percentage_of_orders,omitempty"`
}

func (x *TopMenuItem) Reset() {
	*x = TopMenuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopMenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopMenuItem) ProtoMessage() {}

func (x *TopMenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopMenuItem.ProtoReflect.Descriptor instead.
func (*TopMenuItem) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{77}
}

func (x *TopMenuItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *TopMenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopMenuItem) GetQuantitySold() int32 {
	if x != nil {
		return x.QuantitySold
	}
	return 0
}

func (x *TopMenuItem) GetTotalSales() float64 {
	if x != nil {
		return x.TotalSales
	}
	return 0
}

func (x *TopMenuItem) GetPercentageOfOrders() float64 {
	if x != nil {
		return x.PercentageOfOrders
	}
	return 0
}

type CategoryPerformance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId        string  `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name              string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ItemsSold         int32   `protobuf:"varint,3,opt,name=items_sold,json=itemsSold,proto3" json:"items_sold,omitempty"`
	TotalSales        float64 `protobuf:"fixed64,4,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	PercentageOfSales float64 `protobuf:"fixed64,5,opt,name=percentage_of_sales,json=percentageOfSales,proto3" json:"percentage_of_sales,omitempty"`
}

func (x *CategoryPerformance) Reset() {
	*x = CategoryPerformance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryPerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryPerformance) ProtoMessage() {}

func (x *CategoryPerformance) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryPerformance.ProtoReflect.Descriptor instead.
func (*CategoryPerformance) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{78}
}

func (x *CategoryPerformance) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CategoryPerformance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryPerformance) GetItemsSold() int32 {
	if x != nil {
		return x.ItemsSold
	}
	return 0
}

func (x *CategoryPerformance) GetTotalSales() float64 {
	if x != nil {
		return x.TotalSales
	}
	return 0
}

func (x *CategoryPerformance) GetPercentageOfSales() float64 {
	if x != nil {
		return x.PercentageOfSales
	}
	return 0
}

type CustomersData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCustomers           int32          `protobuf:"varint,1,opt,name=total_customers,json=totalCustomers,proto3" json:"total_customers,omitempty"`
	NewCustomers             int32          `protobuf:"varint,2,opt,name=new_customers,json=newCustomers,proto3" json:"new_customers,omitempty"`
	ReturningCustomers       int32          `protobuf:"varint,3,opt,name=returning_customers,json=returningCustomers,proto3" json:"returning_customers,omitempty"`
	AverageCustomerFrequency float64        `protobuf:"fixed64,4,opt,name=average_customer_frequency,json=averageCustomerFrequency,proto3" json:"average_customer_frequency,omitempty"`
	TopCustomers             []*TopCustomer `protobuf:"bytes,5,rep,name=top_customers,json=topCustomers,proto3" json:"top_customers,omitempty"`
}

func (x *CustomersData) Reset() {
	*x = CustomersData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomersData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomersData) ProtoMessage() {}

func (x *CustomersData) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomersData.ProtoReflect.Descriptor instead.
func (*CustomersData) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{79}
}

func (x *CustomersData) GetTotalCustomers() int32 {
	if x != nil {
		return x.TotalCustomers
	}
	return 0
}

func (x *CustomersData) GetNewCustomers() int32 {
	if x != nil {
		return x.NewCustomers
	}
	return 0
}

func (x *CustomersData) GetReturningCustomers() int32 {
	if x != nil {
		return x.ReturningCustomers
	}
	return 0
}

func (x *CustomersData) GetAverageCustomerFrequency() float64 {
	if x != nil {
		return x.AverageCustomerFrequency
	}
	return 0
}

func (x *CustomersData) GetTopCustomers() []*TopCustomer {
	if x != nil {
		return x.TopCustomers
	}
	return nil
}

type TopCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId        string  `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	OrdersCount       int32   `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	TotalSpent        float64 `protobuf:"fixed64,3,opt,name=total_spent,json=totalSpent,proto3" json:"total_spent,omitempty"`
	AverageOrderValue float64 `protobuf:"fixed64,4,opt,name=average_order_value,json=averageOrderValue,proto3" json:"average_order_value,omitempty"`
}

func (x *TopCustomer) Reset() {
	*x = TopCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCustomer) ProtoMessage() {}

func (x *TopCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCustomer.ProtoReflect.Descriptor instead.
func (*TopCustomer) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{80}
}

func (x *TopCustomer) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *TopCustomer) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *TopCustomer) GetTotalSpent() float64 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *TopCustomer) GetAverageOrderValue() float64 {
	if x != nil {
		return x.AverageOrderValue
	}
	return 0
}

type SystemStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *SystemStatsRequest) Reset() {
	*x = SystemStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatsRequest) ProtoMessage() {}

func (x *SystemStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatsRequest.ProtoReflect.Descriptor instead.
func (*SystemStatsRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{81}
}

func (x *SystemStatsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SystemStatsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type SystemStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalOrders       int32          `protobuf:"varint,1,opt,name=total_orders,json=totalOrders,proto3" json:"total_orders,omitempty"`
	TotalSales        float64        `protobuf:"fixed64,2,opt,name=total_sales,json=totalSales,proto3" json:"total_sales,omitempty"`
	ActiveUsers       int32          `protobuf:"varint,3,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	ActiveRestaurants int32          `protobuf:"varint,4,opt,name=active_restaurants,json=activeRestaurants,proto3" json:"active_restaurants,omitempty"`
	ActiveDrivers     int32          `protobuf:"varint,5,opt,name=active_drivers,json=activeDrivers,proto3" json:"active_drivers,omitempty"`
	PlatformRevenue   float64        `protobuf:"fixed64,6,opt,name=platform_revenue,json=platformRevenue,proto3" json:"platform_revenue,omitempty"`
	RegionStats       []*RegionStats `protobuf:"bytes,7,rep,name=region_stats,json=regionStats,proto3" json:"region_stats,omitempty"`
}

func (x *SystemStatsResponse) Reset() {
	*x = SystemStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatsResponse) ProtoMessage() {}

func (x *SystemStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatsResponse.ProtoReflect.Descriptor instead.
func (*SystemStatsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{82}
}

func (x *SystemStatsResponse) GetTotalOrders() int32 {
	if x != nil {
		return x.TotalOrders
	}
	return 0
}

func (x *SystemStatsResponse) GetTotalSales() float64 {
	if x != nil {
		return x.TotalSales
	}
	return 0
}

func (x *SystemStatsResponse) GetActiveUsers() int32 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

func (x *SystemStatsResponse) GetActiveRestaurants() int32 {
	if x != nil {
		return x.ActiveRestaurants
	}
	return 0
}

func (x *SystemStatsResponse) GetActiveDrivers() int32 {
	if x != nil {
		return x.ActiveDrivers
	}
	return 0
}

func (x *SystemStatsResponse) GetPlatformRevenue() float64 {
	if x != nil {
		return x.PlatformRevenue
	}
	return 0
}

func (x *SystemStatsResponse) GetRegionStats() []*RegionStats {
	if x != nil {
		return x.RegionStats
	}
	return nil
}

type RegionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName       string  `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	OrdersCount      int32   `protobuf:"varint,2,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	SalesAmount      float64 `protobuf:"fixed64,3,opt,name=sales_amount,json=salesAmount,proto3" json:"sales_amount,omitempty"`
	RestaurantsCount int32   `protobuf:"varint,4,opt,name=restaurants_count,json=restaurantsCount,proto3" json:"restaurants_count,omitempty"`
	DriversCount     int32   `protobuf:"varint,5,opt,name=drivers_count,json=driversCount,proto3" json:"drivers_count,omitempty"`
}

func (x *RegionStats) Reset() {
	*x = RegionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionStats) ProtoMessage() {}

func (x *RegionStats) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionStats.ProtoReflect.Descriptor instead.
func (*RegionStats) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{83}
}

func (x *RegionStats) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *RegionStats) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *RegionStats) GetSalesAmount() float64 {
	if x != nil {
		return x.SalesAmount
	}
	return 0
}

func (x *RegionStats) GetRestaurantsCount() int32 {
	if x != nil {
		return x.RestaurantsCount
	}
	return 0
}

func (x *RegionStats) GetDriversCount() int32 {
	if x != nil {
		return x.DriversCount
	}
	return 0
}

type DriverLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center   *Location `protobuf:"bytes,1,opt,name=center,proto3" json:"center,omitempty"`
	RadiusKm float64   `protobuf:"fixed64,2,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`
}

func (x *DriverLocationRequest) Reset() {
	*x = DriverLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocationRequest) ProtoMessage() {}

func (x *DriverLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocationRequest.ProtoReflect.Descriptor instead.
func (*DriverLocationRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{84}
}

func (x *DriverLocationRequest) GetCenter() *Location {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *DriverLocationRequest) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

type ActiveDriversResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drivers    []*ActiveDriver `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"`
	TotalCount int32           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ActiveDriversResponse) Reset() {
	*x = ActiveDriversResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDriversResponse) ProtoMessage() {}

func (x *ActiveDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDriversResponse.ProtoReflect.Descriptor instead.
func (*ActiveDriversResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{85}
}

func (x *ActiveDriversResponse) GetDrivers() []*ActiveDriver {
	if x != nil {
		return x.Drivers
	}
	return nil
}

func (x *ActiveDriversResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ActiveDriver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId       string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location       *Location              `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	IsOnDelivery   bool                   `protobuf:"varint,4,opt,name=is_on_delivery,json=isOnDelivery,proto3" json:"is_on_delivery,omitempty"`
	CurrentOrderId string                 `protobuf:"bytes,5,opt,name=current_order_id,json=currentOrderId,proto3" json:"current_order_id,omitempty"`
	LastUpdated    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *ActiveDriver) Reset() {
	*x = ActiveDriver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveDriver) ProtoMessage() {}

func (x *ActiveDriver) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveDriver.ProtoReflect.Descriptor instead.
func (*ActiveDriver) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{86}
}

func (x *ActiveDriver) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *ActiveDriver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActiveDriver) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ActiveDriver) GetIsOnDelivery() bool {
	if x != nil {
		return x.IsOnDelivery
	}
	return false
}

func (x *ActiveDriver) GetCurrentOrderId() string {
	if x != nil {
		return x.CurrentOrderId
	}
	return ""
}

func (x *ActiveDriver) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type CreatePromotionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              string                              `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Description       string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DiscountType      CreatePromotionRequest_DiscountType `protobuf:"varint,3,opt,name=discount_type,json=discountType,proto3,enum=fooddelivery.CreatePromotionRequest_DiscountType" json:"discount_type,omitempty"`
	DiscountValue     float64                             `protobuf:"fixed64,4,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	MinimumOrderValue float64                             `protobuf:"fixed64,5,opt,name=minimum_order_value,json=minimumOrderValue,proto3" json:"minimum_order_value,omitempty"`
	MaxDiscountAmount float64                             `protobuf:"fixed64,6,opt,name=max_discount_amount,json=maxDiscountAmount,proto3" json:"max_discount_amount,omitempty"`
	StartDate         *timestamppb.Timestamp              `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate           *timestamppb.Timestamp              `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UsageLimit        int32                               `protobuf:"varint,9,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	RestaurantId      string                              `protobuf:"bytes,10,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"` // Optional, for restaurant-specific promotions
}

func (x *CreatePromotionRequest) Reset() {
	*x = CreatePromotionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePromotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePromotionRequest) ProtoMessage() {}

func (x *CreatePromotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePromotionRequest.ProtoReflect.Descriptor instead.
func (*CreatePromotionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{87}
}

func (x *CreatePromotionRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreatePromotionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePromotionRequest) GetDiscountType() CreatePromotionRequest_DiscountType {
	if x != nil {
		return x.DiscountType
	}
	return CreatePromotionRequest_PERCENTAGE
}

func (x *CreatePromotionRequest) GetDiscountValue() float64 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *CreatePromotionRequest) GetMinimumOrderValue() float64 {
	if x != nil {
		return x.MinimumOrderValue
	}
	return 0
}

func (x *CreatePromotionRequest) GetMaxDiscountAmount() float64 {
	if x != nil {
		return x.MaxDiscountAmount
	}
	return 0
}

func (x *CreatePromotionRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreatePromotionRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreatePromotionRequest) GetUsageLimit() int32 {
	if x != nil {
		return x.UsageLimit
	}
	return 0
}

func (x *CreatePromotionRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type UpdatePromotionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId       string                 `protobuf:"bytes,1,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	Description       string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	MinimumOrderValue float64                `protobuf:"fixed64,3,opt,name=minimum_order_value,json=minimumOrderValue,proto3" json:"minimum_order_value,omitempty"`
	MaxDiscountAmount float64                `protobuf:"fixed64,4,opt,name=max_discount_amount,json=maxDiscountAmount,proto3" json:"max_discount_amount,omitempty"`
	EndDate           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UsageLimit        int32                  `protobuf:"varint,6,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	IsActive          bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdatePromotionRequest) Reset() {
	*x = UpdatePromotionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePromotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePromotionRequest) ProtoMessage() {}

func (x *UpdatePromotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePromotionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePromotionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{88}
}

func (x *UpdatePromotionRequest) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *UpdatePromotionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePromotionRequest) GetMinimumOrderValue() float64 {
	if x != nil {
		return x.MinimumOrderValue
	}
	return 0
}

func (x *UpdatePromotionRequest) GetMaxDiscountAmount() float64 {
	if x != nil {
		return x.MaxDiscountAmount
	}
	return 0
}

func (x *UpdatePromotionRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdatePromotionRequest) GetUsageLimit() int32 {
	if x != nil {
		return x.UsageLimit
	}
	return 0
}

func (x *UpdatePromotionRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type ManageUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action ManageUserRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=fooddelivery.ManageUserRequest_Action" json:"action,omitempty"`
	Reason string                   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ManageUserRequest) Reset() {
	*x = ManageUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageUserRequest) ProtoMessage() {}

func (x *ManageUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageUserRequest.ProtoReflect.Descriptor instead.
func (*ManageUserRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{89}
}

func (x *ManageUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManageUserRequest) GetAction() ManageUserRequest_Action {
	if x != nil {
		return x.Action
	}
	return ManageUserRequest_ACTIVATE
}

func (x *ManageUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SupportTicketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   SupportTicketsRequest_TicketStatus `protobuf:"varint,1,opt,name=status,proto3,enum=fooddelivery.SupportTicketsRequest_TicketStatus" json:"status,omitempty"`
	Priority SupportTicketsRequest_Priority     `protobuf:"varint,2,opt,name=priority,proto3,enum=fooddelivery.SupportTicketsRequest_Priority" json:"priority,omitempty"`
	Page     int32                              `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32                              `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SupportTicketsRequest) Reset() {
	*x = SupportTicketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTicketsRequest) ProtoMessage() {}

func (x *SupportTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTicketsRequest.ProtoReflect.Descriptor instead.
func (*SupportTicketsRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{90}
}

func (x *SupportTicketsRequest) GetStatus() SupportTicketsRequest_TicketStatus {
	if x != nil {
		return x.Status
	}
	return SupportTicketsRequest_OPEN
}

func (x *SupportTicketsRequest) GetPriority() SupportTicketsRequest_Priority {
	if x != nil {
		return x.Priority
	}
	return SupportTicketsRequest_LOW
}

func (x *SupportTicketsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SupportTicketsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SupportTicketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets    []*TicketResponse `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	TotalCount int32             `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page       int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SupportTicketsResponse) Reset() {
	*x = SupportTicketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportTicketsResponse) ProtoMessage() {}

func (x *SupportTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportTicketsResponse.ProtoReflect.Descriptor instead.
func (*SupportTicketsResponse) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{91}
}

func (x *SupportTicketsResponse) GetTickets() []*TicketResponse {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *SupportTicketsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SupportTicketsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SupportTicketsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AssignTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string                           `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	AgentId  string                           `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Status   AssignTicketRequest_TicketStatus `protobuf:"varint,3,opt,name=status,proto3,enum=fooddelivery.AssignTicketRequest_TicketStatus" json:"status,omitempty"`
	Priority AssignTicketRequest_Priority     `protobuf:"varint,4,opt,name=priority,proto3,enum=fooddelivery.AssignTicketRequest_Priority" json:"priority,omitempty"`
}

func (x *AssignTicketRequest) Reset() {
	*x = AssignTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketRequest) ProtoMessage() {}

func (x *AssignTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketRequest.ProtoReflect.Descriptor instead.
func (*AssignTicketRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{92}
}

func (x *AssignTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AssignTicketRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AssignTicketRequest) GetStatus() AssignTicketRequest_TicketStatus {
	if x != nil {
		return x.Status
	}
	return AssignTicketRequest_OPEN
}

func (x *AssignTicketRequest) GetPriority() AssignTicketRequest_Priority {
	if x != nil {
		return x.Priority
	}
	return AssignTicketRequest_LOW
}

type OrderSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OrderSubscriptionRequest) Reset() {
	*x = OrderSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSubscriptionRequest) ProtoMessage() {}

func (x *OrderSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*OrderSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{93}
}

func (x *OrderSubscriptionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OrderStatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId                   string                        `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status                    OrderStatusUpdate_OrderStatus `protobuf:"varint,2,opt,name=status,proto3,enum=fooddelivery.OrderStatusUpdate_OrderStatus" json:"status,omitempty"`
	StatusMessage             string                        `protobuf:"bytes,3,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	Timestamp                 *timestamppb.Timestamp        `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Location                  *Location                     `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"` // Optional driver location
	EstimatedMinutesRemaining int32                         `protobuf:"varint,6,opt,name=estimated_minutes_remaining,json=estimatedMinutesRemaining,proto3" json:"estimated_minutes_remaining,omitempty"`
}

func (x *OrderStatusUpdate) Reset() {
	*x = OrderStatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStatusUpdate) ProtoMessage() {}

func (x *OrderStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStatusUpdate.ProtoReflect.Descriptor instead.
func (*OrderStatusUpdate) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{94}
}

func (x *OrderStatusUpdate) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderStatusUpdate) GetStatus() OrderStatusUpdate_OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatusUpdate_CREATED
}

func (x *OrderStatusUpdate) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *OrderStatusUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *OrderStatusUpdate) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *OrderStatusUpdate) GetEstimatedMinutesRemaining() int32 {
	if x != nil {
		return x.EstimatedMinutesRemaining
	}
	return 0
}

type DriverLocationSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DriverLocationSubscriptionRequest) Reset() {
	*x = DriverLocationSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLocationSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocationSubscriptionRequest) ProtoMessage() {}

func (x *DriverLocationSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocationSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*DriverLocationSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{95}
}

func (x *DriverLocationSubscriptionRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DriverLocationSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DriverLocationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId                  string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	OrderId                   string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Location                  *Location              `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Timestamp                 *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EstimatedMinutesRemaining int32                  `protobuf:"varint,5,opt,name=estimated_minutes_remaining,json=estimatedMinutesRemaining,proto3" json:"estimated_minutes_remaining,omitempty"`
}

func (x *DriverLocationUpdate) Reset() {
	*x = DriverLocationUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLocationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLocationUpdate) ProtoMessage() {}

func (x *DriverLocationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLocationUpdate.ProtoReflect.Descriptor instead.
func (*DriverLocationUpdate) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{96}
}

func (x *DriverLocationUpdate) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverLocationUpdate) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *DriverLocationUpdate) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DriverLocationUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DriverLocationUpdate) GetEstimatedMinutesRemaining() int32 {
	if x != nil {
		return x.EstimatedMinutesRemaining
	}
	return 0
}

type NotificationSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string                                             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Types  []NotificationSubscriptionRequest_NotificationType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=fooddelivery.NotificationSubscriptionRequest_NotificationType" json:"types,omitempty"`
}

func (x *NotificationSubscriptionRequest) Reset() {
	*x = NotificationSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSubscriptionRequest) ProtoMessage() {}

func (x *NotificationSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*NotificationSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{97}
}

func (x *NotificationSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationSubscriptionRequest) GetTypes() []NotificationSubscriptionRequest_NotificationType {
	if x != nil {
		return x.Types
	}
	return nil
}

type NotificationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId string                             `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title          string                             `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message        string                             `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Type           NotificationEvent_NotificationType `protobuf:"varint,5,opt,name=type,proto3,enum=fooddelivery.NotificationEvent_NotificationType" json:"type,omitempty"`
	ReferenceId    string                             `protobuf:"bytes,6,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp             `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *NotificationEvent) Reset() {
	*x = NotificationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEvent) ProtoMessage() {}

func (x *NotificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEvent.ProtoReflect.Descriptor instead.
func (*NotificationEvent) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{98}
}

func (x *NotificationEvent) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotificationEvent) GetType() NotificationEvent_NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationEvent_ORDER_UPDATE
}

func (x *NotificationEvent) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *NotificationEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RestaurantSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RestaurantSubscriptionRequest) Reset() {
	*x = RestaurantSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantSubscriptionRequest) ProtoMessage() {}

func (x *RestaurantSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*RestaurantSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{99}
}

func (x *RestaurantSubscriptionRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NewOrderEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId              string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RestaurantId         string                 `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	CustomerName         string                 `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	ItemsCount           int32                  `protobuf:"varint,4,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
	TotalAmount          float64                `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	PlacedAt             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=placed_at,json=placedAt,proto3" json:"placed_at,omitempty"`
	RequiresConfirmation bool                   `protobuf:"varint,7,opt,name=requires_confirmation,json=requiresConfirmation,proto3" json:"requires_confirmation,omitempty"`
}

func (x *NewOrderEvent) Reset() {
	*x = NewOrderEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doordash_service_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderEvent) ProtoMessage() {}

func (x *NewOrderEvent) ProtoReflect() protoreflect.Message {
	mi := &file_doordash_service_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderEvent.ProtoReflect.Descriptor instead.
func (*NewOrderEvent) Descriptor() ([]byte, []int) {
	return file_doordash_service_service_proto_rawDescGZIP(), []int{100}
}

func (x *NewOrderEvent) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NewOrderEvent) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *NewOrderEvent) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *NewOrderEvent) GetItemsCount() int32 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

func (x *NewOrderEvent) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *NewOrderEvent) GetPlacedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PlacedAt
	}
	return nil
}

func (x *NewOrderEvent) GetRequiresConfirmation() bool {
	if x != nil {
		return x.RequiresConfirmation
	}
	return false
}

var File_doordash_service_service_proto protoreflect.FileDescriptor

var file_doordash_service_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x64, 0x6f, 0x6f, 0x72, 0x64, 0x61, 0x73, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x29,
	0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xda, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5e, 0x0a, 0x18, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x16, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x54, 0x41, 0x55, 0x52, 0x41, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x10, 0x03, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6d,
	0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x59, 0x65, 0x61, 0x72, 0x22, 0x51,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0x40, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x52, 0x45, 0x53, 0x54, 0x41, 0x55, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x46,
	0x46, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x22, 0xa5,
	0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x45, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x52, 0x49,
	0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x54, 0x41, 0x55, 0x52,
	0x41, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x22, 0xd6, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0xff, 0x02, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x6e, 0x65, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x15,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x5a, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0xc9, 0x01,
	0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x13, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x75,
	0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x14, 0x64, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69,
	0x65, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x6c, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x69, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x70,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x11, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x46,
	0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xc0, 0x03, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x6b, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4b, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x4e, 0x6f, 0x77, 0x12, 0x4a,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x0a, 0x53,
	0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x4c,
	0x45, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x54, 0x4f, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x4f, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x44, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x57, 0x5f,
	0x54, 0x4f, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x22, 0x44, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22,
	0xaa, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xec, 0x02, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x36,
	0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x22, 0xf7, 0x04, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x45, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12,
	0x3c, 0x0a, 0x1a, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x4d,
	0x65, 0x6e, 0x75, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb5, 0x03, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x56, 0x65, 0x67, 0x65, 0x74, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x67, 0x61, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x65, 0x67, 0x61, 0x6e, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x67, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x6c, 0x75, 0x74, 0x65,
	0x6e, 0x46, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x22, 0xf2, 0x01,
	0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x71, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xca, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x70, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x70, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x41, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4c,
	0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x14,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x65, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0xec, 0x06, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67,
	0x12, 0x31, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x22, 0x7b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b,
	0x45, 0x44, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x99, 0x02, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31,
	0x0a, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x74, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x74, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x0a,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x10, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x04,
	0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x10,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x7b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52,
	0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0xcc, 0x02, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6e, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x7b,
	0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45,
	0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x88, 0x02, 0x0a, 0x13,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x34, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x54, 0x41, 0x55,
	0x52, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8a, 0x03, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x49, 0x43,
	0x4b, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x5f,
	0x55, 0x50, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44,
	0x10, 0x06, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x22, 0x4f, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x95, 0x03, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b,
	0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x46, 0x0a, 0x11, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xa2, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x52, 0x0a, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02, 0x22, 0x85, 0x03, 0x0a, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x3d, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x0d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x50, 0x54, 0x55, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x46, 0x55,
	0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x22, 0x79, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x9b, 0x01,
	0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfe, 0x03, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x0c, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x45,
	0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49,
	0x58, 0x45, 0x44, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x22, 0x51, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xf5, 0x03, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d,
	0x61, 0x78, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54,
	0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x22, 0x84, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x35, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x52, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x22, 0xb0,
	0x05, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x03, 0x22, 0x35, 0x0a, 0x08, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x49, 0x47, 0x48, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x52, 0x47, 0x45, 0x4e, 0x54, 0x10,
	0x03, 0x22, 0x98, 0x02, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x96, 0x01, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x73, 0x22, 0xb9, 0x02, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c,
	0x73, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9b, 0x03, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x04, 0x22, 0x8b, 0x04, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18,
	0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xb2, 0x04, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x69, 0x73, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x75, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xd0, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x76, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x56, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x67, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x56, 0x65, 0x67, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x67, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x56, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x86, 0x04, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x67, 0x65,
	0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x56, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x76, 0x65, 0x67, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x65, 0x67, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x67, 0x6c, 0x75, 0x74,
	0x65, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x47, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x70, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x70, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x56, 0x0a, 0x15,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x81, 0x04, 0x0a, 0x10, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x76, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x56, 0x65, 0x67, 0x65, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x67, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x65, 0x67, 0x61, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x67, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x6c, 0x75, 0x74, 0x65, 0x6e, 0x46, 0x72, 0x65, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x49, 0x43, 0x4b,
	0x55, 0x50, 0x10, 0x02, 0x22, 0xca, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x41, 0x4c, 0x45, 0x53,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10,
	0x04, 0x22, 0xb1, 0x02, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x52, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x44, 0x0a, 0x10, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x66, 0x0a, 0x0a, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a,
	0x0b, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x54, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x4f, 0x66, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x4f, 0x66, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x6f, 0x70,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x15, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x6b,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4b,
	0x6d, 0x22, 0x6e, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x97, 0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x30,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01,
	0x22, 0xb2, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d,
	0x61, 0x78, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x59, 0x10, 0x03, 0x22, 0xea, 0x02, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10,
	0x04, 0x22, 0x3e, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x52, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10,
	0x04, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd9, 0x02, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x43, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x03, 0x22, 0x35, 0x0a, 0x08, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x49, 0x47, 0x48, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x52, 0x47, 0x45, 0x4e, 0x54,
	0x10, 0x03, 0x22, 0x4e, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xc5, 0x03, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x1b, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x19, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x7b, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50,
	0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x57, 0x0a, 0x21, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3e, 0x0a, 0x1b, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0xf4, 0x01, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x54, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3e,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x05, 0x22, 0x84, 0x03, 0x0a, 0x11, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04,
	0x22, 0x5d, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xa6, 0x02, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xe4, 0x1e, 0x0a, 0x13, 0x46, 0x6f, 0x6f,
	0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1f, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x20, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x21, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x72,
	0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x30, 0x01, 0x12, 0x6c, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01,
	0x12, 0x62, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4e,
	0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x54, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x0a, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6f,
	0x6f, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doordash_service_service_proto_rawDescOnce sync.Once
	file_doordash_service_service_proto_rawDescData = file_doordash_service_service_proto_rawDesc
)

func file_doordash_service_service_proto_rawDescGZIP() []byte {
	file_doordash_service_service_proto_rawDescOnce.Do(func() {
		file_doordash_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_doordash_service_service_proto_rawDescData)
	})
	return file_doordash_service_service_proto_rawDescData
}

var file_doordash_service_service_proto_enumTypes = make([]protoimpl.EnumInfo, 28)
var file_doordash_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 101)
var file_doordash_service_service_proto_goTypes = []any{
	(RegisterUserRequest_UserType)(0),                     // 0: fooddelivery.RegisterUserRequest.UserType
	(AuthResponse_UserType)(0),                            // 1: fooddelivery.AuthResponse.UserType
	(UserResponse_UserType)(0),                            // 2: fooddelivery.UserResponse.UserType
	(SearchRestaurantsRequest_SortOption)(0),              // 3: fooddelivery.SearchRestaurantsRequest.SortOption
	(OrderResponse_OrderStatus)(0),                        // 4: fooddelivery.OrderResponse.OrderStatus
	(OrderStatusResponse_OrderStatus)(0),                  // 5: fooddelivery.OrderStatusResponse.OrderStatus
	(UpdateOrderStatusRequest_OrderStatus)(0),             // 6: fooddelivery.UpdateOrderStatusRequest.OrderStatus
	(OrderHistoryRequest_UserType)(0),                     // 7: fooddelivery.OrderHistoryRequest.UserType
	(OrderSummary_OrderStatus)(0),                         // 8: fooddelivery.OrderSummary.OrderStatus
	(ProcessPaymentRequest_PaymentType)(0),                // 9: fooddelivery.ProcessPaymentRequest.PaymentType
	(PaymentResponse_PaymentStatus)(0),                    // 10: fooddelivery.PaymentResponse.PaymentStatus
	(PromotionResponse_DiscountType)(0),                   // 11: fooddelivery.PromotionResponse.DiscountType
	(PromotionInfo_DiscountType)(0),                       // 12: fooddelivery.PromotionInfo.DiscountType
	(CreateTicketRequest_Priority)(0),                     // 13: fooddelivery.CreateTicketRequest.Priority
	(TicketResponse_TicketStatus)(0),                      // 14: fooddelivery.TicketResponse.TicketStatus
	(TicketResponse_Priority)(0),                          // 15: fooddelivery.TicketResponse.Priority
	(NotificationInfo_NotificationType)(0),                // 16: fooddelivery.NotificationInfo.NotificationType
	(UpdatePreparationStatusRequest_PreparationStatus)(0), // 17: fooddelivery.UpdatePreparationStatusRequest.PreparationStatus
	(RestaurantAnalyticsRequest_AnalyticsType)(0),         // 18: fooddelivery.RestaurantAnalyticsRequest.AnalyticsType
	(CreatePromotionRequest_DiscountType)(0),              // 19: fooddelivery.CreatePromotionRequest.DiscountType
	(ManageUserRequest_Action)(0),                         // 20: fooddelivery.ManageUserRequest.Action
	(SupportTicketsRequest_TicketStatus)(0),               // 21: fooddelivery.SupportTicketsRequest.TicketStatus
	(SupportTicketsRequest_Priority)(0),                   // 22: fooddelivery.SupportTicketsRequest.Priority
	(AssignTicketRequest_TicketStatus)(0),                 // 23: fooddelivery.AssignTicketRequest.TicketStatus
	(AssignTicketRequest_Priority)(0),                     // 24: fooddelivery.AssignTicketRequest.Priority
	(OrderStatusUpdate_OrderStatus)(0),                    // 25: fooddelivery.OrderStatusUpdate.OrderStatus
	(NotificationSubscriptionRequest_NotificationType)(0), // 26: fooddelivery.NotificationSubscriptionRequest.NotificationType
	(NotificationEvent_NotificationType)(0),               // 27: fooddelivery.NotificationEvent.NotificationType
	(*UserRequest)(nil),                                   // 28: fooddelivery.UserRequest
	(*RestaurantRequest)(nil),                             // 29: fooddelivery.RestaurantRequest
	(*OrderRequest)(nil),                                  // 30: fooddelivery.OrderRequest
	(*DriverRequest)(nil),                                 // 31: fooddelivery.DriverRequest
	(*TicketRequest)(nil),                                 // 32: fooddelivery.TicketRequest
	(*NotificationRequest)(nil),                           // 33: fooddelivery.NotificationRequest
	(*RegisterUserRequest)(nil),                           // 34: fooddelivery.RegisterUserRequest
	(*DriverDetails)(nil),                                 // 35: fooddelivery.DriverDetails
	(*RestaurantStaffDetails)(nil),                        // 36: fooddelivery.RestaurantStaffDetails
	(*LoginRequest)(nil),                                  // 37: fooddelivery.LoginRequest
	(*AuthResponse)(nil),                                  // 38: fooddelivery.AuthResponse
	(*UserResponse)(nil),                                  // 39: fooddelivery.UserResponse
	(*UserProfileResponse)(nil),                           // 40: fooddelivery.UserProfileResponse
	(*AddressInfo)(nil),                                   // 41: fooddelivery.AddressInfo
	(*PaymentMethodsInfo)(nil),                            // 42: fooddelivery.PaymentMethodsInfo
	(*PaymentMethod)(nil),                                 // 43: fooddelivery.PaymentMethod
	(*CustomerPreferences)(nil),                           // 44: fooddelivery.CustomerPreferences
	(*DriverProfileInfo)(nil),                             // 45: fooddelivery.DriverProfileInfo
	(*UpdateUserProfileRequest)(nil),                      // 46: fooddelivery.UpdateUserProfileRequest
	(*SearchRestaurantsRequest)(nil),                      // 47: fooddelivery.SearchRestaurantsRequest
	(*Location)(nil),                                      // 48: fooddelivery.Location
	(*RestaurantsResponse)(nil),                           // 49: fooddelivery.RestaurantsResponse
	(*RestaurantSummary)(nil),                             // 50: fooddelivery.RestaurantSummary
	(*RestaurantResponse)(nil),                            // 51: fooddelivery.RestaurantResponse
	(*OperatingHours)(nil),                                // 52: fooddelivery.OperatingHours
	(*MenuResponse)(nil),                                  // 53: fooddelivery.MenuResponse
	(*MenuCategory)(nil),                                  // 54: fooddelivery.MenuCategory
	(*MenuItem)(nil),                                      // 55: fooddelivery.MenuItem
	(*CustomizationOption)(nil),                           // 56: fooddelivery.CustomizationOption
	(*CustomizationChoice)(nil),                           // 57: fooddelivery.CustomizationChoice
	(*CreateOrderRequest)(nil),                            // 58: fooddelivery.CreateOrderRequest
	(*OrderItem)(nil),                                     // 59: fooddelivery.OrderItem
	(*CustomizationSelection)(nil),                        // 60: fooddelivery.CustomizationSelection
	(*OrderResponse)(nil),                                 // 61: fooddelivery.OrderResponse
	(*OrderItemDetails)(nil),                              // 62: fooddelivery.OrderItemDetails
	(*CustomizationDetail)(nil),                           // 63: fooddelivery.CustomizationDetail
	(*OrderPricing)(nil),                                  // 64: fooddelivery.OrderPricing
	(*DriverInfo)(nil),                                    // 65: fooddelivery.DriverInfo
	(*OrderStatusResponse)(nil),                           // 66: fooddelivery.OrderStatusResponse
	(*UpdateOrderStatusRequest)(nil),                      // 67: fooddelivery.UpdateOrderStatusRequest
	(*OrderHistoryRequest)(nil),                           // 68: fooddelivery.OrderHistoryRequest
	(*OrderHistoryResponse)(nil),                          // 69: fooddelivery.OrderHistoryResponse
	(*OrderSummary)(nil),                                  // 70: fooddelivery.OrderSummary
	(*UpdateDriverLocationRequest)(nil),                   // 71: fooddelivery.UpdateDriverLocationRequest
	(*AvailableOrdersResponse)(nil),                       // 72: fooddelivery.AvailableOrdersResponse
	(*AvailableOrder)(nil),                                // 73: fooddelivery.AvailableOrder
	(*AcceptOrderRequest)(nil),                            // 74: fooddelivery.AcceptOrderRequest
	(*CompleteDeliveryRequest)(nil),                       // 75: fooddelivery.CompleteDeliveryRequest
	(*ProcessPaymentRequest)(nil),                         // 76: fooddelivery.ProcessPaymentRequest
	(*PaymentResponse)(nil),                               // 77: fooddelivery.PaymentResponse
	(*RefundRequest)(nil),                                 // 78: fooddelivery.RefundRequest
	(*ApplyPromotionRequest)(nil),                         // 79: fooddelivery.ApplyPromotionRequest
	(*PromotionResponse)(nil),                             // 80: fooddelivery.PromotionResponse
	(*PromotionsResponse)(nil),                            // 81: fooddelivery.PromotionsResponse
	(*PromotionInfo)(nil),                                 // 82: fooddelivery.PromotionInfo
	(*CreateTicketRequest)(nil),                           // 83: fooddelivery.CreateTicketRequest
	(*TicketResponse)(nil),                                // 84: fooddelivery.TicketResponse
	(*TicketMessageInfo)(nil),                             // 85: fooddelivery.TicketMessageInfo
	(*AddTicketMessageRequest)(nil),                       // 86: fooddelivery.AddTicketMessageRequest
	(*TicketMessageResponse)(nil),                         // 87: fooddelivery.TicketMessageResponse
	(*NotificationsResponse)(nil),                         // 88: fooddelivery.NotificationsResponse
	(*NotificationInfo)(nil),                              // 89: fooddelivery.NotificationInfo
	(*CreateRestaurantRequest)(nil),                       // 90: fooddelivery.CreateRestaurantRequest
	(*UpdateRestaurantRequest)(nil),                       // 91: fooddelivery.UpdateRestaurantRequest
	(*CreateMenuItemRequest)(nil),                         // 92: fooddelivery.CreateMenuItemRequest
	(*UpdateMenuItemRequest)(nil),                         // 93: fooddelivery.UpdateMenuItemRequest
	(*MenuItemRequest)(nil),                               // 94: fooddelivery.MenuItemRequest
	(*MenuItemResponse)(nil),                              // 95: fooddelivery.MenuItemResponse
	(*RestaurantOrdersResponse)(nil),                      // 96: fooddelivery.RestaurantOrdersResponse
	(*UpdatePreparationStatusRequest)(nil),                // 97: fooddelivery.UpdatePreparationStatusRequest
	(*RestaurantAnalyticsRequest)(nil),                    // 98: fooddelivery.RestaurantAnalyticsRequest
	(*RestaurantAnalyticsResponse)(nil),                   // 99: fooddelivery.RestaurantAnalyticsResponse
	(*SalesData)(nil),                                     // 100: fooddelivery.SalesData
	(*DailySales)(nil),                                    // 101: fooddelivery.DailySales
	(*HourlySales)(nil),                                   // 102: fooddelivery.HourlySales
	(*OrdersData)(nil),                                    // 103: fooddelivery.OrdersData
	(*ItemsData)(nil),                                     // 104: fooddelivery.ItemsData
	(*TopMenuItem)(nil),                                   // 105: fooddelivery.TopMenuItem
	(*CategoryPerformance)(nil),                           // 106: fooddelivery.CategoryPerformance
	(*CustomersData)(nil),                                 // 107: fooddelivery.CustomersData
	(*TopCustomer)(nil),                                   // 108: fooddelivery.TopCustomer
	(*SystemStatsRequest)(nil),                            // 109: fooddelivery.SystemStatsRequest
	(*SystemStatsResponse)(nil),                           // 110: fooddelivery.SystemStatsResponse
	(*RegionStats)(nil),                                   // 111: fooddelivery.RegionStats
	(*DriverLocationRequest)(nil),                         // 112: fooddelivery.DriverLocationRequest
	(*ActiveDriversResponse)(nil),                         // 113: fooddelivery.ActiveDriversResponse
	(*ActiveDriver)(nil),                                  // 114: fooddelivery.ActiveDriver
	(*CreatePromotionRequest)(nil),                        // 115: fooddelivery.CreatePromotionRequest
	(*UpdatePromotionRequest)(nil),                        // 116: fooddelivery.UpdatePromotionRequest
	(*ManageUserRequest)(nil),                             // 117: fooddelivery.ManageUserRequest
	(*SupportTicketsRequest)(nil),                         // 118: fooddelivery.SupportTicketsRequest
	(*SupportTicketsResponse)(nil),                        // 119: fooddelivery.SupportTicketsResponse
	(*AssignTicketRequest)(nil),                           // 120: fooddelivery.AssignTicketRequest
	(*OrderSubscriptionRequest)(nil),                      // 121: fooddelivery.OrderSubscriptionRequest
	(*OrderStatusUpdate)(nil),                             // 122: fooddelivery.OrderStatusUpdate
	(*DriverLocationSubscriptionRequest)(nil),             // 123: fooddelivery.DriverLocationSubscriptionRequest
	(*DriverLocationUpdate)(nil),                          // 124: fooddelivery.DriverLocationUpdate
	(*NotificationSubscriptionRequest)(nil),               // 125: fooddelivery.NotificationSubscriptionRequest
	(*NotificationEvent)(nil),                             // 126: fooddelivery.NotificationEvent
	(*RestaurantSubscriptionRequest)(nil),                 // 127: fooddelivery.RestaurantSubscriptionRequest
	(*NewOrderEvent)(nil),                                 // 128: fooddelivery.NewOrderEvent
	(*timestamppb.Timestamp)(nil),                         // 129: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                 // 130: google.protobuf.Empty
}
var file_doordash_service_service_proto_depIdxs = []int32{
	0,   // 0: fooddelivery.RegisterUserRequest.user_type:type_name -> fooddelivery.RegisterUserRequest.UserType
	35,  // 1: fooddelivery.RegisterUserRequest.driver_details:type_name -> fooddelivery.DriverDetails
	36,  // 2: fooddelivery.RegisterUserRequest.restaurant_staff_details:type_name -> fooddelivery.RestaurantStaffDetails
	1,   // 3: fooddelivery.AuthResponse.user_type:type_name -> fooddelivery.AuthResponse.UserType
	2,   // 4: fooddelivery.UserResponse.user_type:type_name -> fooddelivery.UserResponse.UserType
	39,  // 5: fooddelivery.UserProfileResponse.user:type_name -> fooddelivery.UserResponse
	41,  // 6: fooddelivery.UserProfileResponse.addresses:type_name -> fooddelivery.AddressInfo
	42,  // 7: fooddelivery.UserProfileResponse.payment_methods:type_name -> fooddelivery.PaymentMethodsInfo
	44,  // 8: fooddelivery.UserProfileResponse.preferences:type_name -> fooddelivery.CustomerPreferences
	45,  // 9: fooddelivery.UserProfileResponse.driver_profile:type_name -> fooddelivery.DriverProfileInfo
	43,  // 10: fooddelivery.PaymentMethodsInfo.payment_methods:type_name -> fooddelivery.PaymentMethod
	48,  // 11: fooddelivery.DriverProfileInfo.current_location:type_name -> fooddelivery.Location
	41,  // 12: fooddelivery.UpdateUserProfileRequest.addresses:type_name -> fooddelivery.AddressInfo
	44,  // 13: fooddelivery.UpdateUserProfileRequest.preferences:type_name -> fooddelivery.CustomerPreferences
	45,  // 14: fooddelivery.UpdateUserProfileRequest.driver_profile:type_name -> fooddelivery.DriverProfileInfo
	48,  // 15: fooddelivery.SearchRestaurantsRequest.user_location:type_name -> fooddelivery.Location
	3,   // 16: fooddelivery.SearchRestaurantsRequest.sort_by:type_name -> fooddelivery.SearchRestaurantsRequest.SortOption
	50,  // 17: fooddelivery.RestaurantsResponse.restaurants:type_name -> fooddelivery.RestaurantSummary
	41,  // 18: fooddelivery.RestaurantResponse.address:type_name -> fooddelivery.AddressInfo
	52,  // 19: fooddelivery.RestaurantResponse.operating_hours:type_name -> fooddelivery.OperatingHours
	54,  // 20: fooddelivery.MenuResponse.categories:type_name -> fooddelivery.MenuCategory
	55,  // 21: fooddelivery.MenuCategory.items:type_name -> fooddelivery.MenuItem
	56,  // 22: fooddelivery.MenuItem.customization_options:type_name -> fooddelivery.CustomizationOption
	57,  // 23: fooddelivery.CustomizationOption.choices:type_name -> fooddelivery.CustomizationChoice
	59,  // 24: fooddelivery.CreateOrderRequest.items:type_name -> fooddelivery.OrderItem
	129, // 25: fooddelivery.CreateOrderRequest.scheduled_time:type_name -> google.protobuf.Timestamp
	60,  // 26: fooddelivery.OrderItem.customizations:type_name -> fooddelivery.CustomizationSelection
	4,   // 27: fooddelivery.OrderResponse.status:type_name -> fooddelivery.OrderResponse.OrderStatus
	41,  // 28: fooddelivery.OrderResponse.delivery_address:type_name -> fooddelivery.AddressInfo
	129, // 29: fooddelivery.OrderResponse.placed_at:type_name -> google.protobuf.Timestamp
	129, // 30: fooddelivery.OrderResponse.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	129, // 31: fooddelivery.OrderResponse.actual_delivery_time:type_name -> google.protobuf.Timestamp
	62,  // 32: fooddelivery.OrderResponse.items:type_name -> fooddelivery.OrderItemDetails
	64,  // 33: fooddelivery.OrderResponse.pricing:type_name -> fooddelivery.OrderPricing
	65,  // 34: fooddelivery.OrderResponse.driver:type_name -> fooddelivery.DriverInfo
	63,  // 35: fooddelivery.OrderItemDetails.customizations:type_name -> fooddelivery.CustomizationDetail
	48,  // 36: fooddelivery.DriverInfo.current_location:type_name -> fooddelivery.Location
	5,   // 37: fooddelivery.OrderStatusResponse.status:type_name -> fooddelivery.OrderStatusResponse.OrderStatus
	129, // 38: fooddelivery.OrderStatusResponse.estimated_delivery_time:type_name -> google.protobuf.Timestamp
	129, // 39: fooddelivery.OrderStatusResponse.status_updated_at:type_name -> google.protobuf.Timestamp
	65,  // 40: fooddelivery.OrderStatusResponse.driver:type_name -> fooddelivery.DriverInfo
	48,  // 41: fooddelivery.OrderStatusResponse.current_location:type_name -> fooddelivery.Location
	6,   // 42: fooddelivery.UpdateOrderStatusRequest.new_status:type_name -> fooddelivery.UpdateOrderStatusRequest.OrderStatus
	7,   // 43: fooddelivery.OrderHistoryRequest.user_type:type_name -> fooddelivery.OrderHistoryRequest.UserType
	70,  // 44: fooddelivery.OrderHistoryResponse.orders:type_name -> fooddelivery.OrderSummary
	8,   // 45: fooddelivery.OrderSummary.status:type_name -> fooddelivery.OrderSummary.OrderStatus
	129, // 46: fooddelivery.OrderSummary.placed_at:type_name -> google.protobuf.Timestamp
	48,  // 47: fooddelivery.UpdateDriverLocationRequest.location:type_name -> fooddelivery.Location
	73,  // 48: fooddelivery.AvailableOrdersResponse.orders:type_name -> fooddelivery.AvailableOrder
	41,  // 49: fooddelivery.AvailableOrder.pickup_address:type_name -> fooddelivery.AddressInfo
	41,  // 50: fooddelivery.AvailableOrder.delivery_address:type_name -> fooddelivery.AddressInfo
	129, // 51: fooddelivery.AvailableOrder.pickup_ready_time:type_name -> google.protobuf.Timestamp
	48,  // 52: fooddelivery.CompleteDeliveryRequest.delivery_location:type_name -> fooddelivery.Location
	9,   // 53: fooddelivery.ProcessPaymentRequest.payment_type:type_name -> fooddelivery.ProcessPaymentRequest.PaymentType
	10,  // 54: fooddelivery.PaymentResponse.status:type_name -> fooddelivery.PaymentResponse.PaymentStatus
	129, // 55: fooddelivery.PaymentResponse.processed_at:type_name -> google.protobuf.Timestamp
	11,  // 56: fooddelivery.PromotionResponse.discount_type:type_name -> fooddelivery.PromotionResponse.DiscountType
	82,  // 57: fooddelivery.PromotionsResponse.promotions:type_name -> fooddelivery.PromotionInfo
	12,  // 58: fooddelivery.PromotionInfo.discount_type:type_name -> fooddelivery.PromotionInfo.DiscountType
	129, // 59: fooddelivery.PromotionInfo.end_date:type_name -> google.protobuf.Timestamp
	13,  // 60: fooddelivery.CreateTicketRequest.priority:type_name -> fooddelivery.CreateTicketRequest.Priority
	14,  // 61: fooddelivery.TicketResponse.status:type_name -> fooddelivery.TicketResponse.TicketStatus
	15,  // 62: fooddelivery.TicketResponse.priority:type_name -> fooddelivery.TicketResponse.Priority
	129, // 63: fooddelivery.TicketResponse.created_at:type_name -> google.protobuf.Timestamp
	129, // 64: fooddelivery.TicketResponse.updated_at:type_name -> google.protobuf.Timestamp
	129, // 65: fooddelivery.TicketResponse.resolved_at:type_name -> google.protobuf.Timestamp
	85,  // 66: fooddelivery.TicketResponse.messages:type_name -> fooddelivery.TicketMessageInfo
	129, // 67: fooddelivery.TicketMessageInfo.created_at:type_name -> google.protobuf.Timestamp
	129, // 68: fooddelivery.TicketMessageResponse.created_at:type_name -> google.protobuf.Timestamp
	89,  // 69: fooddelivery.NotificationsResponse.notifications:type_name -> fooddelivery.NotificationInfo
	16,  // 70: fooddelivery.NotificationInfo.type:type_name -> fooddelivery.NotificationInfo.NotificationType
	129, // 71: fooddelivery.NotificationInfo.created_at:type_name -> google.protobuf.Timestamp
	41,  // 72: fooddelivery.CreateRestaurantRequest.address:type_name -> fooddelivery.AddressInfo
	52,  // 73: fooddelivery.CreateRestaurantRequest.operating_hours:type_name -> fooddelivery.OperatingHours
	41,  // 74: fooddelivery.UpdateRestaurantRequest.address:type_name -> fooddelivery.AddressInfo
	52,  // 75: fooddelivery.UpdateRestaurantRequest.operating_hours:type_name -> fooddelivery.OperatingHours
	56,  // 76: fooddelivery.CreateMenuItemRequest.customization_options:type_name -> fooddelivery.CustomizationOption
	56,  // 77: fooddelivery.UpdateMenuItemRequest.customization_options:type_name -> fooddelivery.CustomizationOption
	56,  // 78: fooddelivery.MenuItemResponse.customization_options:type_name -> fooddelivery.CustomizationOption
	61,  // 79: fooddelivery.RestaurantOrdersResponse.orders:type_name -> fooddelivery.OrderResponse
	17,  // 80: fooddelivery.UpdatePreparationStatusRequest.status:type_name -> fooddelivery.UpdatePreparationStatusRequest.PreparationStatus
	129, // 81: fooddelivery.RestaurantAnalyticsRequest.start_date:type_name -> google.protobuf.Timestamp
	129, // 82: fooddelivery.RestaurantAnalyticsRequest.end_date:type_name -> google.protobuf.Timestamp
	18,  // 83: fooddelivery.RestaurantAnalyticsRequest.type:type_name -> fooddelivery.RestaurantAnalyticsRequest.AnalyticsType
	100, // 84: fooddelivery.RestaurantAnalyticsResponse.sales_data:type_name -> fooddelivery.SalesData
	103, // 85: fooddelivery.RestaurantAnalyticsResponse.orders_data:type_name -> fooddelivery.OrdersData
	104, // 86: fooddelivery.RestaurantAnalyticsResponse.items_data:type_name -> fooddelivery.ItemsData
	107, // 87: fooddelivery.RestaurantAnalyticsResponse.customers_data:type_name -> fooddelivery.CustomersData
	101, // 88: fooddelivery.SalesData.daily_sales:type_name -> fooddelivery.DailySales
	102, // 89: fooddelivery.SalesData.hourly_breakdown:type_name -> fooddelivery.HourlySales
	105, // 90: fooddelivery.ItemsData.top_items:type_name -> fooddelivery.TopMenuItem
	106, // 91: fooddelivery.ItemsData.category_performance:type_name -> fooddelivery.CategoryPerformance
	108, // 92: fooddelivery.CustomersData.top_customers:type_name -> fooddelivery.TopCustomer
	129, // 93: fooddelivery.SystemStatsRequest.start_date:type_name -> google.protobuf.Timestamp
	129, // 94: fooddelivery.SystemStatsRequest.end_date:type_name -> google.protobuf.Timestamp
	111, // 95: fooddelivery.SystemStatsResponse.region_stats:type_name -> fooddelivery.RegionStats
	48,  // 96: fooddelivery.DriverLocationRequest.center:type_name -> fooddelivery.Location
	114, // 97: fooddelivery.ActiveDriversResponse.drivers:type_name -> fooddelivery.ActiveDriver
	48,  // 98: fooddelivery.ActiveDriver.location:type_name -> fooddelivery.Location
	129, // 99: fooddelivery.ActiveDriver.last_updated:type_name -> google.protobuf.Timestamp
	19,  // 100: fooddelivery.CreatePromotionRequest.discount_type:type_name -> fooddelivery.CreatePromotionRequest.DiscountType
	129, // 101: fooddelivery.CreatePromotionRequest.start_date:type_name -> google.protobuf.Timestamp
	129, // 102: fooddelivery.CreatePromotionRequest.end_date:type_name -> google.protobuf.Timestamp
	129, // 103: fooddelivery.UpdatePromotionRequest.end_date:type_name -> google.protobuf.Timestamp
	20,  // 104: fooddelivery.ManageUserRequest.action:type_name -> fooddelivery.ManageUserRequest.Action
	21,  // 105: fooddelivery.SupportTicketsRequest.status:type_name -> fooddelivery.SupportTicketsRequest.TicketStatus
	22,  // 106: fooddelivery.SupportTicketsRequest.priority:type_name -> fooddelivery.SupportTicketsRequest.Priority
	84,  // 107: fooddelivery.SupportTicketsResponse.tickets:type_name -> fooddelivery.TicketResponse
	23,  // 108: fooddelivery.AssignTicketRequest.status:type_name -> fooddelivery.AssignTicketRequest.TicketStatus
	24,  // 109: fooddelivery.AssignTicketRequest.priority:type_name -> fooddelivery.AssignTicketRequest.Priority
	25,  // 110: fooddelivery.OrderStatusUpdate.status:type_name -> fooddelivery.OrderStatusUpdate.OrderStatus
	129, // 111: fooddelivery.OrderStatusUpdate.timestamp:type_name -> google.protobuf.Timestamp
	48,  // 112: fooddelivery.OrderStatusUpdate.location:type_name -> fooddelivery.Location
	48,  // 113: fooddelivery.DriverLocationUpdate.location:type_name -> fooddelivery.Location
	129, // 114: fooddelivery.DriverLocationUpdate.timestamp:type_name -> google.protobuf.Timestamp
	26,  // 115: fooddelivery.NotificationSubscriptionRequest.types:type_name -> fooddelivery.NotificationSubscriptionRequest.NotificationType
	27,  // 116: fooddelivery.NotificationEvent.type:type_name -> fooddelivery.NotificationEvent.NotificationType
	129, // 117: fooddelivery.NotificationEvent.created_at:type_name -> google.protobuf.Timestamp
	129, // 118: fooddelivery.NewOrderEvent.placed_at:type_name -> google.protobuf.Timestamp
	34,  // 119: fooddelivery.FoodDeliveryGateway.RegisterUser:input_type -> fooddelivery.RegisterUserRequest
	37,  // 120: fooddelivery.FoodDeliveryGateway.LoginUser:input_type -> fooddelivery.LoginRequest
	28,  // 121: fooddelivery.FoodDeliveryGateway.GetUserProfile:input_type -> fooddelivery.UserRequest
	46,  // 122: fooddelivery.FoodDeliveryGateway.UpdateUserProfile:input_type -> fooddelivery.UpdateUserProfileRequest
	47,  // 123: fooddelivery.FoodDeliveryGateway.SearchRestaurants:input_type -> fooddelivery.SearchRestaurantsRequest
	29,  // 124: fooddelivery.FoodDeliveryGateway.GetRestaurantDetails:input_type -> fooddelivery.RestaurantRequest
	29,  // 125: fooddelivery.FoodDeliveryGateway.GetRestaurantMenu:input_type -> fooddelivery.RestaurantRequest
	58,  // 126: fooddelivery.FoodDeliveryGateway.CreateOrder:input_type -> fooddelivery.CreateOrderRequest
	30,  // 127: fooddelivery.FoodDeliveryGateway.GetOrderStatus:input_type -> fooddelivery.OrderRequest
	67,  // 128: fooddelivery.FoodDeliveryGateway.UpdateOrderStatus:input_type -> fooddelivery.UpdateOrderStatusRequest
	68,  // 129: fooddelivery.FoodDeliveryGateway.GetOrderHistory:input_type -> fooddelivery.OrderHistoryRequest
	30,  // 130: fooddelivery.FoodDeliveryGateway.CancelOrder:input_type -> fooddelivery.OrderRequest
	71,  // 131: fooddelivery.FoodDeliveryGateway.UpdateDriverLocation:input_type -> fooddelivery.UpdateDriverLocationRequest
	31,  // 132: fooddelivery.FoodDeliveryGateway.GetAvailableOrders:input_type -> fooddelivery.DriverRequest
	74,  // 133: fooddelivery.FoodDeliveryGateway.AcceptOrder:input_type -> fooddelivery.AcceptOrderRequest
	75,  // 134: fooddelivery.FoodDeliveryGateway.CompleteDelivery:input_type -> fooddelivery.CompleteDeliveryRequest
	76,  // 135: fooddelivery.FoodDeliveryGateway.ProcessPayment:input_type -> fooddelivery.ProcessPaymentRequest
	78,  // 136: fooddelivery.FoodDeliveryGateway.RefundPayment:input_type -> fooddelivery.RefundRequest
	79,  // 137: fooddelivery.FoodDeliveryGateway.ApplyPromotion:input_type -> fooddelivery.ApplyPromotionRequest
	28,  // 138: fooddelivery.FoodDeliveryGateway.GetAvailablePromotions:input_type -> fooddelivery.UserRequest
	83,  // 139: fooddelivery.FoodDeliveryGateway.CreateSupportTicket:input_type -> fooddelivery.CreateTicketRequest
	32,  // 140: fooddelivery.FoodDeliveryGateway.GetTicketStatus:input_type -> fooddelivery.TicketRequest
	86,  // 141: fooddelivery.FoodDeliveryGateway.AddTicketMessage:input_type -> fooddelivery.AddTicketMessageRequest
	28,  // 142: fooddelivery.FoodDeliveryGateway.GetUserNotifications:input_type -> fooddelivery.UserRequest
	33,  // 143: fooddelivery.FoodDeliveryGateway.MarkNotificationAsRead:input_type -> fooddelivery.NotificationRequest
	121, // 144: fooddelivery.FoodDeliveryGateway.SubscribeToOrderUpdates:input_type -> fooddelivery.OrderSubscriptionRequest
	123, // 145: fooddelivery.FoodDeliveryGateway.SubscribeToDriverLocation:input_type -> fooddelivery.DriverLocationSubscriptionRequest
	125, // 146: fooddelivery.FoodDeliveryGateway.SubscribeToNotifications:input_type -> fooddelivery.NotificationSubscriptionRequest
	127, // 147: fooddelivery.FoodDeliveryGateway.SubscribeToNewOrders:input_type -> fooddelivery.RestaurantSubscriptionRequest
	109, // 148: fooddelivery.FoodDeliveryGateway.GetSystemStats:input_type -> fooddelivery.SystemStatsRequest
	112, // 149: fooddelivery.FoodDeliveryGateway.GetActiveDrivers:input_type -> fooddelivery.DriverLocationRequest
	115, // 150: fooddelivery.FoodDeliveryGateway.CreatePromotion:input_type -> fooddelivery.CreatePromotionRequest
	116, // 151: fooddelivery.FoodDeliveryGateway.UpdatePromotion:input_type -> fooddelivery.UpdatePromotionRequest
	117, // 152: fooddelivery.FoodDeliveryGateway.ManageUser:input_type -> fooddelivery.ManageUserRequest
	118, // 153: fooddelivery.FoodDeliveryGateway.GetSupportTickets:input_type -> fooddelivery.SupportTicketsRequest
	120, // 154: fooddelivery.FoodDeliveryGateway.AssignTicket:input_type -> fooddelivery.AssignTicketRequest
	90,  // 155: fooddelivery.FoodDeliveryGateway.CreateRestaurant:input_type -> fooddelivery.CreateRestaurantRequest
	91,  // 156: fooddelivery.FoodDeliveryGateway.UpdateRestaurant:input_type -> fooddelivery.UpdateRestaurantRequest
	92,  // 157: fooddelivery.FoodDeliveryGateway.CreateMenuItem:input_type -> fooddelivery.CreateMenuItemRequest
	93,  // 158: fooddelivery.FoodDeliveryGateway.UpdateMenuItem:input_type -> fooddelivery.UpdateMenuItemRequest
	94,  // 159: fooddelivery.FoodDeliveryGateway.DeleteMenuItem:input_type -> fooddelivery.MenuItemRequest
	29,  // 160: fooddelivery.FoodDeliveryGateway.GetPendingOrders:input_type -> fooddelivery.RestaurantRequest
	97,  // 161: fooddelivery.FoodDeliveryGateway.UpdateOrderPreparationStatus:input_type -> fooddelivery.UpdatePreparationStatusRequest
	98,  // 162: fooddelivery.FoodDeliveryGateway.GetRestaurantAnalytics:input_type -> fooddelivery.RestaurantAnalyticsRequest
	39,  // 163: fooddelivery.FoodDeliveryGateway.RegisterUser:output_type -> fooddelivery.UserResponse
	38,  // 164: fooddelivery.FoodDeliveryGateway.LoginUser:output_type -> fooddelivery.AuthResponse
	40,  // 165: fooddelivery.FoodDeliveryGateway.GetUserProfile:output_type -> fooddelivery.UserProfileResponse
	40,  // 166: fooddelivery.FoodDeliveryGateway.UpdateUserProfile:output_type -> fooddelivery.UserProfileResponse
	49,  // 167: fooddelivery.FoodDeliveryGateway.SearchRestaurants:output_type -> fooddelivery.RestaurantsResponse
	51,  // 168: fooddelivery.FoodDeliveryGateway.GetRestaurantDetails:output_type -> fooddelivery.RestaurantResponse
	53,  // 169: fooddelivery.FoodDeliveryGateway.GetRestaurantMenu:output_type -> fooddelivery.MenuResponse
	61,  // 170: fooddelivery.FoodDeliveryGateway.CreateOrder:output_type -> fooddelivery.OrderResponse
	66,  // 171: fooddelivery.FoodDeliveryGateway.GetOrderStatus:output_type -> fooddelivery.OrderStatusResponse
	66,  // 172: fooddelivery.FoodDeliveryGateway.UpdateOrderStatus:output_type -> fooddelivery.OrderStatusResponse
	69,  // 173: fooddelivery.FoodDeliveryGateway.GetOrderHistory:output_type -> fooddelivery.OrderHistoryResponse
	66,  // 174: fooddelivery.FoodDeliveryGateway.CancelOrder:output_type -> fooddelivery.OrderStatusResponse
	130, // 175: fooddelivery.FoodDeliveryGateway.UpdateDriverLocation:output_type -> google.protobuf.Empty
	72,  // 176: fooddelivery.FoodDeliveryGateway.GetAvailableOrders:output_type -> fooddelivery.AvailableOrdersResponse
	61,  // 177: fooddelivery.FoodDeliveryGateway.AcceptOrder:output_type -> fooddelivery.OrderResponse
	61,  // 178: fooddelivery.FoodDeliveryGateway.CompleteDelivery:output_type -> fooddelivery.OrderResponse
	77,  // 179: fooddelivery.FoodDeliveryGateway.ProcessPayment:output_type -> fooddelivery.PaymentResponse
	77,  // 180: fooddelivery.FoodDeliveryGateway.RefundPayment:output_type -> fooddelivery.PaymentResponse
	80,  // 181: fooddelivery.FoodDeliveryGateway.ApplyPromotion:output_type -> fooddelivery.PromotionResponse
	81,  // 182: fooddelivery.FoodDeliveryGateway.GetAvailablePromotions:output_type -> fooddelivery.PromotionsResponse
	84,  // 183: fooddelivery.FoodDeliveryGateway.CreateSupportTicket:output_type -> fooddelivery.TicketResponse
	84,  // 184: fooddelivery.FoodDeliveryGateway.GetTicketStatus:output_type -> fooddelivery.TicketResponse
	87,  // 185: fooddelivery.FoodDeliveryGateway.AddTicketMessage:output_type -> fooddelivery.TicketMessageResponse
	88,  // 186: fooddelivery.FoodDeliveryGateway.GetUserNotifications:output_type -> fooddelivery.NotificationsResponse
	130, // 187: fooddelivery.FoodDeliveryGateway.MarkNotificationAsRead:output_type -> google.protobuf.Empty
	122, // 188: fooddelivery.FoodDeliveryGateway.SubscribeToOrderUpdates:output_type -> fooddelivery.OrderStatusUpdate
	124, // 189: fooddelivery.FoodDeliveryGateway.SubscribeToDriverLocation:output_type -> fooddelivery.DriverLocationUpdate
	126, // 190: fooddelivery.FoodDeliveryGateway.SubscribeToNotifications:output_type -> fooddelivery.NotificationEvent
	128, // 191: fooddelivery.FoodDeliveryGateway.SubscribeToNewOrders:output_type -> fooddelivery.NewOrderEvent
	110, // 192: fooddelivery.FoodDeliveryGateway.GetSystemStats:output_type -> fooddelivery.SystemStatsResponse
	113, // 193: fooddelivery.FoodDeliveryGateway.GetActiveDrivers:output_type -> fooddelivery.ActiveDriversResponse
	82,  // 194: fooddelivery.FoodDeliveryGateway.CreatePromotion:output_type -> fooddelivery.PromotionInfo
	82,  // 195: fooddelivery.FoodDeliveryGateway.UpdatePromotion:output_type -> fooddelivery.PromotionInfo
	39,  // 196: fooddelivery.FoodDeliveryGateway.ManageUser:output_type -> fooddelivery.UserResponse
	119, // 197: fooddelivery.FoodDeliveryGateway.GetSupportTickets:output_type -> fooddelivery.SupportTicketsResponse
	84,  // 198: fooddelivery.FoodDeliveryGateway.AssignTicket:output_type -> fooddelivery.TicketResponse
	51,  // 199: fooddelivery.FoodDeliveryGateway.CreateRestaurant:output_type -> fooddelivery.RestaurantResponse
	51,  // 200: fooddelivery.FoodDeliveryGateway.UpdateRestaurant:output_type -> fooddelivery.RestaurantResponse
	95,  // 201: fooddelivery.FoodDeliveryGateway.CreateMenuItem:output_type -> fooddelivery.MenuItemResponse
	95,  // 202: fooddelivery.FoodDeliveryGateway.UpdateMenuItem:output_type -> fooddelivery.MenuItemResponse
	130, // 203: fooddelivery.FoodDeliveryGateway.DeleteMenuItem:output_type -> google.protobuf.Empty
	96,  // 204: fooddelivery.FoodDeliveryGateway.GetPendingOrders:output_type -> fooddelivery.RestaurantOrdersResponse
	66,  // 205: fooddelivery.FoodDeliveryGateway.UpdateOrderPreparationStatus:output_type -> fooddelivery.OrderStatusResponse
	99,  // 206: fooddelivery.FoodDeliveryGateway.GetRestaurantAnalytics:output_type -> fooddelivery.RestaurantAnalyticsResponse
	163, // [163:207] is the sub-list for method output_type
	119, // [119:163] is the sub-list for method input_type
	119, // [119:119] is the sub-list for extension type_name
	119, // [119:119] is the sub-list for extension extendee
	0,   // [0:119] is the sub-list for field type_name
}

func init() { file_doordash_service_service_proto_init() }
func file_doordash_service_service_proto_init() {
	if File_doordash_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doordash_service_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DriverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DriverDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantStaffDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UserProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentMethodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CustomerPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DriverProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRestaurantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*OperatingHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*MenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*MenuCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*MenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CustomizationOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CustomizationChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CustomizationSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*OrderItemDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CustomizationDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*OrderPricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*DriverInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*OrderStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOrderStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*OrderHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*OrderHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*OrderSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDriverLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*AvailableOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*AvailableOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteDeliveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*RefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ApplyPromotionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*PromotionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*PromotionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*TicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*TicketMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*AddTicketMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*TicketMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRestaurantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRestaurantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*CreateMenuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*MenuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*MenuItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePreparationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantAnalyticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantAnalyticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*SalesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*DailySales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*HourlySales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*OrdersData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*ItemsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*TopMenuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*CategoryPerformance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*CustomersData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*TopCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*SystemStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*SystemStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*RegionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*DriverLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*ActiveDriversResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*ActiveDriver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePromotionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePromotionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*ManageUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*SupportTicketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*SupportTicketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*AssignTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*OrderSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*OrderStatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*DriverLocationSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*DriverLocationUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*RestaurantSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doordash_service_service_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*NewOrderEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doordash_service_service_proto_rawDesc,
			NumEnums:      28,
			NumMessages:   101,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doordash_service_service_proto_goTypes,
		DependencyIndexes: file_doordash_service_service_proto_depIdxs,
		EnumInfos:         file_doordash_service_service_proto_enumTypes,
		MessageInfos:      file_doordash_service_service_proto_msgTypes,
	}.Build()
	File_doordash_service_service_proto = out.File
	file_doordash_service_service_proto_rawDesc = nil
	file_doordash_service_service_proto_goTypes = nil
	file_doordash_service_service_proto_depIdxs = nil
}
